{
	"id": "908590652a4e7bbd7fe6d6299600ac04",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract VotingUSP is ERC721 {\n    uint256 public nextTokenId;\n    uint256 public votingEther = 0.000000000000000000 ether;\n    mapping(address => string) public admins; // admin -> nome\n    mapping(address => string) public candidates_names; // candidato -> nome\n    mapping(address => address) public votes; // pessoa -> candidato\n    mapping(address => uint256) public num_votes; // candidatos -> número de votos\n\n    constructor() ERC721(\"VotingUSP\", \"MTK\") {\n        admins[msg.sender] = \"Admin\"; // Define um nome padrão para o primeiro administrador\n    }\n\n    modifier adminsOnly() {\n        require(bytes(admins[msg.sender]).length > 0, 'Only admins can execute this function');\n        _;\n    }\n\n    // Adiciona um novo administrador\n    function addAdmim(address admim_adress, string memory name) external adminsOnly {\n        admins[admim_adress] = name;\n    }\n\n    // Remove um administrador\n    function deleteAdmim(address admim_adress) external adminsOnly {\n        delete admins[admim_adress];\n    }\n\n    // Adiciona um novo candidato\n    function addCandidate(address candidate_adress, string memory name) external adminsOnly {\n        candidates_names[candidate_adress] = name;\n        num_votes[candidate_adress] = 0;\n    }\n\n    // Remove um candidato\n    function deleteandidate(address candidate_adress) external adminsOnly {\n        delete candidates_names[candidate_adress];\n        delete num_votes[candidate_adress];\n    }\n\n    // Retorna o número de votos recebidos por um candidato\n    function showVotesCandidate(address candidate_adress) external view returns(uint256) {\n        return num_votes[candidate_adress];\n    }\n\n    // Retorna o candidato escolhido pelo eleitor\n    function showMyVote() external view returns (string memory) {\n        address voter = msg.sender;\n        address candidateAddress = votes[voter];\n\n        // Verifica se o eleitor já votou\n        require(candidateAddress != address(0), \"You haven't voted yet\");\n\n        string memory candidateName = candidates_names[candidateAddress];\n        return candidateName;\n    }\n\n    // Realiza um voto\n    function vote(address candidate_adress) external payable {\n        address voter = msg.sender;\n        uint256 votingValue = msg.value;\n\n        require(bytes(candidates_names[candidate_adress]).length > 0, 'Candidate not registered');\n        require(votes[voter] == address(0), 'Address has already voted');\n        require(votingValue >= votingEther, 'Insufficient voting value');\n\n        // Registra o voto\n        num_votes[voter] = num_votes[voter] + 1;\n        votes[voter] = candidate_adress;\n\n        // Cria o NFT (Token Não Fungível)\n        uint256 tokenId = nextTokenId;\n        _safeMint(voter, tokenId);\n\n        // Incrementa o próximo tokenId para o próximo voto\n        nextTokenId++;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bae45ad6b058768c0faaddcdb1df35a0c4fba39f9095558b8a388fc01eaefe2764736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bae45ad6b058768c0faaddcdb1df35a0c4fba39f9095558b8a388fc01eaefe2764736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xE4 GAS 0xD6 0xB0 PC PUSH23 0x8C0FAADDCDB1DF35A0C4FBA39F9095558B8A388FC01EAE INVALID 0x27 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "251:2847:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bae45ad6b058768c0faaddcdb1df35a0c4fba39f9095558b8a388fc01eaefe2764736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xE4 GAS 0xD6 0xB0 PC PUSH23 0x8C0FAADDCDB1DF35A0C4FBA39F9095558B8A388FC01EAE INVALID 0x27 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "251:2847:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bae45ad6b058768c0faaddcdb1df35a0c4fba39f9095558b8a388fc01eaefe2764736f6c63430008170033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202a69264d6db9985d5f8e54f6b68895f33315c58e4c7a24643283a4c61cbe239b64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202a69264d6db9985d5f8e54f6b68895f33315c58e4c7a24643283a4c61cbe239b64736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A PUSH10 0x264D6DB9985D5F8E54F6 0xB6 DUP9 SWAP6 RETURN CALLER ISZERO 0xC5 DUP15 0x4C PUSH27 0x24643283A4C61CBE239B64736F6C63430008170033000000000000 ",
							"sourceMap": "203:14914:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202a69264d6db9985d5f8e54f6b68895f33315c58e4c7a24643283a4c61cbe239b64736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A PUSH10 0x264D6DB9985D5F8E54F6 0xB6 DUP9 SWAP6 RETURN CALLER ISZERO 0xC5 DUP15 0x4C PUSH27 0x24643283A4C61CBE239B64736F6C63430008170033000000000000 ",
							"sourceMap": "203:14914:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a69264d6db9985d5f8e54f6b68895f33315c58e4c7a24643283a4c61cbe239b64736f6c63430008170033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122027e802c24aacf9a22e45d7528c4e045ff7300d7901d524b1b1554485c399858164736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122027e802c24aacf9a22e45d7528c4e045ff7300d7901d524b1b1554485c399858164736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xE8 MUL 0xC2 0x4A 0xAC 0xF9 LOG2 0x2E GASLIMIT 0xD7 MSTORE DUP13 0x4E DIV PUSH0 0xF7 ADDRESS 0xD PUSH26 0x1D524B1B1554485C399858164736F6C63430008170033000000 ",
							"sourceMap": "216:1047:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122027e802c24aacf9a22e45d7528c4e045ff7300d7901d524b1b1554485c399858164736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xE8 MUL 0xC2 0x4A 0xAC 0xF9 LOG2 0x2E GASLIMIT 0xD7 MSTORE DUP13 0x4E DIV PUSH0 0xF7 ADDRESS 0xD PUSH26 0x1D524B1B1554485C399858164736F6C63430008170033000000 ",
							"sourceMap": "216:1047:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122027e802c24aacf9a22e45d7528c4e045ff7300d7901d524b1b1554485c399858164736f6c63430008170033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"VotingUSP": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admim_adress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "addAdmim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate_adress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "addCandidate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "admins",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "candidates_names",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admim_adress",
									"type": "address"
								}
							],
							"name": "deleteAdmim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate_adress",
									"type": "address"
								}
							],
							"name": "deleteandidate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "num_votes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "showMyVote",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate_adress",
									"type": "address"
								}
							],
							"name": "showVotesCandidate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate_adress",
									"type": "address"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "votes",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "votingEther",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":117:2945  contract VotingUSP is ERC721 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":213:239  0.000000000000000000 ether */\n  0x00\n    /* \"contracts/MyToken.sol\":184:239  uint256 public votingEther = 0.000000000000000000 ether */\n  0x07\n  sstore\n    /* \"contracts/MyToken.sol\":539:681  constructor() ERC721(\"VotingUSP\", \"MTK\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x566f74696e675553500000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":590:618  admins[msg.sender] = \"Admin\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x41646d696e000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/MyToken.sol\":590:596  admins */\n  0x08\n    /* \"contracts/MyToken.sol\":590:608  admins[msg.sender] */\n  0x00\n    /* \"contracts/MyToken.sol\":597:607  msg.sender */\n  caller\n    /* \"contracts/MyToken.sol\":590:608  admins[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":590:618  admins[msg.sender] = \"Admin\" */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/MyToken.sol\":117:2945  contract VotingUSP is ERC721 {... */\n  jump(tag_10)\n    /* \"#utility.yul\":7:106   */\ntag_11:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_12:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_13:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_14:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_36:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_38\n  tag_13\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":714:798   */\ntag_37:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_15:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_16:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_17:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_18:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_43\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_17\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1429:1468   */\n  tag_44\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_17\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_19:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_20:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_21:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_48\n    /* \"#utility.yul\":1818:1852   */\n  tag_49\n    /* \"#utility.yul\":1827:1851   */\n  tag_50\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_19\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1818:1852   */\n  tag_20\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1800:1853   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_22:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_23:\n    /* \"#utility.yul\":2056:2095   */\n  tag_53\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_21\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2117:2208   */\n  tag_54\n    /* \"#utility.yul\":2166:2207   */\n  tag_55\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_22\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_24:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_25:\n    /* \"#utility.yul\":2377:2409   */\n  tag_58\n  tag_24\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2418:2483   */\n  tag_59\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_23\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_26:\n    /* \"#utility.yul\":2555:2675   */\ntag_61:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_64\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_61)\ntag_63:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_27:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_67\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2906:2935   */\n  tag_68\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_16\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_69:\n    /* \"#utility.yul\":3133:3213   */\n  tag_70\n    /* \"#utility.yul\":3189:3211   */\n  tag_71\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_16\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_26\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_66:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_28:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_29:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_74\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_28\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_30:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_76\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_29\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_78\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_11\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_80\n  tag_12\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4038:4094   */\ntag_79:\n    /* \"#utility.yul\":4118:4156   */\n  tag_81\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4203:4270   */\n  tag_82\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_27\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_85:\n    /* \"#utility.yul\":5144:5211   */\n  tag_86\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_30\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_83)\n    /* \"#utility.yul\":4365:4983   */\ntag_84:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_87\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_15\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_88:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_88)\ntag_90:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_92\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_29\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_91:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_83:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyToken.sol\":117:2945  contract VotingUSP is ERC721 {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":117:2945  contract VotingUSP is ERC721 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x9a594f06\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd8bff5a5\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_27\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x9a594f06\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb3849e2a\n      eq\n      tag_23\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x75794a3c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x78d66c39\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8a7c3a32\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8edfc059\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_28:\n      dup1\n      0x23b872dd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x429b62e5\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x429b62e5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x63f67b54\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6dd7d8ea\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3219ac2a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x12ee1b0b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23202fe3\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/MyToken.sol\":1395:1567  function deleteandidate(address candidate_adress) external adminsOnly {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/MyToken.sol\":308:358  mapping(address => string) public candidates_names */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/MyToken.sol\":1826:2201  function showMyVote() external view returns (string memory) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"contracts/MyToken.sol\":245:285  mapping(address => string) public admins */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":184:239  uint256 public votingEther = 0.000000000000000000 ether */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":2230:2943  function vote(address candidate_adress) external payable {... */\n    tag_14:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":152:178  uint256 public nextTokenId */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":454:498  mapping(address => uint256) public num_votes */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1634:1770  function showVotesCandidate(address candidate_adress) external view returns(uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":867:991  function addAdmim(address admim_adress, string memory name) external adminsOnly {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n    tag_118:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1175:1362  function addCandidate(address candidate_adress, string memory name) external adminsOnly {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      tag_134\n      jump\t// in\n    tag_131:\n      stop\n        /* \"contracts/MyToken.sol\":1028:1135  function deleteAdmim(address admim_adress) external adminsOnly {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      tag_143\n      jump\t// in\n    tag_140:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":385:425  mapping(address => address) public votes */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      tag_158\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_161\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_162\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_168\n      swap1\n      tag_167\n      jump\t// in\n    tag_168:\n      dup1\n      iszero\n      tag_169\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_170\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_169)\n    tag_170:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_171:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_171\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_173:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1395:1567  function deleteandidate(address candidate_adress) external adminsOnly {... */\n    tag_61:\n        /* \"contracts/MyToken.sol\":762:763  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":733:739  admins */\n      0x08\n        /* \"contracts/MyToken.sol\":733:751  admins[msg.sender] */\n      0x00\n        /* \"contracts/MyToken.sol\":740:750  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":733:751  admins[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":727:759  bytes(admins[msg.sender]).length */\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_167\n      jump\t// in\n    tag_183:\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":727:763  bytes(admins[msg.sender]).length > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":719:805  require(bytes(admins[msg.sender]).length > 0, 'Only admins can execute this function') */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/MyToken.sol\":1482:1498  candidates_names */\n      0x09\n        /* \"contracts/MyToken.sol\":1482:1516  candidates_names[candidate_adress] */\n      0x00\n        /* \"contracts/MyToken.sol\":1499:1515  candidate_adress */\n      dup3\n        /* \"contracts/MyToken.sol\":1482:1516  candidates_names[candidate_adress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyToken.sol\":1475:1516  delete candidates_names[candidate_adress] */\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"contracts/MyToken.sol\":1533:1542  num_votes */\n      0x0b\n        /* \"contracts/MyToken.sol\":1533:1560  num_votes[candidate_adress] */\n      0x00\n        /* \"contracts/MyToken.sol\":1543:1559  candidate_adress */\n      dup3\n        /* \"contracts/MyToken.sol\":1533:1560  num_votes[candidate_adress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":1526:1560  delete num_votes[candidate_adress] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/MyToken.sol\":1395:1567  function deleteandidate(address candidate_adress) external adminsOnly {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":308:358  mapping(address => string) public candidates_names */\n    tag_65:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      sload\n      tag_190\n      swap1\n      tag_167\n      jump\t// in\n    tag_190:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_191\n      swap1\n      tag_167\n      jump\t// in\n    tag_191:\n      dup1\n      iszero\n      tag_192\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_193\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_192)\n    tag_193:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_194:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_194\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1826:2201  function showMyVote() external view returns (string memory) {... */\n    tag_74:\n        /* \"contracts/MyToken.sol\":1871:1884  string memory */\n      0x60\n        /* \"contracts/MyToken.sol\":1896:1909  address voter */\n      0x00\n        /* \"contracts/MyToken.sol\":1912:1922  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1896:1922  address voter = msg.sender */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1932:1956  address candidateAddress */\n      0x00\n        /* \"contracts/MyToken.sol\":1959:1964  votes */\n      0x0a\n        /* \"contracts/MyToken.sol\":1959:1971  votes[voter] */\n      0x00\n        /* \"contracts/MyToken.sol\":1965:1970  voter */\n      dup4\n        /* \"contracts/MyToken.sol\":1959:1971  votes[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1932:1971  address candidateAddress = votes[voter] */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2061:2062  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2033:2063  candidateAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2033:2049  candidateAddress */\n      dup2\n        /* \"contracts/MyToken.sol\":2033:2063  candidateAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken.sol\":2025:2089  require(candidateAddress != address(0), \"You haven't voted yet\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"contracts/MyToken.sol\":2100:2127  string memory candidateName */\n      0x00\n        /* \"contracts/MyToken.sol\":2130:2146  candidates_names */\n      0x09\n        /* \"contracts/MyToken.sol\":2130:2164  candidates_names[candidateAddress] */\n      0x00\n        /* \"contracts/MyToken.sol\":2147:2163  candidateAddress */\n      dup4\n        /* \"contracts/MyToken.sol\":2130:2164  candidates_names[candidateAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":2100:2164  string memory candidateName = candidates_names[candidateAddress] */\n      dup1\n      sload\n      tag_208\n      swap1\n      tag_167\n      jump\t// in\n    tag_208:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_209\n      swap1\n      tag_167\n      jump\t// in\n    tag_209:\n      dup1\n      iszero\n      tag_210\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_211\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_210)\n    tag_211:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_212:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_212\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2181:2194  candidateName */\n      dup1\n        /* \"contracts/MyToken.sol\":2174:2194  return candidateName */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":1826:2201  function showMyVote() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":245:285  mapping(address => string) public admins */\n    tag_83:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      sload\n      tag_215\n      swap1\n      tag_167\n      jump\t// in\n    tag_215:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_216\n      swap1\n      tag_167\n      jump\t// in\n    tag_216:\n      dup1\n      iszero\n      tag_217\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_218\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_217)\n    tag_218:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_219:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_219\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":184:239  uint256 public votingEther = 0.000000000000000000 ether */\n    tag_92:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2230:2943  function vote(address candidate_adress) external payable {... */\n    tag_97:\n        /* \"contracts/MyToken.sol\":2297:2310  address voter */\n      0x00\n        /* \"contracts/MyToken.sol\":2313:2323  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2297:2323  address voter = msg.sender */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2333:2352  uint256 votingValue */\n      0x00\n        /* \"contracts/MyToken.sol\":2355:2364  msg.value */\n      callvalue\n        /* \"contracts/MyToken.sol\":2333:2364  uint256 votingValue = msg.value */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2434:2435  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2389:2405  candidates_names */\n      0x09\n        /* \"contracts/MyToken.sol\":2389:2423  candidates_names[candidate_adress] */\n      0x00\n        /* \"contracts/MyToken.sol\":2406:2422  candidate_adress */\n      dup6\n        /* \"contracts/MyToken.sol\":2389:2423  candidates_names[candidate_adress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":2383:2431  bytes(candidates_names[candidate_adress]).length */\n      dup1\n      sload\n      tag_223\n      swap1\n      tag_167\n      jump\t// in\n    tag_223:\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2383:2435  bytes(candidates_names[candidate_adress]).length > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":2375:2464  require(bytes(candidates_names[candidate_adress]).length > 0, 'Candidate not registered') */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/MyToken.sol\":2506:2507  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2482:2508  votes[voter] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2482:2487  votes */\n      0x0a\n        /* \"contracts/MyToken.sol\":2482:2494  votes[voter] */\n      0x00\n        /* \"contracts/MyToken.sol\":2488:2493  voter */\n      dup5\n        /* \"contracts/MyToken.sol\":2482:2494  votes[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2482:2508  votes[voter] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":2474:2538  require(votes[voter] == address(0), 'Address has already voted') */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"contracts/MyToken.sol\":2571:2582  votingEther */\n      sload(0x07)\n        /* \"contracts/MyToken.sol\":2556:2567  votingValue */\n      dup2\n        /* \"contracts/MyToken.sol\":2556:2582  votingValue >= votingEther */\n      lt\n      iszero\n        /* \"contracts/MyToken.sol\":2548:2612  require(votingValue >= votingEther, 'Insufficient voting value') */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"contracts/MyToken.sol\":2688:2689  1 */\n      0x01\n        /* \"contracts/MyToken.sol\":2669:2678  num_votes */\n      0x0b\n        /* \"contracts/MyToken.sol\":2669:2685  num_votes[voter] */\n      0x00\n        /* \"contracts/MyToken.sol\":2679:2684  voter */\n      dup5\n        /* \"contracts/MyToken.sol\":2669:2685  num_votes[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":2669:2689  num_votes[voter] + 1 */\n      tag_233\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"contracts/MyToken.sol\":2650:2659  num_votes */\n      0x0b\n        /* \"contracts/MyToken.sol\":2650:2666  num_votes[voter] */\n      0x00\n        /* \"contracts/MyToken.sol\":2660:2665  voter */\n      dup5\n        /* \"contracts/MyToken.sol\":2650:2666  num_votes[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":2650:2689  num_votes[voter] = num_votes[voter] + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2714:2730  candidate_adress */\n      dup3\n        /* \"contracts/MyToken.sol\":2699:2704  votes */\n      0x0a\n        /* \"contracts/MyToken.sol\":2699:2711  votes[voter] */\n      0x00\n        /* \"contracts/MyToken.sol\":2705:2710  voter */\n      dup5\n        /* \"contracts/MyToken.sol\":2699:2711  votes[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyToken.sol\":2699:2730  votes[voter] = candidate_adress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2786:2801  uint256 tokenId */\n      0x00\n        /* \"contracts/MyToken.sol\":2804:2815  nextTokenId */\n      sload(0x06)\n        /* \"contracts/MyToken.sol\":2786:2815  uint256 tokenId = nextTokenId */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2825:2850  _safeMint(voter, tokenId) */\n      tag_235\n        /* \"contracts/MyToken.sol\":2835:2840  voter */\n      dup4\n        /* \"contracts/MyToken.sol\":2842:2849  tokenId */\n      dup3\n        /* \"contracts/MyToken.sol\":2825:2834  _safeMint */\n      tag_236\n        /* \"contracts/MyToken.sol\":2825:2850  _safeMint(voter, tokenId) */\n      jump\t// in\n    tag_235:\n        /* \"contracts/MyToken.sol\":2923:2934  nextTokenId */\n      0x06\n      0x00\n        /* \"contracts/MyToken.sol\":2923:2936  nextTokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2287:2943  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":2230:2943  function vote(address candidate_adress) external payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":152:178  uint256 public nextTokenId */\n    tag_105:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":454:498  mapping(address => uint256) public num_votes */\n    tag_110:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1634:1770  function showVotesCandidate(address candidate_adress) external view returns(uint256) {... */\n    tag_115:\n        /* \"contracts/MyToken.sol\":1710:1717  uint256 */\n      0x00\n        /* \"contracts/MyToken.sol\":1736:1745  num_votes */\n      0x0b\n        /* \"contracts/MyToken.sol\":1736:1763  num_votes[candidate_adress] */\n      0x00\n        /* \"contracts/MyToken.sol\":1746:1762  candidate_adress */\n      dup4\n        /* \"contracts/MyToken.sol\":1736:1763  num_votes[candidate_adress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyToken.sol\":1729:1763  return num_votes[candidate_adress] */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":1634:1770  function showVotesCandidate(address candidate_adress) external view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":867:991  function addAdmim(address admim_adress, string memory name) external adminsOnly {... */\n    tag_121:\n        /* \"contracts/MyToken.sol\":762:763  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":733:739  admins */\n      0x08\n        /* \"contracts/MyToken.sol\":733:751  admins[msg.sender] */\n      0x00\n        /* \"contracts/MyToken.sol\":740:750  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":733:751  admins[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":727:759  bytes(admins[msg.sender]).length */\n      dup1\n      sload\n      tag_244\n      swap1\n      tag_167\n      jump\t// in\n    tag_244:\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":727:763  bytes(admins[msg.sender]).length > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":719:805  require(bytes(admins[msg.sender]).length > 0, 'Only admins can execute this function') */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_186\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"contracts/MyToken.sol\":980:984  name */\n      dup1\n        /* \"contracts/MyToken.sol\":957:963  admins */\n      0x08\n        /* \"contracts/MyToken.sol\":957:977  admins[admim_adress] */\n      0x00\n        /* \"contracts/MyToken.sol\":964:976  admim_adress */\n      dup5\n        /* \"contracts/MyToken.sol\":957:977  admins[admim_adress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":957:984  admins[admim_adress] = name */\n      swap1\n      dup2\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      pop\n        /* \"contracts/MyToken.sol\":867:991  function addAdmim(address admim_adress, string memory name) external adminsOnly {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_251\n      swap1\n      tag_167\n      jump\t// in\n    tag_251:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_252\n      swap1\n      tag_167\n      jump\t// in\n    tag_252:\n      dup1\n      iszero\n      tag_253\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_254\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_253)\n    tag_254:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_255:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_255\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1175:1362  function addCandidate(address candidate_adress, string memory name) external adminsOnly {... */\n    tag_129:\n        /* \"contracts/MyToken.sol\":762:763  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":733:739  admins */\n      0x08\n        /* \"contracts/MyToken.sol\":733:751  admins[msg.sender] */\n      0x00\n        /* \"contracts/MyToken.sol\":740:750  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":733:751  admins[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":727:759  bytes(admins[msg.sender]).length */\n      dup1\n      sload\n      tag_257\n      swap1\n      tag_167\n      jump\t// in\n    tag_257:\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":727:763  bytes(admins[msg.sender]).length > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":719:805  require(bytes(admins[msg.sender]).length > 0, 'Only admins can execute this function') */\n      tag_258\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap1\n      tag_186\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_258:\n        /* \"contracts/MyToken.sol\":1310:1314  name */\n      dup1\n        /* \"contracts/MyToken.sol\":1273:1289  candidates_names */\n      0x09\n        /* \"contracts/MyToken.sol\":1273:1307  candidates_names[candidate_adress] */\n      0x00\n        /* \"contracts/MyToken.sol\":1290:1306  candidate_adress */\n      dup5\n        /* \"contracts/MyToken.sol\":1273:1307  candidates_names[candidate_adress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":1273:1314  candidates_names[candidate_adress] = name */\n      swap1\n      dup2\n      tag_261\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_261:\n      pop\n        /* \"contracts/MyToken.sol\":1354:1355  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1324:1333  num_votes */\n      0x0b\n        /* \"contracts/MyToken.sol\":1324:1351  num_votes[candidate_adress] */\n      0x00\n        /* \"contracts/MyToken.sol\":1334:1350  candidate_adress */\n      dup5\n        /* \"contracts/MyToken.sol\":1324:1351  num_votes[candidate_adress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":1324:1355  num_votes[candidate_adress] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1175:1362  function addCandidate(address candidate_adress, string memory name) external adminsOnly {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1028:1135  function deleteAdmim(address admim_adress) external adminsOnly {... */\n    tag_138:\n        /* \"contracts/MyToken.sol\":762:763  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":733:739  admins */\n      0x08\n        /* \"contracts/MyToken.sol\":733:751  admins[msg.sender] */\n      0x00\n        /* \"contracts/MyToken.sol\":740:750  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":733:751  admins[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":727:759  bytes(admins[msg.sender]).length */\n      dup1\n      sload\n      tag_267\n      swap1\n      tag_167\n      jump\t// in\n    tag_267:\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":727:763  bytes(admins[msg.sender]).length > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":719:805  require(bytes(admins[msg.sender]).length > 0, 'Only admins can execute this function') */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_186\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"contracts/MyToken.sol\":1108:1114  admins */\n      0x08\n        /* \"contracts/MyToken.sol\":1108:1128  admins[admim_adress] */\n      0x00\n        /* \"contracts/MyToken.sol\":1115:1127  admim_adress */\n      dup3\n        /* \"contracts/MyToken.sol\":1108:1128  admins[admim_adress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyToken.sol\":1101:1128  delete admins[admim_adress] */\n      tag_271\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_271:\n        /* \"contracts/MyToken.sol\":1028:1135  function deleteAdmim(address admim_adress) external adminsOnly {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_277:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_280\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_281)\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_284\n      swap3\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":385:425  mapping(address => address) public votes */\n    tag_152:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_308\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_312\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_317\n      jump\t// in\n    tag_316:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_318\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_319\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      0x01\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_321\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_326\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_325)\n    tag_326:\n      0x60\n      swap2\n      pop\n    tag_325:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_335\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_336\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_337\n      jumpi\n      tag_338\n      tag_339\n      jump\t// in\n    tag_338:\n    tag_337:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_340\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_340:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_343\n      jumpi\n      tag_344\n      tag_345\n      jump\t// in\n    tag_344:\n    tag_343:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_341\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_349\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_352\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_353\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_354\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_356\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_359\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_360\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_361\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_363\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_365\n      swap3\n      swap2\n      swap1\n      tag_366\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_368\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_369\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_370\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_373\n      jumpi\n      tag_374\n      tag_345\n      jump\t// in\n    tag_374:\n    tag_373:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_375\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_376\n      jumpi\n      tag_377\n      tag_345\n      jump\t// in\n    tag_377:\n    tag_376:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_375:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_379\n      jumpi\n      tag_380\n      tag_345\n      jump\t// in\n    tag_380:\n    tag_379:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_382\n      jumpi\n      tag_383\n      tag_345\n      jump\t// in\n    tag_383:\n    tag_382:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_384\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_385\n      jumpi\n      tag_386\n      tag_345\n      jump\t// in\n    tag_386:\n    tag_385:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_384:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_387\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_388\n      jumpi\n      tag_389\n      tag_345\n      jump\t// in\n    tag_389:\n    tag_388:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_387:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_390\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_390:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_392\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_393\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_394\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_393:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_395\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_396\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_392:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_369:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_398\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_399\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_399:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_398:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_400\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_400:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_401\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_402\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_402:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_401:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n    tag_189:\n      pop\n      dup1\n      sload\n      tag_403\n      swap1\n      tag_167\n      jump\t// in\n    tag_403:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_405\n      jumpi\n      pop\n      jump(tag_404)\n    tag_405:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_406\n      swap2\n      swap1\n      tag_407\n      jump\t// in\n    tag_406:\n    tag_404:\n      pop\n      jump\t// out\n    tag_407:\n    tag_408:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_409\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_408)\n    tag_409:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_410:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_411:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_412:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_413:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_414:\n        /* \"#utility.yul\":561:584   */\n      tag_484\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_413\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_485:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_415:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_487\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_414\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_36:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_490\n      tag_411\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":833:952   */\n    tag_489:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_491\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_415\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_416:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_417:\n        /* \"#utility.yul\":1268:1289   */\n      tag_494\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_416\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_39:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_496\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_417\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_418:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_419:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_420:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_500:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_500)\n    tag_502:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_421:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_422:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_505\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_418\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":2329:2400   */\n      tag_506\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_419\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_507\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_420\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":2499:2528   */\n      tag_508\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_421\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_44:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_510\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_422\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_423:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_424:\n        /* \"#utility.yul\":3016:3040   */\n      tag_513\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_423\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_514\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_514:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_425:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_516\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_424\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_48:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_519\n      tag_411\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":3292:3411   */\n    tag_518:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_520\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_425\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_426:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_427:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_523\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_426\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_428:\n        /* \"#utility.yul\":3872:3896   */\n      tag_525\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_427\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_51:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_527\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_428\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_429:\n        /* \"#utility.yul\":4210:4234   */\n      tag_529\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_427\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_530\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_530:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_430:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_532\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_429\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_55:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_535\n      tag_411\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":4503:4622   */\n    tag_534:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_536\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_430\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_537\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_425\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5219   */\n    tag_60:\n        /* \"#utility.yul\":4949:4955   */\n      0x00\n        /* \"#utility.yul\":4998:5000   */\n      0x20\n        /* \"#utility.yul\":4986:4995   */\n      dup3\n        /* \"#utility.yul\":4977:4984   */\n      dup5\n        /* \"#utility.yul\":4973:4996   */\n      sub\n        /* \"#utility.yul\":4969:5001   */\n      slt\n        /* \"#utility.yul\":4966:5085   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":5004:5083   */\n      tag_540\n      tag_411\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":4966:5085   */\n    tag_539:\n        /* \"#utility.yul\":5124:5125   */\n      0x00\n        /* \"#utility.yul\":5149:5202   */\n      tag_541\n        /* \"#utility.yul\":5194:5201   */\n      dup5\n        /* \"#utility.yul\":5185:5191   */\n      dup3\n        /* \"#utility.yul\":5174:5183   */\n      dup6\n        /* \"#utility.yul\":5170:5192   */\n      add\n        /* \"#utility.yul\":5149:5202   */\n      tag_430\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":5139:5202   */\n      swap2\n      pop\n        /* \"#utility.yul\":5095:5212   */\n      pop\n        /* \"#utility.yul\":4890:5219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5225:5844   */\n    tag_70:\n        /* \"#utility.yul\":5302:5308   */\n      0x00\n        /* \"#utility.yul\":5310:5316   */\n      dup1\n        /* \"#utility.yul\":5318:5324   */\n      0x00\n        /* \"#utility.yul\":5367:5369   */\n      0x60\n        /* \"#utility.yul\":5355:5364   */\n      dup5\n        /* \"#utility.yul\":5346:5353   */\n      dup7\n        /* \"#utility.yul\":5342:5365   */\n      sub\n        /* \"#utility.yul\":5338:5370   */\n      slt\n        /* \"#utility.yul\":5335:5454   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":5373:5452   */\n      tag_544\n      tag_411\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":5335:5454   */\n    tag_543:\n        /* \"#utility.yul\":5493:5494   */\n      0x00\n        /* \"#utility.yul\":5518:5571   */\n      tag_545\n        /* \"#utility.yul\":5563:5570   */\n      dup7\n        /* \"#utility.yul\":5554:5560   */\n      dup3\n        /* \"#utility.yul\":5543:5552   */\n      dup8\n        /* \"#utility.yul\":5539:5561   */\n      add\n        /* \"#utility.yul\":5518:5571   */\n      tag_430\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":5508:5571   */\n      swap4\n      pop\n        /* \"#utility.yul\":5464:5581   */\n      pop\n        /* \"#utility.yul\":5620:5622   */\n      0x20\n        /* \"#utility.yul\":5646:5699   */\n      tag_546\n        /* \"#utility.yul\":5691:5698   */\n      dup7\n        /* \"#utility.yul\":5682:5688   */\n      dup3\n        /* \"#utility.yul\":5671:5680   */\n      dup8\n        /* \"#utility.yul\":5667:5689   */\n      add\n        /* \"#utility.yul\":5646:5699   */\n      tag_430\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":5636:5699   */\n      swap3\n      pop\n        /* \"#utility.yul\":5591:5709   */\n      pop\n        /* \"#utility.yul\":5748:5750   */\n      0x40\n        /* \"#utility.yul\":5774:5827   */\n      tag_547\n        /* \"#utility.yul\":5819:5826   */\n      dup7\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup8\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_425\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5719:5837   */\n      pop\n        /* \"#utility.yul\":5225:5844   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_431:\n        /* \"#utility.yul\":5937:5961   */\n      tag_549\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_423\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_94:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_551\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_431\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6319   */\n    tag_432:\n        /* \"#utility.yul\":6311:6312   */\n      0x00\n        /* \"#utility.yul\":6308:6309   */\n      dup1\n        /* \"#utility.yul\":6301:6313   */\n      revert\n        /* \"#utility.yul\":6325:6442   */\n    tag_433:\n        /* \"#utility.yul\":6434:6435   */\n      0x00\n        /* \"#utility.yul\":6431:6432   */\n      dup1\n        /* \"#utility.yul\":6424:6436   */\n      revert\n        /* \"#utility.yul\":6448:6628   */\n    tag_339:\n        /* \"#utility.yul\":6496:6573   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6493:6494   */\n      0x00\n        /* \"#utility.yul\":6486:6574   */\n      mstore\n        /* \"#utility.yul\":6593:6597   */\n      0x41\n        /* \"#utility.yul\":6590:6591   */\n      0x04\n        /* \"#utility.yul\":6583:6598   */\n      mstore\n        /* \"#utility.yul\":6617:6621   */\n      0x24\n        /* \"#utility.yul\":6614:6615   */\n      0x00\n        /* \"#utility.yul\":6607:6622   */\n      revert\n        /* \"#utility.yul\":6634:6915   */\n    tag_434:\n        /* \"#utility.yul\":6717:6744   */\n      tag_556\n        /* \"#utility.yul\":6739:6743   */\n      dup3\n        /* \"#utility.yul\":6717:6744   */\n      tag_421\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":6709:6715   */\n      dup2\n        /* \"#utility.yul\":6705:6745   */\n      add\n        /* \"#utility.yul\":6847:6853   */\n      dup2\n        /* \"#utility.yul\":6835:6845   */\n      dup2\n        /* \"#utility.yul\":6832:6854   */\n      lt\n        /* \"#utility.yul\":6811:6829   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6799:6809   */\n      dup3\n        /* \"#utility.yul\":6796:6830   */\n      gt\n        /* \"#utility.yul\":6793:6855   */\n      or\n        /* \"#utility.yul\":6790:6878   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":6858:6876   */\n      tag_558\n      tag_339\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":6790:6878   */\n    tag_557:\n        /* \"#utility.yul\":6898:6908   */\n      dup1\n        /* \"#utility.yul\":6894:6896   */\n      0x40\n        /* \"#utility.yul\":6887:6909   */\n      mstore\n        /* \"#utility.yul\":6677:6915   */\n      pop\n        /* \"#utility.yul\":6634:6915   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6921:7050   */\n    tag_435:\n        /* \"#utility.yul\":6955:6961   */\n      0x00\n        /* \"#utility.yul\":6982:7002   */\n      tag_560\n      tag_410\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":6972:7002   */\n      swap1\n      pop\n        /* \"#utility.yul\":7011:7044   */\n      tag_561\n        /* \"#utility.yul\":7039:7043   */\n      dup3\n        /* \"#utility.yul\":7031:7037   */\n      dup3\n        /* \"#utility.yul\":7011:7044   */\n      tag_434\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":6921:7050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7056:7364   */\n    tag_436:\n        /* \"#utility.yul\":7118:7122   */\n      0x00\n        /* \"#utility.yul\":7208:7226   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7200:7206   */\n      dup3\n        /* \"#utility.yul\":7197:7227   */\n      gt\n        /* \"#utility.yul\":7194:7250   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":7230:7248   */\n      tag_564\n      tag_339\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":7194:7250   */\n    tag_563:\n        /* \"#utility.yul\":7268:7297   */\n      tag_565\n        /* \"#utility.yul\":7290:7296   */\n      dup3\n        /* \"#utility.yul\":7268:7297   */\n      tag_421\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":7260:7297   */\n      swap1\n      pop\n        /* \"#utility.yul\":7352:7356   */\n      0x20\n        /* \"#utility.yul\":7346:7350   */\n      dup2\n        /* \"#utility.yul\":7342:7357   */\n      add\n        /* \"#utility.yul\":7334:7357   */\n      swap1\n      pop\n        /* \"#utility.yul\":7056:7364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7370:7516   */\n    tag_437:\n        /* \"#utility.yul\":7467:7473   */\n      dup3\n        /* \"#utility.yul\":7462:7465   */\n      dup2\n        /* \"#utility.yul\":7457:7460   */\n      dup4\n        /* \"#utility.yul\":7444:7474   */\n      calldatacopy\n        /* \"#utility.yul\":7508:7509   */\n      0x00\n        /* \"#utility.yul\":7499:7505   */\n      dup4\n        /* \"#utility.yul\":7494:7497   */\n      dup4\n        /* \"#utility.yul\":7490:7506   */\n      add\n        /* \"#utility.yul\":7483:7510   */\n      mstore\n        /* \"#utility.yul\":7370:7516   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7522:7947   */\n    tag_438:\n        /* \"#utility.yul\":7600:7605   */\n      0x00\n        /* \"#utility.yul\":7625:7691   */\n      tag_568\n        /* \"#utility.yul\":7641:7690   */\n      tag_569\n        /* \"#utility.yul\":7683:7689   */\n      dup5\n        /* \"#utility.yul\":7641:7690   */\n      tag_436\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":7625:7691   */\n      tag_435\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":7616:7691   */\n      swap1\n      pop\n        /* \"#utility.yul\":7714:7720   */\n      dup3\n        /* \"#utility.yul\":7707:7712   */\n      dup2\n        /* \"#utility.yul\":7700:7721   */\n      mstore\n        /* \"#utility.yul\":7752:7756   */\n      0x20\n        /* \"#utility.yul\":7745:7750   */\n      dup2\n        /* \"#utility.yul\":7741:7757   */\n      add\n        /* \"#utility.yul\":7790:7793   */\n      dup5\n        /* \"#utility.yul\":7781:7787   */\n      dup5\n        /* \"#utility.yul\":7776:7779   */\n      dup5\n        /* \"#utility.yul\":7772:7788   */\n      add\n        /* \"#utility.yul\":7769:7794   */\n      gt\n        /* \"#utility.yul\":7766:7878   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":7797:7876   */\n      tag_571\n      tag_433\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":7766:7878   */\n    tag_570:\n        /* \"#utility.yul\":7887:7941   */\n      tag_572\n        /* \"#utility.yul\":7934:7940   */\n      dup5\n        /* \"#utility.yul\":7929:7932   */\n      dup3\n        /* \"#utility.yul\":7924:7927   */\n      dup6\n        /* \"#utility.yul\":7887:7941   */\n      tag_437\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":7606:7947   */\n      pop\n        /* \"#utility.yul\":7522:7947   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7967:8307   */\n    tag_439:\n        /* \"#utility.yul\":8023:8028   */\n      0x00\n        /* \"#utility.yul\":8072:8075   */\n      dup3\n        /* \"#utility.yul\":8065:8069   */\n      0x1f\n        /* \"#utility.yul\":8057:8063   */\n      dup4\n        /* \"#utility.yul\":8053:8070   */\n      add\n        /* \"#utility.yul\":8049:8076   */\n      slt\n        /* \"#utility.yul\":8039:8161   */\n      tag_574\n      jumpi\n        /* \"#utility.yul\":8080:8159   */\n      tag_575\n      tag_432\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":8039:8161   */\n    tag_574:\n        /* \"#utility.yul\":8197:8203   */\n      dup2\n        /* \"#utility.yul\":8184:8204   */\n      calldataload\n        /* \"#utility.yul\":8222:8301   */\n      tag_576\n        /* \"#utility.yul\":8297:8300   */\n      dup5\n        /* \"#utility.yul\":8289:8295   */\n      dup3\n        /* \"#utility.yul\":8282:8286   */\n      0x20\n        /* \"#utility.yul\":8274:8280   */\n      dup7\n        /* \"#utility.yul\":8270:8287   */\n      add\n        /* \"#utility.yul\":8222:8301   */\n      tag_438\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":8213:8301   */\n      swap2\n      pop\n        /* \"#utility.yul\":8029:8307   */\n      pop\n        /* \"#utility.yul\":7967:8307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8313:8967   */\n    tag_120:\n        /* \"#utility.yul\":8391:8397   */\n      0x00\n        /* \"#utility.yul\":8399:8405   */\n      dup1\n        /* \"#utility.yul\":8448:8450   */\n      0x40\n        /* \"#utility.yul\":8436:8445   */\n      dup4\n        /* \"#utility.yul\":8427:8434   */\n      dup6\n        /* \"#utility.yul\":8423:8446   */\n      sub\n        /* \"#utility.yul\":8419:8451   */\n      slt\n        /* \"#utility.yul\":8416:8535   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":8454:8533   */\n      tag_579\n      tag_411\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":8416:8535   */\n    tag_578:\n        /* \"#utility.yul\":8574:8575   */\n      0x00\n        /* \"#utility.yul\":8599:8652   */\n      tag_580\n        /* \"#utility.yul\":8644:8651   */\n      dup6\n        /* \"#utility.yul\":8635:8641   */\n      dup3\n        /* \"#utility.yul\":8624:8633   */\n      dup7\n        /* \"#utility.yul\":8620:8642   */\n      add\n        /* \"#utility.yul\":8599:8652   */\n      tag_430\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":8589:8652   */\n      swap3\n      pop\n        /* \"#utility.yul\":8545:8662   */\n      pop\n        /* \"#utility.yul\":8729:8731   */\n      0x20\n        /* \"#utility.yul\":8718:8727   */\n      dup4\n        /* \"#utility.yul\":8714:8732   */\n      add\n        /* \"#utility.yul\":8701:8733   */\n      calldataload\n        /* \"#utility.yul\":8760:8778   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8752:8758   */\n      dup2\n        /* \"#utility.yul\":8749:8779   */\n      gt\n        /* \"#utility.yul\":8746:8863   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":8782:8861   */\n      tag_582\n      tag_412\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":8746:8863   */\n    tag_581:\n        /* \"#utility.yul\":8887:8950   */\n      tag_583\n        /* \"#utility.yul\":8942:8949   */\n      dup6\n        /* \"#utility.yul\":8933:8939   */\n      dup3\n        /* \"#utility.yul\":8922:8931   */\n      dup7\n        /* \"#utility.yul\":8918:8940   */\n      add\n        /* \"#utility.yul\":8887:8950   */\n      tag_439\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":8877:8950   */\n      swap2\n      pop\n        /* \"#utility.yul\":8672:8960   */\n      pop\n        /* \"#utility.yul\":8313:8967   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8973:9089   */\n    tag_440:\n        /* \"#utility.yul\":9043:9064   */\n      tag_585\n        /* \"#utility.yul\":9058:9063   */\n      dup2\n        /* \"#utility.yul\":9043:9064   */\n      tag_416\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":9036:9041   */\n      dup2\n        /* \"#utility.yul\":9033:9065   */\n      eq\n        /* \"#utility.yul\":9023:9083   */\n      tag_586\n      jumpi\n        /* \"#utility.yul\":9079:9080   */\n      0x00\n        /* \"#utility.yul\":9076:9077   */\n      dup1\n        /* \"#utility.yul\":9069:9081   */\n      revert\n        /* \"#utility.yul\":9023:9083   */\n    tag_586:\n        /* \"#utility.yul\":8973:9089   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9095:9228   */\n    tag_441:\n        /* \"#utility.yul\":9138:9143   */\n      0x00\n        /* \"#utility.yul\":9176:9182   */\n      dup2\n        /* \"#utility.yul\":9163:9183   */\n      calldataload\n        /* \"#utility.yul\":9154:9183   */\n      swap1\n      pop\n        /* \"#utility.yul\":9192:9222   */\n      tag_588\n        /* \"#utility.yul\":9216:9221   */\n      dup2\n        /* \"#utility.yul\":9192:9222   */\n      tag_440\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":9095:9228   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9234:9702   */\n    tag_133:\n        /* \"#utility.yul\":9299:9305   */\n      0x00\n        /* \"#utility.yul\":9307:9313   */\n      dup1\n        /* \"#utility.yul\":9356:9358   */\n      0x40\n        /* \"#utility.yul\":9344:9353   */\n      dup4\n        /* \"#utility.yul\":9335:9342   */\n      dup6\n        /* \"#utility.yul\":9331:9354   */\n      sub\n        /* \"#utility.yul\":9327:9359   */\n      slt\n        /* \"#utility.yul\":9324:9443   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":9362:9441   */\n      tag_591\n      tag_411\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":9324:9443   */\n    tag_590:\n        /* \"#utility.yul\":9482:9483   */\n      0x00\n        /* \"#utility.yul\":9507:9560   */\n      tag_592\n        /* \"#utility.yul\":9552:9559   */\n      dup6\n        /* \"#utility.yul\":9543:9549   */\n      dup3\n        /* \"#utility.yul\":9532:9541   */\n      dup7\n        /* \"#utility.yul\":9528:9550   */\n      add\n        /* \"#utility.yul\":9507:9560   */\n      tag_430\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":9497:9560   */\n      swap3\n      pop\n        /* \"#utility.yul\":9453:9570   */\n      pop\n        /* \"#utility.yul\":9609:9611   */\n      0x20\n        /* \"#utility.yul\":9635:9685   */\n      tag_593\n        /* \"#utility.yul\":9677:9684   */\n      dup6\n        /* \"#utility.yul\":9668:9674   */\n      dup3\n        /* \"#utility.yul\":9657:9666   */\n      dup7\n        /* \"#utility.yul\":9653:9675   */\n      add\n        /* \"#utility.yul\":9635:9685   */\n      tag_441\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":9625:9685   */\n      swap2\n      pop\n        /* \"#utility.yul\":9580:9695   */\n      pop\n        /* \"#utility.yul\":9234:9702   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9708:10015   */\n    tag_442:\n        /* \"#utility.yul\":9769:9773   */\n      0x00\n        /* \"#utility.yul\":9859:9877   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9851:9857   */\n      dup3\n        /* \"#utility.yul\":9848:9878   */\n      gt\n        /* \"#utility.yul\":9845:9901   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":9881:9899   */\n      tag_596\n      tag_339\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":9845:9901   */\n    tag_595:\n        /* \"#utility.yul\":9919:9948   */\n      tag_597\n        /* \"#utility.yul\":9941:9947   */\n      dup3\n        /* \"#utility.yul\":9919:9948   */\n      tag_421\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":9911:9948   */\n      swap1\n      pop\n        /* \"#utility.yul\":10003:10007   */\n      0x20\n        /* \"#utility.yul\":9997:10001   */\n      dup2\n        /* \"#utility.yul\":9993:10008   */\n      add\n        /* \"#utility.yul\":9985:10008   */\n      swap1\n      pop\n        /* \"#utility.yul\":9708:10015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10021:10444   */\n    tag_443:\n        /* \"#utility.yul\":10098:10103   */\n      0x00\n        /* \"#utility.yul\":10123:10188   */\n      tag_599\n        /* \"#utility.yul\":10139:10187   */\n      tag_600\n        /* \"#utility.yul\":10180:10186   */\n      dup5\n        /* \"#utility.yul\":10139:10187   */\n      tag_442\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":10123:10188   */\n      tag_435\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":10114:10188   */\n      swap1\n      pop\n        /* \"#utility.yul\":10211:10217   */\n      dup3\n        /* \"#utility.yul\":10204:10209   */\n      dup2\n        /* \"#utility.yul\":10197:10218   */\n      mstore\n        /* \"#utility.yul\":10249:10253   */\n      0x20\n        /* \"#utility.yul\":10242:10247   */\n      dup2\n        /* \"#utility.yul\":10238:10254   */\n      add\n        /* \"#utility.yul\":10287:10290   */\n      dup5\n        /* \"#utility.yul\":10278:10284   */\n      dup5\n        /* \"#utility.yul\":10273:10276   */\n      dup5\n        /* \"#utility.yul\":10269:10285   */\n      add\n        /* \"#utility.yul\":10266:10291   */\n      gt\n        /* \"#utility.yul\":10263:10375   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":10294:10373   */\n      tag_602\n      tag_433\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":10263:10375   */\n    tag_601:\n        /* \"#utility.yul\":10384:10438   */\n      tag_603\n        /* \"#utility.yul\":10431:10437   */\n      dup5\n        /* \"#utility.yul\":10426:10429   */\n      dup3\n        /* \"#utility.yul\":10421:10424   */\n      dup6\n        /* \"#utility.yul\":10384:10438   */\n      tag_437\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":10104:10444   */\n      pop\n        /* \"#utility.yul\":10021:10444   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10463:10801   */\n    tag_444:\n        /* \"#utility.yul\":10518:10523   */\n      0x00\n        /* \"#utility.yul\":10567:10570   */\n      dup3\n        /* \"#utility.yul\":10560:10564   */\n      0x1f\n        /* \"#utility.yul\":10552:10558   */\n      dup4\n        /* \"#utility.yul\":10548:10565   */\n      add\n        /* \"#utility.yul\":10544:10571   */\n      slt\n        /* \"#utility.yul\":10534:10656   */\n      tag_605\n      jumpi\n        /* \"#utility.yul\":10575:10654   */\n      tag_606\n      tag_432\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":10534:10656   */\n    tag_605:\n        /* \"#utility.yul\":10692:10698   */\n      dup2\n        /* \"#utility.yul\":10679:10699   */\n      calldataload\n        /* \"#utility.yul\":10717:10795   */\n      tag_607\n        /* \"#utility.yul\":10791:10794   */\n      dup5\n        /* \"#utility.yul\":10783:10789   */\n      dup3\n        /* \"#utility.yul\":10776:10780   */\n      0x20\n        /* \"#utility.yul\":10768:10774   */\n      dup7\n        /* \"#utility.yul\":10764:10781   */\n      add\n        /* \"#utility.yul\":10717:10795   */\n      tag_443\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":10708:10795   */\n      swap2\n      pop\n        /* \"#utility.yul\":10524:10801   */\n      pop\n        /* \"#utility.yul\":10463:10801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10807:11750   */\n    tag_142:\n        /* \"#utility.yul\":10902:10908   */\n      0x00\n        /* \"#utility.yul\":10910:10916   */\n      dup1\n        /* \"#utility.yul\":10918:10924   */\n      0x00\n        /* \"#utility.yul\":10926:10932   */\n      dup1\n        /* \"#utility.yul\":10975:10978   */\n      0x80\n        /* \"#utility.yul\":10963:10972   */\n      dup6\n        /* \"#utility.yul\":10954:10961   */\n      dup8\n        /* \"#utility.yul\":10950:10973   */\n      sub\n        /* \"#utility.yul\":10946:10979   */\n      slt\n        /* \"#utility.yul\":10943:11063   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":10982:11061   */\n      tag_610\n      tag_411\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":10943:11063   */\n    tag_609:\n        /* \"#utility.yul\":11102:11103   */\n      0x00\n        /* \"#utility.yul\":11127:11180   */\n      tag_611\n        /* \"#utility.yul\":11172:11179   */\n      dup8\n        /* \"#utility.yul\":11163:11169   */\n      dup3\n        /* \"#utility.yul\":11152:11161   */\n      dup9\n        /* \"#utility.yul\":11148:11170   */\n      add\n        /* \"#utility.yul\":11127:11180   */\n      tag_430\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":11117:11180   */\n      swap5\n      pop\n        /* \"#utility.yul\":11073:11190   */\n      pop\n        /* \"#utility.yul\":11229:11231   */\n      0x20\n        /* \"#utility.yul\":11255:11308   */\n      tag_612\n        /* \"#utility.yul\":11300:11307   */\n      dup8\n        /* \"#utility.yul\":11291:11297   */\n      dup3\n        /* \"#utility.yul\":11280:11289   */\n      dup9\n        /* \"#utility.yul\":11276:11298   */\n      add\n        /* \"#utility.yul\":11255:11308   */\n      tag_430\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":11245:11308   */\n      swap4\n      pop\n        /* \"#utility.yul\":11200:11318   */\n      pop\n        /* \"#utility.yul\":11357:11359   */\n      0x40\n        /* \"#utility.yul\":11383:11436   */\n      tag_613\n        /* \"#utility.yul\":11428:11435   */\n      dup8\n        /* \"#utility.yul\":11419:11425   */\n      dup3\n        /* \"#utility.yul\":11408:11417   */\n      dup9\n        /* \"#utility.yul\":11404:11426   */\n      add\n        /* \"#utility.yul\":11383:11436   */\n      tag_425\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":11373:11436   */\n      swap3\n      pop\n        /* \"#utility.yul\":11328:11446   */\n      pop\n        /* \"#utility.yul\":11513:11515   */\n      0x60\n        /* \"#utility.yul\":11502:11511   */\n      dup6\n        /* \"#utility.yul\":11498:11516   */\n      add\n        /* \"#utility.yul\":11485:11517   */\n      calldataload\n        /* \"#utility.yul\":11544:11562   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11536:11542   */\n      dup2\n        /* \"#utility.yul\":11533:11563   */\n      gt\n        /* \"#utility.yul\":11530:11647   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":11566:11645   */\n      tag_615\n      tag_412\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":11530:11647   */\n    tag_614:\n        /* \"#utility.yul\":11671:11733   */\n      tag_616\n        /* \"#utility.yul\":11725:11732   */\n      dup8\n        /* \"#utility.yul\":11716:11722   */\n      dup3\n        /* \"#utility.yul\":11705:11714   */\n      dup9\n        /* \"#utility.yul\":11701:11723   */\n      add\n        /* \"#utility.yul\":11671:11733   */\n      tag_444\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":11661:11733   */\n      swap2\n      pop\n        /* \"#utility.yul\":11456:11743   */\n      pop\n        /* \"#utility.yul\":10807:11750   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11756:12230   */\n    tag_157:\n        /* \"#utility.yul\":11824:11830   */\n      0x00\n        /* \"#utility.yul\":11832:11838   */\n      dup1\n        /* \"#utility.yul\":11881:11883   */\n      0x40\n        /* \"#utility.yul\":11869:11878   */\n      dup4\n        /* \"#utility.yul\":11860:11867   */\n      dup6\n        /* \"#utility.yul\":11856:11879   */\n      sub\n        /* \"#utility.yul\":11852:11884   */\n      slt\n        /* \"#utility.yul\":11849:11968   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":11887:11966   */\n      tag_619\n      tag_411\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":11849:11968   */\n    tag_618:\n        /* \"#utility.yul\":12007:12008   */\n      0x00\n        /* \"#utility.yul\":12032:12085   */\n      tag_620\n        /* \"#utility.yul\":12077:12084   */\n      dup6\n        /* \"#utility.yul\":12068:12074   */\n      dup3\n        /* \"#utility.yul\":12057:12066   */\n      dup7\n        /* \"#utility.yul\":12053:12075   */\n      add\n        /* \"#utility.yul\":12032:12085   */\n      tag_430\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":12022:12085   */\n      swap3\n      pop\n        /* \"#utility.yul\":11978:12095   */\n      pop\n        /* \"#utility.yul\":12134:12136   */\n      0x20\n        /* \"#utility.yul\":12160:12213   */\n      tag_621\n        /* \"#utility.yul\":12205:12212   */\n      dup6\n        /* \"#utility.yul\":12196:12202   */\n      dup3\n        /* \"#utility.yul\":12185:12194   */\n      dup7\n        /* \"#utility.yul\":12181:12203   */\n      add\n        /* \"#utility.yul\":12160:12213   */\n      tag_430\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":12150:12213   */\n      swap2\n      pop\n        /* \"#utility.yul\":12105:12223   */\n      pop\n        /* \"#utility.yul\":11756:12230   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12236:12416   */\n    tag_445:\n        /* \"#utility.yul\":12284:12361   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12281:12282   */\n      0x00\n        /* \"#utility.yul\":12274:12362   */\n      mstore\n        /* \"#utility.yul\":12381:12385   */\n      0x22\n        /* \"#utility.yul\":12378:12379   */\n      0x04\n        /* \"#utility.yul\":12371:12386   */\n      mstore\n        /* \"#utility.yul\":12405:12409   */\n      0x24\n        /* \"#utility.yul\":12402:12403   */\n      0x00\n        /* \"#utility.yul\":12395:12410   */\n      revert\n        /* \"#utility.yul\":12422:12742   */\n    tag_167:\n        /* \"#utility.yul\":12466:12472   */\n      0x00\n        /* \"#utility.yul\":12503:12504   */\n      0x02\n        /* \"#utility.yul\":12497:12501   */\n      dup3\n        /* \"#utility.yul\":12493:12505   */\n      div\n        /* \"#utility.yul\":12483:12505   */\n      swap1\n      pop\n        /* \"#utility.yul\":12550:12551   */\n      0x01\n        /* \"#utility.yul\":12544:12548   */\n      dup3\n        /* \"#utility.yul\":12540:12552   */\n      and\n        /* \"#utility.yul\":12571:12589   */\n      dup1\n        /* \"#utility.yul\":12561:12642   */\n      tag_624\n      jumpi\n        /* \"#utility.yul\":12627:12631   */\n      0x7f\n        /* \"#utility.yul\":12619:12625   */\n      dup3\n        /* \"#utility.yul\":12615:12632   */\n      and\n        /* \"#utility.yul\":12605:12632   */\n      swap2\n      pop\n        /* \"#utility.yul\":12561:12642   */\n    tag_624:\n        /* \"#utility.yul\":12689:12691   */\n      0x20\n        /* \"#utility.yul\":12681:12687   */\n      dup3\n        /* \"#utility.yul\":12678:12692   */\n      lt\n        /* \"#utility.yul\":12658:12676   */\n      dup2\n        /* \"#utility.yul\":12655:12693   */\n      sub\n        /* \"#utility.yul\":12652:12736   */\n      tag_625\n      jumpi\n        /* \"#utility.yul\":12708:12726   */\n      tag_626\n      tag_445\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":12652:12736   */\n    tag_625:\n        /* \"#utility.yul\":12473:12742   */\n      pop\n        /* \"#utility.yul\":12422:12742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12748:12972   */\n    tag_446:\n        /* \"#utility.yul\":12888:12922   */\n      0x4f6e6c792061646d696e732063616e206578656375746520746869732066756e\n        /* \"#utility.yul\":12884:12885   */\n      0x00\n        /* \"#utility.yul\":12876:12882   */\n      dup3\n        /* \"#utility.yul\":12872:12886   */\n      add\n        /* \"#utility.yul\":12865:12923   */\n      mstore\n        /* \"#utility.yul\":12957:12964   */\n      0x6374696f6e000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12952:12954   */\n      0x20\n        /* \"#utility.yul\":12944:12950   */\n      dup3\n        /* \"#utility.yul\":12940:12955   */\n      add\n        /* \"#utility.yul\":12933:12965   */\n      mstore\n        /* \"#utility.yul\":12748:12972   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12978:13344   */\n    tag_447:\n        /* \"#utility.yul\":13120:13123   */\n      0x00\n        /* \"#utility.yul\":13141:13208   */\n      tag_629\n        /* \"#utility.yul\":13205:13207   */\n      0x25\n        /* \"#utility.yul\":13200:13203   */\n      dup4\n        /* \"#utility.yul\":13141:13208   */\n      tag_419\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":13134:13208   */\n      swap2\n      pop\n        /* \"#utility.yul\":13217:13310   */\n      tag_630\n        /* \"#utility.yul\":13306:13309   */\n      dup3\n        /* \"#utility.yul\":13217:13310   */\n      tag_446\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":13335:13337   */\n      0x40\n        /* \"#utility.yul\":13330:13333   */\n      dup3\n        /* \"#utility.yul\":13326:13338   */\n      add\n        /* \"#utility.yul\":13319:13338   */\n      swap1\n      pop\n        /* \"#utility.yul\":12978:13344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13350:13769   */\n    tag_186:\n        /* \"#utility.yul\":13516:13520   */\n      0x00\n        /* \"#utility.yul\":13554:13556   */\n      0x20\n        /* \"#utility.yul\":13543:13552   */\n      dup3\n        /* \"#utility.yul\":13539:13557   */\n      add\n        /* \"#utility.yul\":13531:13557   */\n      swap1\n      pop\n        /* \"#utility.yul\":13603:13612   */\n      dup2\n        /* \"#utility.yul\":13597:13601   */\n      dup2\n        /* \"#utility.yul\":13593:13613   */\n      sub\n        /* \"#utility.yul\":13589:13590   */\n      0x00\n        /* \"#utility.yul\":13578:13587   */\n      dup4\n        /* \"#utility.yul\":13574:13591   */\n      add\n        /* \"#utility.yul\":13567:13614   */\n      mstore\n        /* \"#utility.yul\":13631:13762   */\n      tag_632\n        /* \"#utility.yul\":13757:13761   */\n      dup2\n        /* \"#utility.yul\":13631:13762   */\n      tag_447\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":13623:13762   */\n      swap1\n      pop\n        /* \"#utility.yul\":13350:13769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13775:14217   */\n    tag_203:\n        /* \"#utility.yul\":13924:13928   */\n      0x00\n        /* \"#utility.yul\":13962:13964   */\n      0x60\n        /* \"#utility.yul\":13951:13960   */\n      dup3\n        /* \"#utility.yul\":13947:13965   */\n      add\n        /* \"#utility.yul\":13939:13965   */\n      swap1\n      pop\n        /* \"#utility.yul\":13975:14046   */\n      tag_634\n        /* \"#utility.yul\":14043:14044   */\n      0x00\n        /* \"#utility.yul\":14032:14041   */\n      dup4\n        /* \"#utility.yul\":14028:14045   */\n      add\n        /* \"#utility.yul\":14019:14025   */\n      dup7\n        /* \"#utility.yul\":13975:14046   */\n      tag_428\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":14056:14128   */\n      tag_635\n        /* \"#utility.yul\":14124:14126   */\n      0x20\n        /* \"#utility.yul\":14113:14122   */\n      dup4\n        /* \"#utility.yul\":14109:14127   */\n      add\n        /* \"#utility.yul\":14100:14106   */\n      dup6\n        /* \"#utility.yul\":14056:14128   */\n      tag_431\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":14138:14210   */\n      tag_636\n        /* \"#utility.yul\":14206:14208   */\n      0x40\n        /* \"#utility.yul\":14195:14204   */\n      dup4\n        /* \"#utility.yul\":14191:14209   */\n      add\n        /* \"#utility.yul\":14182:14188   */\n      dup5\n        /* \"#utility.yul\":14138:14210   */\n      tag_428\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":13775:14217   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14223:14394   */\n    tag_448:\n        /* \"#utility.yul\":14363:14386   */\n      0x596f7520686176656e277420766f746564207965740000000000000000000000\n        /* \"#utility.yul\":14359:14360   */\n      0x00\n        /* \"#utility.yul\":14351:14357   */\n      dup3\n        /* \"#utility.yul\":14347:14361   */\n      add\n        /* \"#utility.yul\":14340:14387   */\n      mstore\n        /* \"#utility.yul\":14223:14394   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14400:14766   */\n    tag_449:\n        /* \"#utility.yul\":14542:14545   */\n      0x00\n        /* \"#utility.yul\":14563:14630   */\n      tag_639\n        /* \"#utility.yul\":14627:14629   */\n      0x15\n        /* \"#utility.yul\":14622:14625   */\n      dup4\n        /* \"#utility.yul\":14563:14630   */\n      tag_419\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":14556:14630   */\n      swap2\n      pop\n        /* \"#utility.yul\":14639:14732   */\n      tag_640\n        /* \"#utility.yul\":14728:14731   */\n      dup3\n        /* \"#utility.yul\":14639:14732   */\n      tag_448\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":14757:14759   */\n      0x20\n        /* \"#utility.yul\":14752:14755   */\n      dup3\n        /* \"#utility.yul\":14748:14760   */\n      add\n        /* \"#utility.yul\":14741:14760   */\n      swap1\n      pop\n        /* \"#utility.yul\":14400:14766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14772:15191   */\n    tag_207:\n        /* \"#utility.yul\":14938:14942   */\n      0x00\n        /* \"#utility.yul\":14976:14978   */\n      0x20\n        /* \"#utility.yul\":14965:14974   */\n      dup3\n        /* \"#utility.yul\":14961:14979   */\n      add\n        /* \"#utility.yul\":14953:14979   */\n      swap1\n      pop\n        /* \"#utility.yul\":15025:15034   */\n      dup2\n        /* \"#utility.yul\":15019:15023   */\n      dup2\n        /* \"#utility.yul\":15015:15035   */\n      sub\n        /* \"#utility.yul\":15011:15012   */\n      0x00\n        /* \"#utility.yul\":15000:15009   */\n      dup4\n        /* \"#utility.yul\":14996:15013   */\n      add\n        /* \"#utility.yul\":14989:15036   */\n      mstore\n        /* \"#utility.yul\":15053:15184   */\n      tag_642\n        /* \"#utility.yul\":15179:15183   */\n      dup2\n        /* \"#utility.yul\":15053:15184   */\n      tag_449\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":15045:15184   */\n      swap1\n      pop\n        /* \"#utility.yul\":14772:15191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15197:15371   */\n    tag_450:\n        /* \"#utility.yul\":15337:15363   */\n      0x43616e646964617465206e6f7420726567697374657265640000000000000000\n        /* \"#utility.yul\":15333:15334   */\n      0x00\n        /* \"#utility.yul\":15325:15331   */\n      dup3\n        /* \"#utility.yul\":15321:15335   */\n      add\n        /* \"#utility.yul\":15314:15364   */\n      mstore\n        /* \"#utility.yul\":15197:15371   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15377:15743   */\n    tag_451:\n        /* \"#utility.yul\":15519:15522   */\n      0x00\n        /* \"#utility.yul\":15540:15607   */\n      tag_645\n        /* \"#utility.yul\":15604:15606   */\n      0x18\n        /* \"#utility.yul\":15599:15602   */\n      dup4\n        /* \"#utility.yul\":15540:15607   */\n      tag_419\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":15533:15607   */\n      swap2\n      pop\n        /* \"#utility.yul\":15616:15709   */\n      tag_646\n        /* \"#utility.yul\":15705:15708   */\n      dup3\n        /* \"#utility.yul\":15616:15709   */\n      tag_450\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":15734:15736   */\n      0x20\n        /* \"#utility.yul\":15729:15732   */\n      dup3\n        /* \"#utility.yul\":15725:15737   */\n      add\n        /* \"#utility.yul\":15718:15737   */\n      swap1\n      pop\n        /* \"#utility.yul\":15377:15743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15749:16168   */\n    tag_226:\n        /* \"#utility.yul\":15915:15919   */\n      0x00\n        /* \"#utility.yul\":15953:15955   */\n      0x20\n        /* \"#utility.yul\":15942:15951   */\n      dup3\n        /* \"#utility.yul\":15938:15956   */\n      add\n        /* \"#utility.yul\":15930:15956   */\n      swap1\n      pop\n        /* \"#utility.yul\":16002:16011   */\n      dup2\n        /* \"#utility.yul\":15996:16000   */\n      dup2\n        /* \"#utility.yul\":15992:16012   */\n      sub\n        /* \"#utility.yul\":15988:15989   */\n      0x00\n        /* \"#utility.yul\":15977:15986   */\n      dup4\n        /* \"#utility.yul\":15973:15990   */\n      add\n        /* \"#utility.yul\":15966:16013   */\n      mstore\n        /* \"#utility.yul\":16030:16161   */\n      tag_648\n        /* \"#utility.yul\":16156:16160   */\n      dup2\n        /* \"#utility.yul\":16030:16161   */\n      tag_451\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":16022:16161   */\n      swap1\n      pop\n        /* \"#utility.yul\":15749:16168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16174:16349   */\n    tag_452:\n        /* \"#utility.yul\":16314:16341   */\n      0x416464726573732068617320616c726561647920766f74656400000000000000\n        /* \"#utility.yul\":16310:16311   */\n      0x00\n        /* \"#utility.yul\":16302:16308   */\n      dup3\n        /* \"#utility.yul\":16298:16312   */\n      add\n        /* \"#utility.yul\":16291:16342   */\n      mstore\n        /* \"#utility.yul\":16174:16349   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16355:16721   */\n    tag_453:\n        /* \"#utility.yul\":16497:16500   */\n      0x00\n        /* \"#utility.yul\":16518:16585   */\n      tag_651\n        /* \"#utility.yul\":16582:16584   */\n      0x19\n        /* \"#utility.yul\":16577:16580   */\n      dup4\n        /* \"#utility.yul\":16518:16585   */\n      tag_419\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":16511:16585   */\n      swap2\n      pop\n        /* \"#utility.yul\":16594:16687   */\n      tag_652\n        /* \"#utility.yul\":16683:16686   */\n      dup3\n        /* \"#utility.yul\":16594:16687   */\n      tag_452\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":16712:16714   */\n      0x20\n        /* \"#utility.yul\":16707:16710   */\n      dup3\n        /* \"#utility.yul\":16703:16715   */\n      add\n        /* \"#utility.yul\":16696:16715   */\n      swap1\n      pop\n        /* \"#utility.yul\":16355:16721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16727:17146   */\n    tag_229:\n        /* \"#utility.yul\":16893:16897   */\n      0x00\n        /* \"#utility.yul\":16931:16933   */\n      0x20\n        /* \"#utility.yul\":16920:16929   */\n      dup3\n        /* \"#utility.yul\":16916:16934   */\n      add\n        /* \"#utility.yul\":16908:16934   */\n      swap1\n      pop\n        /* \"#utility.yul\":16980:16989   */\n      dup2\n        /* \"#utility.yul\":16974:16978   */\n      dup2\n        /* \"#utility.yul\":16970:16990   */\n      sub\n        /* \"#utility.yul\":16966:16967   */\n      0x00\n        /* \"#utility.yul\":16955:16964   */\n      dup4\n        /* \"#utility.yul\":16951:16968   */\n      add\n        /* \"#utility.yul\":16944:16991   */\n      mstore\n        /* \"#utility.yul\":17008:17139   */\n      tag_654\n        /* \"#utility.yul\":17134:17138   */\n      dup2\n        /* \"#utility.yul\":17008:17139   */\n      tag_453\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":17000:17139   */\n      swap1\n      pop\n        /* \"#utility.yul\":16727:17146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17152:17327   */\n    tag_454:\n        /* \"#utility.yul\":17292:17319   */\n      0x496e73756666696369656e7420766f74696e672076616c756500000000000000\n        /* \"#utility.yul\":17288:17289   */\n      0x00\n        /* \"#utility.yul\":17280:17286   */\n      dup3\n        /* \"#utility.yul\":17276:17290   */\n      add\n        /* \"#utility.yul\":17269:17320   */\n      mstore\n        /* \"#utility.yul\":17152:17327   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17333:17699   */\n    tag_455:\n        /* \"#utility.yul\":17475:17478   */\n      0x00\n        /* \"#utility.yul\":17496:17563   */\n      tag_657\n        /* \"#utility.yul\":17560:17562   */\n      0x19\n        /* \"#utility.yul\":17555:17558   */\n      dup4\n        /* \"#utility.yul\":17496:17563   */\n      tag_419\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":17489:17563   */\n      swap2\n      pop\n        /* \"#utility.yul\":17572:17665   */\n      tag_658\n        /* \"#utility.yul\":17661:17664   */\n      dup3\n        /* \"#utility.yul\":17572:17665   */\n      tag_454\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":17690:17692   */\n      0x20\n        /* \"#utility.yul\":17685:17688   */\n      dup3\n        /* \"#utility.yul\":17681:17693   */\n      add\n        /* \"#utility.yul\":17674:17693   */\n      swap1\n      pop\n        /* \"#utility.yul\":17333:17699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17705:18124   */\n    tag_232:\n        /* \"#utility.yul\":17871:17875   */\n      0x00\n        /* \"#utility.yul\":17909:17911   */\n      0x20\n        /* \"#utility.yul\":17898:17907   */\n      dup3\n        /* \"#utility.yul\":17894:17912   */\n      add\n        /* \"#utility.yul\":17886:17912   */\n      swap1\n      pop\n        /* \"#utility.yul\":17958:17967   */\n      dup2\n        /* \"#utility.yul\":17952:17956   */\n      dup2\n        /* \"#utility.yul\":17948:17968   */\n      sub\n        /* \"#utility.yul\":17944:17945   */\n      0x00\n        /* \"#utility.yul\":17933:17942   */\n      dup4\n        /* \"#utility.yul\":17929:17946   */\n      add\n        /* \"#utility.yul\":17922:17969   */\n      mstore\n        /* \"#utility.yul\":17986:18117   */\n      tag_660\n        /* \"#utility.yul\":18112:18116   */\n      dup2\n        /* \"#utility.yul\":17986:18117   */\n      tag_455\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":17978:18117   */\n      swap1\n      pop\n        /* \"#utility.yul\":17705:18124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18130:18310   */\n    tag_456:\n        /* \"#utility.yul\":18178:18255   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18175:18176   */\n      0x00\n        /* \"#utility.yul\":18168:18256   */\n      mstore\n        /* \"#utility.yul\":18275:18279   */\n      0x11\n        /* \"#utility.yul\":18272:18273   */\n      0x04\n        /* \"#utility.yul\":18265:18280   */\n      mstore\n        /* \"#utility.yul\":18299:18303   */\n      0x24\n        /* \"#utility.yul\":18296:18297   */\n      0x00\n        /* \"#utility.yul\":18289:18304   */\n      revert\n        /* \"#utility.yul\":18316:18507   */\n    tag_234:\n        /* \"#utility.yul\":18356:18359   */\n      0x00\n        /* \"#utility.yul\":18375:18395   */\n      tag_663\n        /* \"#utility.yul\":18393:18394   */\n      dup3\n        /* \"#utility.yul\":18375:18395   */\n      tag_423\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":18370:18395   */\n      swap2\n      pop\n        /* \"#utility.yul\":18409:18429   */\n      tag_664\n        /* \"#utility.yul\":18427:18428   */\n      dup4\n        /* \"#utility.yul\":18409:18429   */\n      tag_423\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":18404:18429   */\n      swap3\n      pop\n        /* \"#utility.yul\":18452:18453   */\n      dup3\n        /* \"#utility.yul\":18449:18450   */\n      dup3\n        /* \"#utility.yul\":18445:18454   */\n      add\n        /* \"#utility.yul\":18438:18454   */\n      swap1\n      pop\n        /* \"#utility.yul\":18473:18476   */\n      dup1\n        /* \"#utility.yul\":18470:18471   */\n      dup3\n        /* \"#utility.yul\":18467:18477   */\n      gt\n        /* \"#utility.yul\":18464:18500   */\n      iszero\n      tag_665\n      jumpi\n        /* \"#utility.yul\":18480:18498   */\n      tag_666\n      tag_456\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":18464:18500   */\n    tag_665:\n        /* \"#utility.yul\":18316:18507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18513:18746   */\n    tag_238:\n        /* \"#utility.yul\":18552:18555   */\n      0x00\n        /* \"#utility.yul\":18575:18599   */\n      tag_668\n        /* \"#utility.yul\":18593:18598   */\n      dup3\n        /* \"#utility.yul\":18575:18599   */\n      tag_423\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":18566:18599   */\n      swap2\n      pop\n        /* \"#utility.yul\":18621:18687   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18614:18619   */\n      dup3\n        /* \"#utility.yul\":18611:18688   */\n      sub\n        /* \"#utility.yul\":18608:18711   */\n      tag_669\n      jumpi\n        /* \"#utility.yul\":18691:18709   */\n      tag_670\n      tag_456\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":18608:18711   */\n    tag_669:\n        /* \"#utility.yul\":18738:18739   */\n      0x01\n        /* \"#utility.yul\":18731:18736   */\n      dup3\n        /* \"#utility.yul\":18727:18740   */\n      add\n        /* \"#utility.yul\":18720:18740   */\n      swap1\n      pop\n        /* \"#utility.yul\":18513:18746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18752:18893   */\n    tag_457:\n        /* \"#utility.yul\":18801:18805   */\n      0x00\n        /* \"#utility.yul\":18824:18827   */\n      dup2\n        /* \"#utility.yul\":18816:18827   */\n      swap1\n      pop\n        /* \"#utility.yul\":18847:18850   */\n      dup2\n        /* \"#utility.yul\":18844:18845   */\n      0x00\n        /* \"#utility.yul\":18837:18851   */\n      mstore\n        /* \"#utility.yul\":18881:18885   */\n      0x20\n        /* \"#utility.yul\":18878:18879   */\n      0x00\n        /* \"#utility.yul\":18868:18886   */\n      keccak256\n        /* \"#utility.yul\":18860:18886   */\n      swap1\n      pop\n        /* \"#utility.yul\":18752:18893   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18899:18992   */\n    tag_458:\n        /* \"#utility.yul\":18936:18942   */\n      0x00\n        /* \"#utility.yul\":18983:18985   */\n      0x20\n        /* \"#utility.yul\":18978:18980   */\n      0x1f\n        /* \"#utility.yul\":18971:18976   */\n      dup4\n        /* \"#utility.yul\":18967:18981   */\n      add\n        /* \"#utility.yul\":18963:18986   */\n      div\n        /* \"#utility.yul\":18953:18986   */\n      swap1\n      pop\n        /* \"#utility.yul\":18899:18992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18998:19105   */\n    tag_459:\n        /* \"#utility.yul\":19042:19050   */\n      0x00\n        /* \"#utility.yul\":19092:19097   */\n      dup3\n        /* \"#utility.yul\":19086:19090   */\n      dup3\n        /* \"#utility.yul\":19082:19098   */\n      shl\n        /* \"#utility.yul\":19061:19098   */\n      swap1\n      pop\n        /* \"#utility.yul\":18998:19105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19111:19504   */\n    tag_460:\n        /* \"#utility.yul\":19180:19186   */\n      0x00\n        /* \"#utility.yul\":19230:19231   */\n      0x08\n        /* \"#utility.yul\":19218:19228   */\n      dup4\n        /* \"#utility.yul\":19214:19232   */\n      mul\n        /* \"#utility.yul\":19253:19350   */\n      tag_675\n        /* \"#utility.yul\":19283:19349   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19272:19281   */\n      dup3\n        /* \"#utility.yul\":19253:19350   */\n      tag_459\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":19371:19410   */\n      tag_676\n        /* \"#utility.yul\":19401:19409   */\n      dup7\n        /* \"#utility.yul\":19390:19399   */\n      dup4\n        /* \"#utility.yul\":19371:19410   */\n      tag_459\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":19359:19410   */\n      swap6\n      pop\n        /* \"#utility.yul\":19443:19447   */\n      dup1\n        /* \"#utility.yul\":19439:19448   */\n      not\n        /* \"#utility.yul\":19432:19437   */\n      dup5\n        /* \"#utility.yul\":19428:19449   */\n      and\n        /* \"#utility.yul\":19419:19449   */\n      swap4\n      pop\n        /* \"#utility.yul\":19492:19496   */\n      dup1\n        /* \"#utility.yul\":19482:19490   */\n      dup7\n        /* \"#utility.yul\":19478:19497   */\n      and\n        /* \"#utility.yul\":19471:19476   */\n      dup5\n        /* \"#utility.yul\":19468:19498   */\n      or\n        /* \"#utility.yul\":19458:19498   */\n      swap3\n      pop\n        /* \"#utility.yul\":19187:19504   */\n      pop\n      pop\n        /* \"#utility.yul\":19111:19504   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19510:19570   */\n    tag_461:\n        /* \"#utility.yul\":19538:19541   */\n      0x00\n        /* \"#utility.yul\":19559:19564   */\n      dup2\n        /* \"#utility.yul\":19552:19564   */\n      swap1\n      pop\n        /* \"#utility.yul\":19510:19570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19576:19718   */\n    tag_462:\n        /* \"#utility.yul\":19626:19635   */\n      0x00\n        /* \"#utility.yul\":19659:19712   */\n      tag_679\n        /* \"#utility.yul\":19677:19711   */\n      tag_680\n        /* \"#utility.yul\":19686:19710   */\n      tag_681\n        /* \"#utility.yul\":19704:19709   */\n      dup5\n        /* \"#utility.yul\":19686:19710   */\n      tag_423\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":19677:19711   */\n      tag_461\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":19659:19712   */\n      tag_423\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":19646:19712   */\n      swap1\n      pop\n        /* \"#utility.yul\":19576:19718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19724:19799   */\n    tag_463:\n        /* \"#utility.yul\":19767:19770   */\n      0x00\n        /* \"#utility.yul\":19788:19793   */\n      dup2\n        /* \"#utility.yul\":19781:19793   */\n      swap1\n      pop\n        /* \"#utility.yul\":19724:19799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19805:20074   */\n    tag_464:\n        /* \"#utility.yul\":19915:19954   */\n      tag_684\n        /* \"#utility.yul\":19946:19953   */\n      dup4\n        /* \"#utility.yul\":19915:19954   */\n      tag_462\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":19976:20067   */\n      tag_685\n        /* \"#utility.yul\":20025:20066   */\n      tag_686\n        /* \"#utility.yul\":20049:20065   */\n      dup3\n        /* \"#utility.yul\":20025:20066   */\n      tag_463\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":20017:20023   */\n      dup5\n        /* \"#utility.yul\":20010:20014   */\n      dup5\n        /* \"#utility.yul\":20004:20015   */\n      sload\n        /* \"#utility.yul\":19976:20067   */\n      tag_460\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":19970:19974   */\n      dup3\n        /* \"#utility.yul\":19963:20068   */\n      sstore\n        /* \"#utility.yul\":19881:20074   */\n      pop\n        /* \"#utility.yul\":19805:20074   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20080:20153   */\n    tag_465:\n        /* \"#utility.yul\":20125:20128   */\n      0x00\n        /* \"#utility.yul\":20080:20153   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":20159:20348   */\n    tag_466:\n        /* \"#utility.yul\":20236:20268   */\n      tag_689\n      tag_465\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":20277:20342   */\n      tag_690\n        /* \"#utility.yul\":20335:20341   */\n      dup2\n        /* \"#utility.yul\":20327:20333   */\n      dup5\n        /* \"#utility.yul\":20321:20325   */\n      dup5\n        /* \"#utility.yul\":20277:20342   */\n      tag_464\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":20212:20348   */\n      pop\n        /* \"#utility.yul\":20159:20348   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20354:20540   */\n    tag_467:\n        /* \"#utility.yul\":20414:20534   */\n    tag_692:\n        /* \"#utility.yul\":20431:20434   */\n      dup2\n        /* \"#utility.yul\":20424:20429   */\n      dup2\n        /* \"#utility.yul\":20421:20435   */\n      lt\n        /* \"#utility.yul\":20414:20534   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":20485:20524   */\n      tag_695\n        /* \"#utility.yul\":20522:20523   */\n      0x00\n        /* \"#utility.yul\":20515:20520   */\n      dup3\n        /* \"#utility.yul\":20485:20524   */\n      tag_466\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":20458:20459   */\n      0x01\n        /* \"#utility.yul\":20451:20456   */\n      dup2\n        /* \"#utility.yul\":20447:20460   */\n      add\n        /* \"#utility.yul\":20438:20460   */\n      swap1\n      pop\n        /* \"#utility.yul\":20414:20534   */\n      jump(tag_692)\n    tag_694:\n        /* \"#utility.yul\":20354:20540   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20546:21089   */\n    tag_468:\n        /* \"#utility.yul\":20647:20649   */\n      0x1f\n        /* \"#utility.yul\":20642:20645   */\n      dup3\n        /* \"#utility.yul\":20639:20650   */\n      gt\n        /* \"#utility.yul\":20636:21082   */\n      iszero\n      tag_697\n      jumpi\n        /* \"#utility.yul\":20681:20719   */\n      tag_698\n        /* \"#utility.yul\":20713:20718   */\n      dup2\n        /* \"#utility.yul\":20681:20719   */\n      tag_457\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":20765:20794   */\n      tag_699\n        /* \"#utility.yul\":20783:20793   */\n      dup5\n        /* \"#utility.yul\":20765:20794   */\n      tag_458\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":20755:20763   */\n      dup2\n        /* \"#utility.yul\":20751:20795   */\n      add\n        /* \"#utility.yul\":20948:20950   */\n      0x20\n        /* \"#utility.yul\":20936:20946   */\n      dup6\n        /* \"#utility.yul\":20933:20951   */\n      lt\n        /* \"#utility.yul\":20930:20979   */\n      iszero\n      tag_700\n      jumpi\n        /* \"#utility.yul\":20969:20977   */\n      dup2\n        /* \"#utility.yul\":20954:20977   */\n      swap1\n      pop\n        /* \"#utility.yul\":20930:20979   */\n    tag_700:\n        /* \"#utility.yul\":20992:21072   */\n      tag_701\n        /* \"#utility.yul\":21048:21070   */\n      tag_702\n        /* \"#utility.yul\":21066:21069   */\n      dup6\n        /* \"#utility.yul\":21048:21070   */\n      tag_458\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":21038:21046   */\n      dup4\n        /* \"#utility.yul\":21034:21071   */\n      add\n        /* \"#utility.yul\":21021:21032   */\n      dup3\n        /* \"#utility.yul\":20992:21072   */\n      tag_467\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":20651:21082   */\n      pop\n      pop\n        /* \"#utility.yul\":20636:21082   */\n    tag_697:\n        /* \"#utility.yul\":20546:21089   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21095:21212   */\n    tag_469:\n        /* \"#utility.yul\":21149:21157   */\n      0x00\n        /* \"#utility.yul\":21199:21204   */\n      dup3\n        /* \"#utility.yul\":21193:21197   */\n      dup3\n        /* \"#utility.yul\":21189:21205   */\n      shr\n        /* \"#utility.yul\":21168:21205   */\n      swap1\n      pop\n        /* \"#utility.yul\":21095:21212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21218:21387   */\n    tag_470:\n        /* \"#utility.yul\":21262:21268   */\n      0x00\n        /* \"#utility.yul\":21295:21346   */\n      tag_705\n        /* \"#utility.yul\":21343:21344   */\n      0x00\n        /* \"#utility.yul\":21339:21345   */\n      not\n        /* \"#utility.yul\":21331:21336   */\n      dup5\n        /* \"#utility.yul\":21328:21329   */\n      0x08\n        /* \"#utility.yul\":21324:21337   */\n      mul\n        /* \"#utility.yul\":21295:21346   */\n      tag_469\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":21291:21347   */\n      not\n        /* \"#utility.yul\":21376:21380   */\n      dup1\n        /* \"#utility.yul\":21370:21374   */\n      dup4\n        /* \"#utility.yul\":21366:21381   */\n      and\n        /* \"#utility.yul\":21356:21381   */\n      swap2\n      pop\n        /* \"#utility.yul\":21269:21387   */\n      pop\n        /* \"#utility.yul\":21218:21387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21392:21687   */\n    tag_471:\n        /* \"#utility.yul\":21468:21472   */\n      0x00\n        /* \"#utility.yul\":21614:21643   */\n      tag_707\n        /* \"#utility.yul\":21639:21642   */\n      dup4\n        /* \"#utility.yul\":21633:21637   */\n      dup4\n        /* \"#utility.yul\":21614:21643   */\n      tag_470\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":21606:21643   */\n      swap2\n      pop\n        /* \"#utility.yul\":21676:21679   */\n      dup3\n        /* \"#utility.yul\":21673:21674   */\n      0x02\n        /* \"#utility.yul\":21669:21680   */\n      mul\n        /* \"#utility.yul\":21663:21667   */\n      dup3\n        /* \"#utility.yul\":21660:21681   */\n      or\n        /* \"#utility.yul\":21652:21681   */\n      swap1\n      pop\n        /* \"#utility.yul\":21392:21687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21692:23087   */\n    tag_249:\n        /* \"#utility.yul\":21809:21846   */\n      tag_709\n        /* \"#utility.yul\":21842:21845   */\n      dup3\n        /* \"#utility.yul\":21809:21846   */\n      tag_418\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":21911:21929   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":21903:21909   */\n      dup2\n        /* \"#utility.yul\":21900:21930   */\n      gt\n        /* \"#utility.yul\":21897:21953   */\n      iszero\n      tag_710\n      jumpi\n        /* \"#utility.yul\":21933:21951   */\n      tag_711\n      tag_339\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":21897:21953   */\n    tag_710:\n        /* \"#utility.yul\":21977:22015   */\n      tag_712\n        /* \"#utility.yul\":22009:22013   */\n      dup3\n        /* \"#utility.yul\":22003:22014   */\n      sload\n        /* \"#utility.yul\":21977:22015   */\n      tag_167\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":22062:22129   */\n      tag_713\n        /* \"#utility.yul\":22122:22128   */\n      dup3\n        /* \"#utility.yul\":22114:22120   */\n      dup3\n        /* \"#utility.yul\":22108:22112   */\n      dup6\n        /* \"#utility.yul\":22062:22129   */\n      tag_468\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":22156:22157   */\n      0x00\n        /* \"#utility.yul\":22180:22184   */\n      0x20\n        /* \"#utility.yul\":22167:22184   */\n      swap1\n      pop\n        /* \"#utility.yul\":22212:22214   */\n      0x1f\n        /* \"#utility.yul\":22204:22210   */\n      dup4\n        /* \"#utility.yul\":22201:22215   */\n      gt\n        /* \"#utility.yul\":22229:22230   */\n      0x01\n        /* \"#utility.yul\":22224:22842   */\n      dup2\n      eq\n      tag_715\n      jumpi\n        /* \"#utility.yul\":22886:22887   */\n      0x00\n        /* \"#utility.yul\":22903:22909   */\n      dup5\n        /* \"#utility.yul\":22900:22977   */\n      iszero\n      tag_716\n      jumpi\n        /* \"#utility.yul\":22952:22961   */\n      dup3\n        /* \"#utility.yul\":22947:22950   */\n      dup8\n        /* \"#utility.yul\":22943:22962   */\n      add\n        /* \"#utility.yul\":22937:22963   */\n      mload\n        /* \"#utility.yul\":22928:22963   */\n      swap1\n      pop\n        /* \"#utility.yul\":22900:22977   */\n    tag_716:\n        /* \"#utility.yul\":23003:23070   */\n      tag_717\n        /* \"#utility.yul\":23063:23069   */\n      dup6\n        /* \"#utility.yul\":23056:23061   */\n      dup3\n        /* \"#utility.yul\":23003:23070   */\n      tag_471\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":22997:23001   */\n      dup7\n        /* \"#utility.yul\":22990:23071   */\n      sstore\n        /* \"#utility.yul\":22859:23081   */\n      pop\n        /* \"#utility.yul\":22194:23081   */\n      jump(tag_714)\n        /* \"#utility.yul\":22224:22842   */\n    tag_715:\n        /* \"#utility.yul\":22276:22280   */\n      0x1f\n        /* \"#utility.yul\":22272:22281   */\n      not\n        /* \"#utility.yul\":22264:22270   */\n      dup5\n        /* \"#utility.yul\":22260:22282   */\n      and\n        /* \"#utility.yul\":22310:22347   */\n      tag_718\n        /* \"#utility.yul\":22342:22346   */\n      dup7\n        /* \"#utility.yul\":22310:22347   */\n      tag_457\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":22369:22370   */\n      0x00\n        /* \"#utility.yul\":22383:22591   */\n    tag_719:\n        /* \"#utility.yul\":22397:22404   */\n      dup3\n        /* \"#utility.yul\":22394:22395   */\n      dup2\n        /* \"#utility.yul\":22391:22405   */\n      lt\n        /* \"#utility.yul\":22383:22591   */\n      iszero\n      tag_721\n      jumpi\n        /* \"#utility.yul\":22476:22485   */\n      dup5\n        /* \"#utility.yul\":22471:22474   */\n      dup10\n        /* \"#utility.yul\":22467:22486   */\n      add\n        /* \"#utility.yul\":22461:22487   */\n      mload\n        /* \"#utility.yul\":22453:22459   */\n      dup3\n        /* \"#utility.yul\":22446:22488   */\n      sstore\n        /* \"#utility.yul\":22527:22528   */\n      0x01\n        /* \"#utility.yul\":22519:22525   */\n      dup3\n        /* \"#utility.yul\":22515:22529   */\n      add\n        /* \"#utility.yul\":22505:22529   */\n      swap2\n      pop\n        /* \"#utility.yul\":22574:22576   */\n      0x20\n        /* \"#utility.yul\":22563:22572   */\n      dup6\n        /* \"#utility.yul\":22559:22577   */\n      add\n        /* \"#utility.yul\":22546:22577   */\n      swap5\n      pop\n        /* \"#utility.yul\":22420:22424   */\n      0x20\n        /* \"#utility.yul\":22417:22418   */\n      dup2\n        /* \"#utility.yul\":22413:22425   */\n      add\n        /* \"#utility.yul\":22408:22425   */\n      swap1\n      pop\n        /* \"#utility.yul\":22383:22591   */\n      jump(tag_719)\n    tag_721:\n        /* \"#utility.yul\":22619:22625   */\n      dup7\n        /* \"#utility.yul\":22610:22617   */\n      dup4\n        /* \"#utility.yul\":22607:22626   */\n      lt\n        /* \"#utility.yul\":22604:22783   */\n      iszero\n      tag_722\n      jumpi\n        /* \"#utility.yul\":22677:22686   */\n      dup5\n        /* \"#utility.yul\":22672:22675   */\n      dup10\n        /* \"#utility.yul\":22668:22687   */\n      add\n        /* \"#utility.yul\":22662:22688   */\n      mload\n        /* \"#utility.yul\":22720:22768   */\n      tag_723\n        /* \"#utility.yul\":22762:22766   */\n      0x1f\n        /* \"#utility.yul\":22754:22760   */\n      dup10\n        /* \"#utility.yul\":22750:22767   */\n      and\n        /* \"#utility.yul\":22739:22748   */\n      dup3\n        /* \"#utility.yul\":22720:22768   */\n      tag_470\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":22712:22718   */\n      dup4\n        /* \"#utility.yul\":22705:22769   */\n      sstore\n        /* \"#utility.yul\":22627:22783   */\n      pop\n        /* \"#utility.yul\":22604:22783   */\n    tag_722:\n        /* \"#utility.yul\":22829:22830   */\n      0x01\n        /* \"#utility.yul\":22825:22826   */\n      0x02\n        /* \"#utility.yul\":22817:22823   */\n      dup9\n        /* \"#utility.yul\":22813:22827   */\n      mul\n        /* \"#utility.yul\":22809:22831   */\n      add\n        /* \"#utility.yul\":22803:22807   */\n      dup9\n        /* \"#utility.yul\":22796:22832   */\n      sstore\n        /* \"#utility.yul\":22231:22842   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22194:23081   */\n    tag_714:\n      pop\n        /* \"#utility.yul\":21784:23087   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21692:23087   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23093:23241   */\n    tag_472:\n        /* \"#utility.yul\":23195:23206   */\n      0x00\n        /* \"#utility.yul\":23232:23235   */\n      dup2\n        /* \"#utility.yul\":23217:23235   */\n      swap1\n      pop\n        /* \"#utility.yul\":23093:23241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23247:23637   */\n    tag_473:\n        /* \"#utility.yul\":23353:23356   */\n      0x00\n        /* \"#utility.yul\":23381:23420   */\n      tag_726\n        /* \"#utility.yul\":23414:23419   */\n      dup3\n        /* \"#utility.yul\":23381:23420   */\n      tag_418\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":23436:23525   */\n      tag_727\n        /* \"#utility.yul\":23518:23524   */\n      dup2\n        /* \"#utility.yul\":23513:23516   */\n      dup6\n        /* \"#utility.yul\":23436:23525   */\n      tag_472\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":23429:23525   */\n      swap4\n      pop\n        /* \"#utility.yul\":23534:23599   */\n      tag_728\n        /* \"#utility.yul\":23592:23598   */\n      dup2\n        /* \"#utility.yul\":23587:23590   */\n      dup6\n        /* \"#utility.yul\":23580:23584   */\n      0x20\n        /* \"#utility.yul\":23573:23578   */\n      dup7\n        /* \"#utility.yul\":23569:23585   */\n      add\n        /* \"#utility.yul\":23534:23599   */\n      tag_420\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":23624:23630   */\n      dup1\n        /* \"#utility.yul\":23619:23622   */\n      dup5\n        /* \"#utility.yul\":23615:23631   */\n      add\n        /* \"#utility.yul\":23608:23631   */\n      swap2\n      pop\n        /* \"#utility.yul\":23357:23637   */\n      pop\n        /* \"#utility.yul\":23247:23637   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23643:24078   */\n    tag_285:\n        /* \"#utility.yul\":23823:23826   */\n      0x00\n        /* \"#utility.yul\":23845:23940   */\n      tag_730\n        /* \"#utility.yul\":23936:23939   */\n      dup3\n        /* \"#utility.yul\":23927:23933   */\n      dup6\n        /* \"#utility.yul\":23845:23940   */\n      tag_473\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":23838:23940   */\n      swap2\n      pop\n        /* \"#utility.yul\":23957:24052   */\n      tag_731\n        /* \"#utility.yul\":24048:24051   */\n      dup3\n        /* \"#utility.yul\":24039:24045   */\n      dup5\n        /* \"#utility.yul\":23957:24052   */\n      tag_473\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":23950:24052   */\n      swap2\n      pop\n        /* \"#utility.yul\":24069:24072   */\n      dup2\n        /* \"#utility.yul\":24062:24072   */\n      swap1\n      pop\n        /* \"#utility.yul\":23643:24078   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24084:24182   */\n    tag_474:\n        /* \"#utility.yul\":24135:24141   */\n      0x00\n        /* \"#utility.yul\":24169:24174   */\n      dup2\n        /* \"#utility.yul\":24163:24175   */\n      mload\n        /* \"#utility.yul\":24153:24175   */\n      swap1\n      pop\n        /* \"#utility.yul\":24084:24182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24188:24356   */\n    tag_475:\n        /* \"#utility.yul\":24271:24282   */\n      0x00\n        /* \"#utility.yul\":24305:24311   */\n      dup3\n        /* \"#utility.yul\":24300:24303   */\n      dup3\n        /* \"#utility.yul\":24293:24312   */\n      mstore\n        /* \"#utility.yul\":24345:24349   */\n      0x20\n        /* \"#utility.yul\":24340:24343   */\n      dup3\n        /* \"#utility.yul\":24336:24350   */\n      add\n        /* \"#utility.yul\":24321:24350   */\n      swap1\n      pop\n        /* \"#utility.yul\":24188:24356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24362:24735   */\n    tag_476:\n        /* \"#utility.yul\":24448:24451   */\n      0x00\n        /* \"#utility.yul\":24476:24514   */\n      tag_735\n        /* \"#utility.yul\":24508:24513   */\n      dup3\n        /* \"#utility.yul\":24476:24514   */\n      tag_474\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":24530:24600   */\n      tag_736\n        /* \"#utility.yul\":24593:24599   */\n      dup2\n        /* \"#utility.yul\":24588:24591   */\n      dup6\n        /* \"#utility.yul\":24530:24600   */\n      tag_475\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":24523:24600   */\n      swap4\n      pop\n        /* \"#utility.yul\":24609:24674   */\n      tag_737\n        /* \"#utility.yul\":24667:24673   */\n      dup2\n        /* \"#utility.yul\":24662:24665   */\n      dup6\n        /* \"#utility.yul\":24655:24659   */\n      0x20\n        /* \"#utility.yul\":24648:24653   */\n      dup7\n        /* \"#utility.yul\":24644:24660   */\n      add\n        /* \"#utility.yul\":24609:24674   */\n      tag_420\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":24699:24728   */\n      tag_738\n        /* \"#utility.yul\":24721:24727   */\n      dup2\n        /* \"#utility.yul\":24699:24728   */\n      tag_421\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":24694:24697   */\n      dup5\n        /* \"#utility.yul\":24690:24729   */\n      add\n        /* \"#utility.yul\":24683:24729   */\n      swap2\n      pop\n        /* \"#utility.yul\":24452:24735   */\n      pop\n        /* \"#utility.yul\":24362:24735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24741:25381   */\n    tag_317:\n        /* \"#utility.yul\":24936:24940   */\n      0x00\n        /* \"#utility.yul\":24974:24977   */\n      0x80\n        /* \"#utility.yul\":24963:24972   */\n      dup3\n        /* \"#utility.yul\":24959:24978   */\n      add\n        /* \"#utility.yul\":24951:24978   */\n      swap1\n      pop\n        /* \"#utility.yul\":24988:25059   */\n      tag_740\n        /* \"#utility.yul\":25056:25057   */\n      0x00\n        /* \"#utility.yul\":25045:25054   */\n      dup4\n        /* \"#utility.yul\":25041:25058   */\n      add\n        /* \"#utility.yul\":25032:25038   */\n      dup8\n        /* \"#utility.yul\":24988:25059   */\n      tag_428\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":25069:25141   */\n      tag_741\n        /* \"#utility.yul\":25137:25139   */\n      0x20\n        /* \"#utility.yul\":25126:25135   */\n      dup4\n        /* \"#utility.yul\":25122:25140   */\n      add\n        /* \"#utility.yul\":25113:25119   */\n      dup7\n        /* \"#utility.yul\":25069:25141   */\n      tag_428\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":25151:25223   */\n      tag_742\n        /* \"#utility.yul\":25219:25221   */\n      0x40\n        /* \"#utility.yul\":25208:25217   */\n      dup4\n        /* \"#utility.yul\":25204:25222   */\n      add\n        /* \"#utility.yul\":25195:25201   */\n      dup6\n        /* \"#utility.yul\":25151:25223   */\n      tag_431\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":25270:25279   */\n      dup2\n        /* \"#utility.yul\":25264:25268   */\n      dup2\n        /* \"#utility.yul\":25260:25280   */\n      sub\n        /* \"#utility.yul\":25255:25257   */\n      0x60\n        /* \"#utility.yul\":25244:25253   */\n      dup4\n        /* \"#utility.yul\":25240:25258   */\n      add\n        /* \"#utility.yul\":25233:25281   */\n      mstore\n        /* \"#utility.yul\":25298:25374   */\n      tag_743\n        /* \"#utility.yul\":25369:25373   */\n      dup2\n        /* \"#utility.yul\":25360:25366   */\n      dup5\n        /* \"#utility.yul\":25298:25374   */\n      tag_476\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":25290:25374   */\n      swap1\n      pop\n        /* \"#utility.yul\":24741:25381   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25387:25528   */\n    tag_477:\n        /* \"#utility.yul\":25443:25448   */\n      0x00\n        /* \"#utility.yul\":25474:25480   */\n      dup2\n        /* \"#utility.yul\":25468:25481   */\n      mload\n        /* \"#utility.yul\":25459:25481   */\n      swap1\n      pop\n        /* \"#utility.yul\":25490:25522   */\n      tag_745\n        /* \"#utility.yul\":25516:25521   */\n      dup2\n        /* \"#utility.yul\":25490:25522   */\n      tag_414\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":25387:25528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25534:25883   */\n    tag_320:\n        /* \"#utility.yul\":25603:25609   */\n      0x00\n        /* \"#utility.yul\":25652:25654   */\n      0x20\n        /* \"#utility.yul\":25640:25649   */\n      dup3\n        /* \"#utility.yul\":25631:25638   */\n      dup5\n        /* \"#utility.yul\":25627:25650   */\n      sub\n        /* \"#utility.yul\":25623:25655   */\n      slt\n        /* \"#utility.yul\":25620:25739   */\n      iszero\n      tag_747\n      jumpi\n        /* \"#utility.yul\":25658:25737   */\n      tag_748\n      tag_411\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":25620:25739   */\n    tag_747:\n        /* \"#utility.yul\":25778:25779   */\n      0x00\n        /* \"#utility.yul\":25803:25866   */\n      tag_749\n        /* \"#utility.yul\":25858:25865   */\n      dup5\n        /* \"#utility.yul\":25849:25855   */\n      dup3\n        /* \"#utility.yul\":25838:25847   */\n      dup6\n        /* \"#utility.yul\":25834:25856   */\n      add\n        /* \"#utility.yul\":25803:25866   */\n      tag_477\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":25793:25866   */\n      swap2\n      pop\n        /* \"#utility.yul\":25749:25876   */\n      pop\n        /* \"#utility.yul\":25534:25883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25889:26069   */\n    tag_345:\n        /* \"#utility.yul\":25937:26014   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25934:25935   */\n      0x00\n        /* \"#utility.yul\":25927:26015   */\n      mstore\n        /* \"#utility.yul\":26034:26038   */\n      0x12\n        /* \"#utility.yul\":26031:26032   */\n      0x04\n        /* \"#utility.yul\":26024:26039   */\n      mstore\n        /* \"#utility.yul\":26058:26062   */\n      0x24\n        /* \"#utility.yul\":26055:26056   */\n      0x00\n        /* \"#utility.yul\":26048:26063   */\n      revert\n        /* \"#utility.yul\":26075:26407   */\n    tag_366:\n        /* \"#utility.yul\":26196:26200   */\n      0x00\n        /* \"#utility.yul\":26234:26236   */\n      0x40\n        /* \"#utility.yul\":26223:26232   */\n      dup3\n        /* \"#utility.yul\":26219:26237   */\n      add\n        /* \"#utility.yul\":26211:26237   */\n      swap1\n      pop\n        /* \"#utility.yul\":26247:26318   */\n      tag_752\n        /* \"#utility.yul\":26315:26316   */\n      0x00\n        /* \"#utility.yul\":26304:26313   */\n      dup4\n        /* \"#utility.yul\":26300:26317   */\n      add\n        /* \"#utility.yul\":26291:26297   */\n      dup6\n        /* \"#utility.yul\":26247:26318   */\n      tag_428\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":26328:26400   */\n      tag_753\n        /* \"#utility.yul\":26396:26398   */\n      0x20\n        /* \"#utility.yul\":26385:26394   */\n      dup4\n        /* \"#utility.yul\":26381:26399   */\n      add\n        /* \"#utility.yul\":26372:26378   */\n      dup5\n        /* \"#utility.yul\":26328:26400   */\n      tag_431\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":26075:26407   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eb36b9b20e5dfb0ee1bd8aa27f80d3e26870b945520cf4f1372dbd813442fa0e64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2821": {
									"entryPoint": null,
									"id": 2821,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 357,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:12",
										"nodeType": "YulBlock",
										"src": "0:5231:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:12",
													"nodeType": "YulBlock",
													"src": "66:40:12",
													"statements": [
														{
															"nativeSrc": "77:22:12",
															"nodeType": "YulAssignment",
															"src": "77:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:12"
																},
																"nativeSrc": "87:12:12",
																"nodeType": "YulFunctionCall",
																"src": "87:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:12",
														"nodeType": "YulTypedName",
														"src": "49:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:12",
														"nodeType": "YulTypedName",
														"src": "59:6:12",
														"type": ""
													}
												],
												"src": "7:99:12"
											},
											{
												"body": {
													"nativeSrc": "140:152:12",
													"nodeType": "YulBlock",
													"src": "140:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:12",
																		"nodeType": "YulLiteral",
																		"src": "157:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:12",
																		"nodeType": "YulLiteral",
																		"src": "160:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:12"
																},
																"nativeSrc": "150:88:12",
																"nodeType": "YulFunctionCall",
																"src": "150:88:12"
															},
															"nativeSrc": "150:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:12",
																		"nodeType": "YulLiteral",
																		"src": "254:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:12",
																		"nodeType": "YulLiteral",
																		"src": "257:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:12"
																},
																"nativeSrc": "247:15:12",
																"nodeType": "YulFunctionCall",
																"src": "247:15:12"
															},
															"nativeSrc": "247:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:12",
																		"nodeType": "YulLiteral",
																		"src": "278:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:12",
																		"nodeType": "YulLiteral",
																		"src": "281:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:12"
																},
																"nativeSrc": "271:15:12",
																"nodeType": "YulFunctionCall",
																"src": "271:15:12"
															},
															"nativeSrc": "271:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:12"
											},
											{
												"body": {
													"nativeSrc": "326:152:12",
													"nodeType": "YulBlock",
													"src": "326:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:12",
																		"nodeType": "YulLiteral",
																		"src": "343:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:12",
																		"nodeType": "YulLiteral",
																		"src": "346:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:12"
																},
																"nativeSrc": "336:88:12",
																"nodeType": "YulFunctionCall",
																"src": "336:88:12"
															},
															"nativeSrc": "336:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:12",
																		"nodeType": "YulLiteral",
																		"src": "443:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:15:12",
																"nodeType": "YulFunctionCall",
																"src": "433:15:12"
															},
															"nativeSrc": "433:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:12",
																		"nodeType": "YulLiteral",
																		"src": "464:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:12",
																		"nodeType": "YulLiteral",
																		"src": "467:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:12"
																},
																"nativeSrc": "457:15:12",
																"nodeType": "YulFunctionCall",
																"src": "457:15:12"
															},
															"nativeSrc": "457:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:12"
											},
											{
												"body": {
													"nativeSrc": "535:269:12",
													"nodeType": "YulBlock",
													"src": "535:269:12",
													"statements": [
														{
															"nativeSrc": "545:22:12",
															"nodeType": "YulAssignment",
															"src": "545:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:12",
																		"nodeType": "YulLiteral",
																		"src": "565:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:12"
																},
																"nativeSrc": "555:12:12",
																"nodeType": "YulFunctionCall",
																"src": "555:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:12"
																}
															]
														},
														{
															"nativeSrc": "576:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "612:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:12"
																},
																"nativeSrc": "602:12:12",
																"nodeType": "YulFunctionCall",
																"src": "602:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:12",
																	"nodeType": "YulTypedName",
																	"src": "580:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:12",
																"nodeType": "YulBlock",
																"src": "653:51:12",
																"statements": [
																	{
																		"nativeSrc": "667:27:12",
																		"nodeType": "YulAssignment",
																		"src": "667:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:12",
																					"nodeType": "YulLiteral",
																					"src": "689:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:12"
																			},
																			"nativeSrc": "677:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:12"
																},
																"nativeSrc": "626:26:12",
																"nodeType": "YulFunctionCall",
																"src": "626:26:12"
															},
															"nativeSrc": "623:81:12",
															"nodeType": "YulIf",
															"src": "623:81:12"
														},
														{
															"body": {
																"nativeSrc": "756:42:12",
																"nodeType": "YulBlock",
																"src": "756:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:12"
																			},
																			"nativeSrc": "770:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:12"
																		},
																		"nativeSrc": "770:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:12",
																				"nodeType": "YulLiteral",
																				"src": "751:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:12"
																		},
																		"nativeSrc": "740:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:12"
																},
																"nativeSrc": "717:38:12",
																"nodeType": "YulFunctionCall",
																"src": "717:38:12"
															},
															"nativeSrc": "714:84:12",
															"nodeType": "YulIf",
															"src": "714:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:12",
														"nodeType": "YulTypedName",
														"src": "519:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:12",
														"nodeType": "YulTypedName",
														"src": "528:6:12",
														"type": ""
													}
												],
												"src": "484:320:12"
											},
											{
												"body": {
													"nativeSrc": "864:87:12",
													"nodeType": "YulBlock",
													"src": "864:87:12",
													"statements": [
														{
															"nativeSrc": "874:11:12",
															"nodeType": "YulAssignment",
															"src": "874:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:12",
																"nodeType": "YulIdentifier",
																"src": "882:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:12",
																		"nodeType": "YulLiteral",
																		"src": "902:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:12"
																},
																"nativeSrc": "895:14:12",
																"nodeType": "YulFunctionCall",
																"src": "895:14:12"
															},
															"nativeSrc": "895:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:12"
														},
														{
															"nativeSrc": "918:26:12",
															"nodeType": "YulAssignment",
															"src": "918:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:12",
																		"nodeType": "YulLiteral",
																		"src": "936:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:12",
																		"nodeType": "YulLiteral",
																		"src": "939:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:12"
																},
																"nativeSrc": "926:18:12",
																"nodeType": "YulFunctionCall",
																"src": "926:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:12",
														"nodeType": "YulTypedName",
														"src": "851:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:12",
														"nodeType": "YulTypedName",
														"src": "859:4:12",
														"type": ""
													}
												],
												"src": "810:141:12"
											},
											{
												"body": {
													"nativeSrc": "1001:49:12",
													"nodeType": "YulBlock",
													"src": "1001:49:12",
													"statements": [
														{
															"nativeSrc": "1011:33:12",
															"nodeType": "YulAssignment",
															"src": "1011:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:12"
																		},
																		"nativeSrc": "1025:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:12"
																},
																"nativeSrc": "1021:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:12",
														"nodeType": "YulTypedName",
														"src": "984:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:12",
														"nodeType": "YulTypedName",
														"src": "994:6:12",
														"type": ""
													}
												],
												"src": "957:93:12"
											},
											{
												"body": {
													"nativeSrc": "1109:54:12",
													"nodeType": "YulBlock",
													"src": "1109:54:12",
													"statements": [
														{
															"nativeSrc": "1119:37:12",
															"nodeType": "YulAssignment",
															"src": "1119:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:12"
																},
																"nativeSrc": "1140:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:12",
														"nodeType": "YulTypedName",
														"src": "1084:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:12",
														"nodeType": "YulTypedName",
														"src": "1090:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:12",
														"nodeType": "YulTypedName",
														"src": "1100:8:12",
														"type": ""
													}
												],
												"src": "1056:107:12"
											},
											{
												"body": {
													"nativeSrc": "1245:317:12",
													"nodeType": "YulBlock",
													"src": "1245:317:12",
													"statements": [
														{
															"nativeSrc": "1255:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:12"
																},
																"nativeSrc": "1272:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:12",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:12",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:12"
																},
																"nativeSrc": "1311:97:12",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:12",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:12",
															"nodeType": "YulAssignment",
															"src": "1417:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:12"
																},
																"nativeSrc": "1429:39:12",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:12"
																}
															]
														},
														{
															"nativeSrc": "1477:30:12",
															"nodeType": "YulAssignment",
															"src": "1477:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:12"
																		},
																		"nativeSrc": "1497:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:12"
																},
																"nativeSrc": "1486:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:12"
																}
															]
														},
														{
															"nativeSrc": "1516:40:12",
															"nodeType": "YulAssignment",
															"src": "1516:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:12"
																		},
																		"nativeSrc": "1536:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:12"
																},
																"nativeSrc": "1526:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:12",
														"nodeType": "YulTypedName",
														"src": "1206:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:12",
														"nodeType": "YulTypedName",
														"src": "1213:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:12",
														"nodeType": "YulTypedName",
														"src": "1225:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:12",
														"nodeType": "YulTypedName",
														"src": "1238:6:12",
														"type": ""
													}
												],
												"src": "1169:393:12"
											},
											{
												"body": {
													"nativeSrc": "1613:32:12",
													"nodeType": "YulBlock",
													"src": "1613:32:12",
													"statements": [
														{
															"nativeSrc": "1623:16:12",
															"nodeType": "YulAssignment",
															"src": "1623:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:12",
																"nodeType": "YulIdentifier",
																"src": "1634:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:12",
														"nodeType": "YulTypedName",
														"src": "1595:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:12",
														"nodeType": "YulTypedName",
														"src": "1605:7:12",
														"type": ""
													}
												],
												"src": "1568:77:12"
											},
											{
												"body": {
													"nativeSrc": "1683:28:12",
													"nodeType": "YulBlock",
													"src": "1683:28:12",
													"statements": [
														{
															"nativeSrc": "1693:12:12",
															"nodeType": "YulAssignment",
															"src": "1693:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:12",
																"nodeType": "YulIdentifier",
																"src": "1700:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:12",
														"nodeType": "YulTypedName",
														"src": "1669:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:12",
														"nodeType": "YulTypedName",
														"src": "1679:3:12",
														"type": ""
													}
												],
												"src": "1651:60:12"
											},
											{
												"body": {
													"nativeSrc": "1777:82:12",
													"nodeType": "YulBlock",
													"src": "1777:82:12",
													"statements": [
														{
															"nativeSrc": "1787:66:12",
															"nodeType": "YulAssignment",
															"src": "1787:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:12"
																				},
																				"nativeSrc": "1827:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:12"
																		},
																		"nativeSrc": "1818:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:12"
																},
																"nativeSrc": "1800:53:12",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:12",
														"nodeType": "YulTypedName",
														"src": "1757:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:12",
														"nodeType": "YulTypedName",
														"src": "1767:9:12",
														"type": ""
													}
												],
												"src": "1717:142:12"
											},
											{
												"body": {
													"nativeSrc": "1912:28:12",
													"nodeType": "YulBlock",
													"src": "1912:28:12",
													"statements": [
														{
															"nativeSrc": "1922:12:12",
															"nodeType": "YulAssignment",
															"src": "1922:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:12",
																"nodeType": "YulIdentifier",
																"src": "1929:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:12",
														"nodeType": "YulTypedName",
														"src": "1898:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:12",
														"nodeType": "YulTypedName",
														"src": "1908:3:12",
														"type": ""
													}
												],
												"src": "1865:75:12"
											},
											{
												"body": {
													"nativeSrc": "2022:193:12",
													"nodeType": "YulBlock",
													"src": "2022:193:12",
													"statements": [
														{
															"nativeSrc": "2032:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:12"
																},
																"nativeSrc": "2056:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:12",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:12"
																				},
																				"nativeSrc": "2145:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:12"
																				},
																				"nativeSrc": "2166:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:12"
																		},
																		"nativeSrc": "2117:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:12"
																},
																"nativeSrc": "2104:105:12",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:12"
															},
															"nativeSrc": "2104:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:12",
														"nodeType": "YulTypedName",
														"src": "1999:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:12",
														"nodeType": "YulTypedName",
														"src": "2005:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:12",
														"nodeType": "YulTypedName",
														"src": "2013:7:12",
														"type": ""
													}
												],
												"src": "1946:269:12"
											},
											{
												"body": {
													"nativeSrc": "2270:24:12",
													"nodeType": "YulBlock",
													"src": "2270:24:12",
													"statements": [
														{
															"nativeSrc": "2280:8:12",
															"nodeType": "YulAssignment",
															"src": "2280:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:12",
																"nodeType": "YulLiteral",
																"src": "2287:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:12",
														"nodeType": "YulTypedName",
														"src": "2266:3:12",
														"type": ""
													}
												],
												"src": "2221:73:12"
											},
											{
												"body": {
													"nativeSrc": "2353:136:12",
													"nodeType": "YulBlock",
													"src": "2353:136:12",
													"statements": [
														{
															"nativeSrc": "2363:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:12"
																},
																"nativeSrc": "2377:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:12"
																},
																"nativeSrc": "2418:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:12"
															},
															"nativeSrc": "2418:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:12",
														"nodeType": "YulTypedName",
														"src": "2339:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:12",
														"nodeType": "YulTypedName",
														"src": "2345:6:12",
														"type": ""
													}
												],
												"src": "2300:189:12"
											},
											{
												"body": {
													"nativeSrc": "2545:136:12",
													"nodeType": "YulBlock",
													"src": "2545:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:12",
																"nodeType": "YulBlock",
																"src": "2612:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:12"
																			},
																			"nativeSrc": "2626:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:12"
																		},
																		"nativeSrc": "2626:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:12"
																},
																"nativeSrc": "2562:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:12"
															},
															"nativeSrc": "2555:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:12",
																"nodeType": "YulBlock",
																"src": "2577:26:12",
																"statements": [
																	{
																		"nativeSrc": "2579:22:12",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:12"
																			},
																			"nativeSrc": "2588:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:12",
																"nodeType": "YulBlock",
																"src": "2559:2:12",
																"statements": []
															},
															"src": "2555:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:12",
														"nodeType": "YulTypedName",
														"src": "2533:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:12",
														"nodeType": "YulTypedName",
														"src": "2540:3:12",
														"type": ""
													}
												],
												"src": "2495:186:12"
											},
											{
												"body": {
													"nativeSrc": "2766:464:12",
													"nodeType": "YulBlock",
													"src": "2766:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:12",
																"nodeType": "YulBlock",
																"src": "2792:431:12",
																"statements": [
																	{
																		"nativeSrc": "2806:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:12"
																			},
																			"nativeSrc": "2822:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:12",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:12"
																					},
																					"nativeSrc": "2906:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:12"
																			},
																			"nativeSrc": "2892:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:12",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:12",
																			"nodeType": "YulBlock",
																			"src": "3093:27:12",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:12",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:12",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:12"
																			},
																			"nativeSrc": "3074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:12"
																		},
																		"nativeSrc": "3071:49:12",
																		"nodeType": "YulIf",
																		"src": "3071:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:12"
																							},
																							"nativeSrc": "3189:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:12"
																					},
																					"nativeSrc": "3175:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:12"
																			},
																			"nativeSrc": "3133:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:12"
																		},
																		"nativeSrc": "3133:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:12"
																},
																"nativeSrc": "2780:11:12",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:12"
															},
															"nativeSrc": "2777:446:12",
															"nodeType": "YulIf",
															"src": "2777:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:12",
														"nodeType": "YulTypedName",
														"src": "2742:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:12",
														"nodeType": "YulTypedName",
														"src": "2749:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:12",
														"nodeType": "YulTypedName",
														"src": "2754:10:12",
														"type": ""
													}
												],
												"src": "2687:543:12"
											},
											{
												"body": {
													"nativeSrc": "3299:54:12",
													"nodeType": "YulBlock",
													"src": "3299:54:12",
													"statements": [
														{
															"nativeSrc": "3309:37:12",
															"nodeType": "YulAssignment",
															"src": "3309:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:12"
																},
																"nativeSrc": "3330:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:12",
														"nodeType": "YulTypedName",
														"src": "3274:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:12",
														"nodeType": "YulTypedName",
														"src": "3280:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:12",
														"nodeType": "YulTypedName",
														"src": "3290:8:12",
														"type": ""
													}
												],
												"src": "3236:117:12"
											},
											{
												"body": {
													"nativeSrc": "3410:118:12",
													"nodeType": "YulBlock",
													"src": "3410:118:12",
													"statements": [
														{
															"nativeSrc": "3420:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:12"
																				},
																				"nativeSrc": "3465:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:12"
																				},
																				"nativeSrc": "3480:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:12"
																		},
																		"nativeSrc": "3436:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:12"
																},
																"nativeSrc": "3432:56:12",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:12",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:12",
															"nodeType": "YulAssignment",
															"src": "3497:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:12"
																},
																"nativeSrc": "3507:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:12",
														"nodeType": "YulTypedName",
														"src": "3387:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:12",
														"nodeType": "YulTypedName",
														"src": "3393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:12",
														"nodeType": "YulTypedName",
														"src": "3403:6:12",
														"type": ""
													}
												],
												"src": "3359:169:12"
											},
											{
												"body": {
													"nativeSrc": "3614:214:12",
													"nodeType": "YulBlock",
													"src": "3614:214:12",
													"statements": [
														{
															"nativeSrc": "3747:37:12",
															"nodeType": "YulAssignment",
															"src": "3747:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:12"
																},
																"nativeSrc": "3755:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:12"
																}
															]
														},
														{
															"nativeSrc": "3793:29:12",
															"nodeType": "YulAssignment",
															"src": "3793:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:12"
																		},
																		"nativeSrc": "3810:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:12"
																},
																"nativeSrc": "3801:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:12",
														"nodeType": "YulTypedName",
														"src": "3595:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:12",
														"nodeType": "YulTypedName",
														"src": "3601:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:12",
														"nodeType": "YulTypedName",
														"src": "3609:4:12",
														"type": ""
													}
												],
												"src": "3533:295:12"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:12",
													"nodeType": "YulBlock",
													"src": "3925:1303:12",
													"statements": [
														{
															"nativeSrc": "3936:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:12"
																},
																"nativeSrc": "3950:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:12",
																"nodeType": "YulBlock",
																"src": "4072:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:12"
																			},
																			"nativeSrc": "4074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:12"
																		},
																		"nativeSrc": "4074:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:12",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:12"
																},
																"nativeSrc": "4041:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:12"
															},
															"nativeSrc": "4038:56:12",
															"nodeType": "YulIf",
															"src": "4038:56:12"
														},
														{
															"nativeSrc": "4104:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:12"
																		},
																		"nativeSrc": "4144:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:12"
																},
																"nativeSrc": "4118:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:12"
																},
																"nativeSrc": "4203:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:12"
															},
															"nativeSrc": "4203:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:12"
														},
														{
															"nativeSrc": "4280:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:12",
																"nodeType": "YulLiteral",
																"src": "4297:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:12",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:12",
															"nodeType": "YulAssignment",
															"src": "4308:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:12",
																"nodeType": "YulLiteral",
																"src": "4321:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:12",
																		"nodeType": "YulBlock",
																		"src": "4372:611:12",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:12",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:12"
																							},
																							"nativeSrc": "4413:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:12"
																					},
																					"nativeSrc": "4401:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:12",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:12"
																					},
																					"nativeSrc": "4451:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:12",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:12",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:12",
																					"nodeType": "YulBlock",
																					"src": "4569:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:12"
																												},
																												"nativeSrc": "4608:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:12"
																										},
																										"nativeSrc": "4602:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:12"
																								},
																								"nativeSrc": "4587:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:12"
																							},
																							"nativeSrc": "4587:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:12"
																						},
																						{
																							"nativeSrc": "4646:24:12",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:12",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:12"
																								},
																								"nativeSrc": "4656:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:12",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:12",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:12"
																								},
																								"nativeSrc": "4700:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:12"
																					},
																					"nativeSrc": "4532:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:12"
																				},
																				"nativeSrc": "4524:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:12",
																					"nodeType": "YulBlock",
																					"src": "4547:21:12",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:12",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:12",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:12"
																								},
																								"nativeSrc": "4554:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:12",
																					"nodeType": "YulBlock",
																					"src": "4528:3:12",
																					"statements": []
																				},
																				"src": "4524:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:12",
																					"nodeType": "YulBlock",
																					"src": "4768:156:12",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:12"
																										},
																										"nativeSrc": "4809:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:12"
																								},
																								"nativeSrc": "4803:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:12",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:12",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:12"
																												},
																												"nativeSrc": "4891:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:12"
																										},
																										"nativeSrc": "4861:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:12"
																								},
																								"nativeSrc": "4846:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:12"
																							},
																							"nativeSrc": "4846:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:12"
																					},
																					"nativeSrc": "4748:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:12"
																				},
																				"nativeSrc": "4745:179:12",
																				"nodeType": "YulIf",
																				"src": "4745:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:12",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:12"
																									},
																									"nativeSrc": "4954:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:12",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:12"
																							},
																							"nativeSrc": "4950:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:12"
																					},
																					"nativeSrc": "4937:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:12"
																				},
																				"nativeSrc": "4937:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:12"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:12",
																	"nodeType": "YulCase",
																	"src": "4365:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:12",
																		"nodeType": "YulBlock",
																		"src": "5000:222:12",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:12",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:12",
																					"nodeType": "YulBlock",
																					"src": "5051:67:12",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:12",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:12"
																										},
																										"nativeSrc": "5084:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:12"
																								},
																								"nativeSrc": "5078:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:12"
																				},
																				"nativeSrc": "5041:77:12",
																				"nodeType": "YulIf",
																				"src": "5041:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:12"
																							},
																							"nativeSrc": "5144:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:12"
																					},
																					"nativeSrc": "5131:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:12"
																				},
																				"nativeSrc": "5131:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:12"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:12",
																	"nodeType": "YulCase",
																	"src": "4992:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:12"
																},
																"nativeSrc": "4342:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:12"
															},
															"nativeSrc": "4335:887:12",
															"nodeType": "YulSwitch",
															"src": "4335:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:12",
														"nodeType": "YulTypedName",
														"src": "3914:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:12",
														"nodeType": "YulTypedName",
														"src": "3920:3:12",
														"type": ""
													}
												],
												"src": "3833:1395:12"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f60075534801562000014575f80fd5b506040518060400160405280600981526020017f566f74696e6755535000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b0000000000000000000000000000000000000000000000000000000000815250815f908162000091919062000392565b508060019081620000a3919062000392565b5050506040518060400160405280600581526020017f41646d696e00000000000000000000000000000000000000000000000000000081525060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20908162000127919062000392565b5062000476565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620001aa57607f821691505b602082108103620001c057620001bf62000165565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001e7565b620002308683620001e7565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200027a620002746200026e8462000248565b62000251565b62000248565b9050919050565b5f819050919050565b62000295836200025a565b620002ad620002a48262000281565b848454620001f3565b825550505050565b5f90565b620002c3620002b5565b620002d08184846200028a565b505050565b5b81811015620002f757620002eb5f82620002b9565b600181019050620002d6565b5050565b601f82111562000346576200031081620001c6565b6200031b84620001d8565b810160208510156200032b578190505b620003436200033a85620001d8565b830182620002d5565b50505b505050565b5f82821c905092915050565b5f620003685f19846008026200034b565b1980831691505092915050565b5f62000382838362000357565b9150826002028217905092915050565b6200039d826200012e565b67ffffffffffffffff811115620003b957620003b862000138565b5b620003c5825462000192565b620003d2828285620002fb565b5f60209050601f83116001811462000408575f8415620003f3578287015190505b620003ff858262000375565b8655506200046e565b601f1984166200041886620001c6565b5f5b8281101562000441578489015182556001820191506020850194506020810190506200041a565b868310156200046157848901516200045d601f89168262000357565b8355505b6001600288020188555050505b505050505050565b61317780620004845f395ff3fe608060405260043610610180575f3560e01c806370a08231116100d05780639a594f0611610089578063b88d4fde11610063578063b88d4fde14610592578063c87b56dd146105ba578063d8bff5a5146105f6578063e985e9c51461063257610180565b80639a594f061461051a578063a22cb46514610542578063b3849e2a1461056a57610180565b806370a08231146103ea57806375794a3c1461042657806378d66c39146104505780638a7c3a321461048c5780638edfc059146104c857806395d89b41146104f057610180565b806323b872dd1161013d578063429b62e511610117578063429b62e51461032c5780636352211e1461036857806363f67b54146103a45780636dd7d8ea146103ce57610180565b806323b872dd146102b25780633219ac2a146102da57806342842e0e1461030457610180565b806301ffc9a71461018457806306fdde03146101c0578063081812fc146101ea578063095ea7b31461022657806312ee1b0b1461024e57806323202fe314610276575b5f80fd5b34801561018f575f80fd5b506101aa60048036038101906101a591906123cf565b61066e565b6040516101b79190612414565b60405180910390f35b3480156101cb575f80fd5b506101d461074f565b6040516101e191906124b7565b60405180910390f35b3480156101f5575f80fd5b50610210600480360381019061020b919061250a565b6107de565b60405161021d9190612574565b60405180910390f35b348015610231575f80fd5b5061024c600480360381019061024791906125b7565b6107f9565b005b348015610259575f80fd5b50610274600480360381019061026f91906125f5565b61080f565b005b348015610281575f80fd5b5061029c600480360381019061029791906125f5565b610925565b6040516102a991906124b7565b60405180910390f35b3480156102bd575f80fd5b506102d860048036038101906102d39190612620565b6109c0565b005b3480156102e5575f80fd5b506102ee610abf565b6040516102fb91906124b7565b60405180910390f35b34801561030f575f80fd5b5061032a60048036038101906103259190612620565b610c63565b005b348015610337575f80fd5b50610352600480360381019061034d91906125f5565b610c82565b60405161035f91906124b7565b60405180910390f35b348015610373575f80fd5b5061038e6004803603810190610389919061250a565b610d1d565b60405161039b9190612574565b60405180910390f35b3480156103af575f80fd5b506103b8610d2e565b6040516103c5919061267f565b60405180910390f35b6103e860048036038101906103e391906125f5565b610d34565b005b3480156103f5575f80fd5b50610410600480360381019061040b91906125f5565b611009565b60405161041d919061267f565b60405180910390f35b348015610431575f80fd5b5061043a6110bf565b604051610447919061267f565b60405180910390f35b34801561045b575f80fd5b50610476600480360381019061047191906125f5565b6110c5565b604051610483919061267f565b60405180910390f35b348015610497575f80fd5b506104b260048036038101906104ad91906125f5565b6110da565b6040516104bf919061267f565b60405180910390f35b3480156104d3575f80fd5b506104ee60048036038101906104e991906127c4565b611120565b005b3480156104fb575f80fd5b506105046111fa565b60405161051191906124b7565b60405180910390f35b348015610525575f80fd5b50610540600480360381019061053b91906127c4565b61128a565b005b34801561054d575f80fd5b5061056860048036038101906105639190612848565b6113a6565b005b348015610575575f80fd5b50610590600480360381019061058b91906125f5565b6113bc565b005b34801561059d575f80fd5b506105b860048036038101906105b39190612924565b611492565b005b3480156105c5575f80fd5b506105e060048036038101906105db919061250a565b6114af565b6040516105ed91906124b7565b60405180910390f35b348015610601575f80fd5b5061061c600480360381019061061791906125f5565b611515565b6040516106299190612574565b60405180910390f35b34801561063d575f80fd5b50610658600480360381019061065391906129a4565b611545565b6040516106659190612414565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061073857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806107485750610747826115d3565b5b9050919050565b60605f805461075d90612a0f565b80601f016020809104026020016040519081016040528092919081815260200182805461078990612a0f565b80156107d45780601f106107ab576101008083540402835291602001916107d4565b820191905f5260205f20905b8154815290600101906020018083116107b757829003601f168201915b5050505050905090565b5f6107e88261163c565b506107f2826116c2565b9050919050565b61080b82826108066116fb565b611702565b5050565b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805461085890612a0f565b90501161089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089190612aaf565b60405180910390fd5b60095f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6108e29190612311565b600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f905550565b6009602052805f5260405f205f91509050805461094190612a0f565b80601f016020809104026020016040519081016040528092919081815260200182805461096d90612a0f565b80156109b85780601f1061098f576101008083540402835291602001916109b8565b820191905f5260205f20905b81548152906001019060200180831161099b57829003601f168201915b505050505081565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a30575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610a279190612574565b60405180910390fd5b5f610a438383610a3e6116fb565b611714565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ab9578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610ab093929190612acd565b60405180910390fd5b50505050565b60605f3390505f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8a90612b4c565b60405180910390fd5b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054610bdc90612a0f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0890612a0f565b8015610c535780601f10610c2a57610100808354040283529160200191610c53565b820191905f5260205f20905b815481529060010190602001808311610c3657829003601f168201915b5050505050905080935050505090565b610c7d83838360405180602001604052805f815250611492565b505050565b6008602052805f5260405f205f915090508054610c9e90612a0f565b80601f0160208091040260200160405190810160405280929190818152602001828054610cca90612a0f565b8015610d155780601f10610cec57610100808354040283529160200191610d15565b820191905f5260205f20905b815481529060010190602001808311610cf857829003601f168201915b505050505081565b5f610d278261163c565b9050919050565b60075481565b5f3390505f3490505f60095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054610d8590612a0f565b905011610dc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbe90612bb4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff16600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8890612c1c565b60405180910390fd5b600754811015610ed6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecd90612c84565b60405180910390fd5b6001600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f209190612ccf565b600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555082600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f6006549050610fec838261191f565b60065f815480929190610ffe90612d02565b919050555050505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361107a575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016110719190612574565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60065481565b600b602052805f5260405f205f915090505481565b5f600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805461116990612a0f565b9050116111ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a290612aaf565b60405180910390fd5b8060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090816111f59190612ee6565b505050565b60606001805461120990612a0f565b80601f016020809104026020016040519081016040528092919081815260200182805461123590612a0f565b80156112805780601f1061125757610100808354040283529160200191611280565b820191905f5260205f20905b81548152906001019060200180831161126357829003601f168201915b5050505050905090565b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080546112d390612a0f565b905011611315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130c90612aaf565b60405180910390fd5b8060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20908161135f9190612ee6565b505f600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b6113b86113b16116fb565b838361193c565b5050565b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805461140590612a0f565b905011611447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143e90612aaf565b60405180910390fd5b60085f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f61148f9190612311565b50565b61149d8484846109c0565b6114a984848484611aa5565b50505050565b60606114ba8261163c565b505f6114c4611c57565b90505f8151116114e25760405180602001604052805f81525061150d565b806114ec84611c6d565b6040516020016114fd929190612fef565b6040516020818303038152906040525b915050919050565b600a602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061164783611d37565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116b957826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116b0919061267f565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b61170f8383836001611d70565b505050565b5f8061171f84611d37565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146117605761175f818486611f2f565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117eb5761179f5f855f80611d70565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461186a57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b611938828260405180602001604052805f815250611ff2565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119ac57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016119a39190612574565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611a989190612414565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611c51578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611ae86116fb565b8685856040518563ffffffff1660e01b8152600401611b0a9493929190613064565b6020604051808303815f875af1925050508015611b4557506040513d601f19601f82011682018060405250810190611b4291906130c2565b60015b611bc6573d805f8114611b73576040519150601f19603f3d011682016040523d82523d5f602084013e611b78565b606091505b505f815103611bbe57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611bb59190612574565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611c4f57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611c469190612574565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f6001611c7b8461200d565b0190505f8167ffffffffffffffff811115611c9957611c986126a0565b5b6040519080825280601f01601f191660200182016040528015611ccb5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611d2c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611d2157611d206130ed565b5b0494505f8503611cd8575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611da857505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611eda575f611db78461163c565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611e2157508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611e345750611e328184611545565b155b15611e7657826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611e6d9190612574565b60405180910390fd5b8115611ed857838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611f3a83838361215e565b611fed575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611fae57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611fa5919061267f565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611fe492919061311a565b60405180910390fd5b505050565b611ffc838361221e565b6120085f848484611aa5565b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612069577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161205f5761205e6130ed565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106120a6576d04ee2d6d415b85acef8100000000838161209c5761209b6130ed565b5b0492506020810190505b662386f26fc1000083106120d557662386f26fc1000083816120cb576120ca6130ed565b5b0492506010810190505b6305f5e10083106120fe576305f5e10083816120f4576120f36130ed565b5b0492506008810190505b6127108310612123576127108381612119576121186130ed565b5b0492506004810190505b60648310612146576064838161213c5761213b6130ed565b5b0492506002810190505b600a8310612155576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561221557508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806121d657506121d58484611545565b5b8061221457508273ffffffffffffffffffffffffffffffffffffffff166121fc836116c2565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361228e575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016122859190612574565b60405180910390fd5b5f61229a83835f611714565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461230c575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016123039190612574565b60405180910390fd5b505050565b50805461231d90612a0f565b5f825580601f1061232e575061234b565b601f0160209004905f5260205f209081019061234a919061234e565b5b50565b5b80821115612365575f815f90555060010161234f565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6123ae8161237a565b81146123b8575f80fd5b50565b5f813590506123c9816123a5565b92915050565b5f602082840312156123e4576123e3612372565b5b5f6123f1848285016123bb565b91505092915050565b5f8115159050919050565b61240e816123fa565b82525050565b5f6020820190506124275f830184612405565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612464578082015181840152602081019050612449565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6124898261242d565b6124938185612437565b93506124a3818560208601612447565b6124ac8161246f565b840191505092915050565b5f6020820190508181035f8301526124cf818461247f565b905092915050565b5f819050919050565b6124e9816124d7565b81146124f3575f80fd5b50565b5f81359050612504816124e0565b92915050565b5f6020828403121561251f5761251e612372565b5b5f61252c848285016124f6565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61255e82612535565b9050919050565b61256e81612554565b82525050565b5f6020820190506125875f830184612565565b92915050565b61259681612554565b81146125a0575f80fd5b50565b5f813590506125b18161258d565b92915050565b5f80604083850312156125cd576125cc612372565b5b5f6125da858286016125a3565b92505060206125eb858286016124f6565b9150509250929050565b5f6020828403121561260a57612609612372565b5b5f612617848285016125a3565b91505092915050565b5f805f6060848603121561263757612636612372565b5b5f612644868287016125a3565b9350506020612655868287016125a3565b9250506040612666868287016124f6565b9150509250925092565b612679816124d7565b82525050565b5f6020820190506126925f830184612670565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6126d68261246f565b810181811067ffffffffffffffff821117156126f5576126f46126a0565b5b80604052505050565b5f612707612369565b905061271382826126cd565b919050565b5f67ffffffffffffffff821115612732576127316126a0565b5b61273b8261246f565b9050602081019050919050565b828183375f83830152505050565b5f61276861276384612718565b6126fe565b9050828152602081018484840111156127845761278361269c565b5b61278f848285612748565b509392505050565b5f82601f8301126127ab576127aa612698565b5b81356127bb848260208601612756565b91505092915050565b5f80604083850312156127da576127d9612372565b5b5f6127e7858286016125a3565b925050602083013567ffffffffffffffff81111561280857612807612376565b5b61281485828601612797565b9150509250929050565b612827816123fa565b8114612831575f80fd5b50565b5f813590506128428161281e565b92915050565b5f806040838503121561285e5761285d612372565b5b5f61286b858286016125a3565b925050602061287c85828601612834565b9150509250929050565b5f67ffffffffffffffff8211156128a05761289f6126a0565b5b6128a98261246f565b9050602081019050919050565b5f6128c86128c384612886565b6126fe565b9050828152602081018484840111156128e4576128e361269c565b5b6128ef848285612748565b509392505050565b5f82601f83011261290b5761290a612698565b5b813561291b8482602086016128b6565b91505092915050565b5f805f806080858703121561293c5761293b612372565b5b5f612949878288016125a3565b945050602061295a878288016125a3565b935050604061296b878288016124f6565b925050606085013567ffffffffffffffff81111561298c5761298b612376565b5b612998878288016128f7565b91505092959194509250565b5f80604083850312156129ba576129b9612372565b5b5f6129c7858286016125a3565b92505060206129d8858286016125a3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612a2657607f821691505b602082108103612a3957612a386129e2565b5b50919050565b7f4f6e6c792061646d696e732063616e206578656375746520746869732066756e5f8201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b5f612a99602583612437565b9150612aa482612a3f565b604082019050919050565b5f6020820190508181035f830152612ac681612a8d565b9050919050565b5f606082019050612ae05f830186612565565b612aed6020830185612670565b612afa6040830184612565565b949350505050565b7f596f7520686176656e277420766f7465642079657400000000000000000000005f82015250565b5f612b36601583612437565b9150612b4182612b02565b602082019050919050565b5f6020820190508181035f830152612b6381612b2a565b9050919050565b7f43616e646964617465206e6f74207265676973746572656400000000000000005f82015250565b5f612b9e601883612437565b9150612ba982612b6a565b602082019050919050565b5f6020820190508181035f830152612bcb81612b92565b9050919050565b7f416464726573732068617320616c726561647920766f746564000000000000005f82015250565b5f612c06601983612437565b9150612c1182612bd2565b602082019050919050565b5f6020820190508181035f830152612c3381612bfa565b9050919050565b7f496e73756666696369656e7420766f74696e672076616c7565000000000000005f82015250565b5f612c6e601983612437565b9150612c7982612c3a565b602082019050919050565b5f6020820190508181035f830152612c9b81612c62565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612cd9826124d7565b9150612ce4836124d7565b9250828201905080821115612cfc57612cfb612ca2565b5b92915050565b5f612d0c826124d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d3e57612d3d612ca2565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612da57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612d6a565b612daf8683612d6a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f612dea612de5612de0846124d7565b612dc7565b6124d7565b9050919050565b5f819050919050565b612e0383612dd0565b612e17612e0f82612df1565b848454612d76565b825550505050565b5f90565b612e2b612e1f565b612e36818484612dfa565b505050565b5b81811015612e5957612e4e5f82612e23565b600181019050612e3c565b5050565b601f821115612e9e57612e6f81612d49565b612e7884612d5b565b81016020851015612e87578190505b612e9b612e9385612d5b565b830182612e3b565b50505b505050565b5f82821c905092915050565b5f612ebe5f1984600802612ea3565b1980831691505092915050565b5f612ed68383612eaf565b9150826002028217905092915050565b612eef8261242d565b67ffffffffffffffff811115612f0857612f076126a0565b5b612f128254612a0f565b612f1d828285612e5d565b5f60209050601f831160018114612f4e575f8415612f3c578287015190505b612f468582612ecb565b865550612fad565b601f198416612f5c86612d49565b5f5b82811015612f8357848901518255600182019150602085019450602081019050612f5e565b86831015612fa05784890151612f9c601f891682612eaf565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f612fc98261242d565b612fd38185612fb5565b9350612fe3818560208601612447565b80840191505092915050565b5f612ffa8285612fbf565b91506130068284612fbf565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61303682613012565b613040818561301c565b9350613050818560208601612447565b6130598161246f565b840191505092915050565b5f6080820190506130775f830187612565565b6130846020830186612565565b6130916040830185612670565b81810360608301526130a3818461302c565b905095945050505050565b5f815190506130bc816123a5565b92915050565b5f602082840312156130d7576130d6612372565b5b5f6130e4848285016130ae565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f60408201905061312d5f830185612565565b61313a6020830184612670565b939250505056fea2646970667358221220eb36b9b20e5dfb0ee1bd8aa27f80d3e26870b945520cf4f1372dbd813442fa0e64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x566F74696E675553500000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x91 SWAP2 SWAP1 PUSH3 0x392 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA3 SWAP2 SWAP1 PUSH3 0x392 JUMP JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41646D696E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH3 0x127 SWAP2 SWAP1 PUSH3 0x392 JUMP JUMPDEST POP PUSH3 0x476 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C0 JUMPI PUSH3 0x1BF PUSH3 0x165 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x224 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x1E7 JUMP JUMPDEST PUSH3 0x230 DUP7 DUP4 PUSH3 0x1E7 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x27A PUSH3 0x274 PUSH3 0x26E DUP5 PUSH3 0x248 JUMP JUMPDEST PUSH3 0x251 JUMP JUMPDEST PUSH3 0x248 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x295 DUP4 PUSH3 0x25A JUMP JUMPDEST PUSH3 0x2AD PUSH3 0x2A4 DUP3 PUSH3 0x281 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x1F3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x2C3 PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x2D0 DUP2 DUP5 DUP5 PUSH3 0x28A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2F7 JUMPI PUSH3 0x2EB PUSH0 DUP3 PUSH3 0x2B9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x2D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x346 JUMPI PUSH3 0x310 DUP2 PUSH3 0x1C6 JUMP JUMPDEST PUSH3 0x31B DUP5 PUSH3 0x1D8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x32B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x343 PUSH3 0x33A DUP6 PUSH3 0x1D8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x2D5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x368 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x34B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x382 DUP4 DUP4 PUSH3 0x357 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x39D DUP3 PUSH3 0x12E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3B9 JUMPI PUSH3 0x3B8 PUSH3 0x138 JUMP JUMPDEST JUMPDEST PUSH3 0x3C5 DUP3 SLOAD PUSH3 0x192 JUMP JUMPDEST PUSH3 0x3D2 DUP3 DUP3 DUP6 PUSH3 0x2FB JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x408 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x3F3 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x3FF DUP6 DUP3 PUSH3 0x375 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x46E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x418 DUP7 PUSH3 0x1C6 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x441 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x41A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x461 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x45D PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x357 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3177 DUP1 PUSH3 0x484 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x9A594F06 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xD8BFF5A5 EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x632 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x9A594F06 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xB3849E2A EQ PUSH2 0x56A JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x78D66C39 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x8A7C3A32 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x8EDFC059 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4F0 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x429B62E5 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x63F67B54 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x6DD7D8EA EQ PUSH2 0x3CE JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x3219AC2A EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x304 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x12EE1B0B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x23202FE3 EQ PUSH2 0x276 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x2414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x80F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0xABF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43A PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x476 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x27C4 JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x27C4 JUMP JUMPDEST PUSH2 0x128A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x2848 JUMP JUMPDEST PUSH2 0x13A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x13BC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x2924 JUMP JUMPDEST PUSH2 0x1492 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x658 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x29A4 JUMP JUMPDEST PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x2414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x738 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x748 JUMPI POP PUSH2 0x747 DUP3 PUSH2 0x15D3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x75D SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x789 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x7E8 DUP3 PUSH2 0x163C JUMP JUMPDEST POP PUSH2 0x7F2 DUP3 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80B DUP3 DUP3 PUSH2 0x806 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1702 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x858 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP GT PUSH2 0x89A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x891 SWAP1 PUSH2 0x2AAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x941 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x96D SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA30 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xA43 DUP4 DUP4 PUSH2 0xA3E PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8A SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xBDC SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC08 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC53 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC53 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC36 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xC7D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1492 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0xC9E SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCCA SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD15 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCEC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD15 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCF8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xD27 DUP3 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 CALLVALUE SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xD85 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP GT PUSH2 0xDC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBE SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE88 SWAP1 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECD SWAP1 PUSH2 0x2C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0xFEC DUP4 DUP3 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFFE SWAP1 PUSH2 0x2D02 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x1169 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP GT PUSH2 0x11AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A2 SWAP1 PUSH2 0x2AAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1209 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1235 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1280 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1257 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1280 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1263 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x12D3 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130C SWAP1 PUSH2 0x2AAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x135F SWAP2 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST POP PUSH0 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x13B8 PUSH2 0x13B1 PUSH2 0x16FB JUMP JUMPDEST DUP4 DUP4 PUSH2 0x193C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x1405 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1447 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143E SWAP1 PUSH2 0x2AAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x148F SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x149D DUP5 DUP5 DUP5 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x14A9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1AA5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x14BA DUP3 PUSH2 0x163C JUMP JUMPDEST POP PUSH0 PUSH2 0x14C4 PUSH2 0x1C57 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x14E2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x150D JUMP JUMPDEST DUP1 PUSH2 0x14EC DUP5 PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14FD SWAP3 SWAP2 SWAP1 PUSH2 0x2FEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1647 DUP4 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B9 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B0 SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x170F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1D70 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x171F DUP5 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1760 JUMPI PUSH2 0x175F DUP2 DUP5 DUP7 PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17EB JUMPI PUSH2 0x179F PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x186A JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1938 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1FF2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19AC JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A3 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A98 SWAP2 SWAP1 PUSH2 0x2414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1C51 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1AE8 PUSH2 0x16FB JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3064 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1B45 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B42 SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1BC6 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1B73 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1BBE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB5 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1C4F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C46 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1C7B DUP5 PUSH2 0x200D JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C99 JUMPI PUSH2 0x1C98 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1CCB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1D2C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1D21 JUMPI PUSH2 0x1D20 PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1CD8 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1DA8 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1EDA JUMPI PUSH0 PUSH2 0x1DB7 DUP5 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1E21 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1E34 JUMPI POP PUSH2 0x1E32 DUP2 DUP5 PUSH2 0x1545 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1E76 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E6D SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1ED8 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F3A DUP4 DUP4 DUP4 PUSH2 0x215E JUMP JUMPDEST PUSH2 0x1FED JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FAE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA5 SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE4 SWAP3 SWAP2 SWAP1 PUSH2 0x311A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1FFC DUP4 DUP4 PUSH2 0x221E JUMP JUMPDEST PUSH2 0x2008 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1AA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2069 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x205F JUMPI PUSH2 0x205E PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x20A6 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x209C JUMPI PUSH2 0x209B PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x20D5 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x20CB JUMPI PUSH2 0x20CA PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x20FE JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x20F4 JUMPI PUSH2 0x20F3 PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2123 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2119 JUMPI PUSH2 0x2118 PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2146 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x213C JUMPI PUSH2 0x213B PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2155 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2215 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x21D6 JUMPI POP PUSH2 0x21D5 DUP5 DUP5 PUSH2 0x1545 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2214 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21FC DUP4 PUSH2 0x16C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x228E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2285 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x229A DUP4 DUP4 PUSH0 PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x230C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2303 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x231D SWAP1 PUSH2 0x2A0F JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x232E JUMPI POP PUSH2 0x234B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x234A SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2365 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x234F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23AE DUP2 PUSH2 0x237A JUMP JUMPDEST DUP2 EQ PUSH2 0x23B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23C9 DUP2 PUSH2 0x23A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E4 JUMPI PUSH2 0x23E3 PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23F1 DUP5 DUP3 DUP6 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x240E DUP2 PUSH2 0x23FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2427 PUSH0 DUP4 ADD DUP5 PUSH2 0x2405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2464 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2449 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2489 DUP3 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x2493 DUP2 DUP6 PUSH2 0x2437 JUMP JUMPDEST SWAP4 POP PUSH2 0x24A3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x24AC DUP2 PUSH2 0x246F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24CF DUP2 DUP5 PUSH2 0x247F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E9 DUP2 PUSH2 0x24D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x24F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2504 DUP2 PUSH2 0x24E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251F JUMPI PUSH2 0x251E PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252C DUP5 DUP3 DUP6 ADD PUSH2 0x24F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x255E DUP3 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x256E DUP2 PUSH2 0x2554 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2587 PUSH0 DUP4 ADD DUP5 PUSH2 0x2565 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2596 DUP2 PUSH2 0x2554 JUMP JUMPDEST DUP2 EQ PUSH2 0x25A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25B1 DUP2 PUSH2 0x258D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25CD JUMPI PUSH2 0x25CC PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25DA DUP6 DUP3 DUP7 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25EB DUP6 DUP3 DUP7 ADD PUSH2 0x24F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x260A JUMPI PUSH2 0x2609 PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2617 DUP5 DUP3 DUP6 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2637 JUMPI PUSH2 0x2636 PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2644 DUP7 DUP3 DUP8 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2655 DUP7 DUP3 DUP8 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2666 DUP7 DUP3 DUP8 ADD PUSH2 0x24F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2679 DUP2 PUSH2 0x24D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2692 PUSH0 DUP4 ADD DUP5 PUSH2 0x2670 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x26D6 DUP3 PUSH2 0x246F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x26F5 JUMPI PUSH2 0x26F4 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2707 PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP PUSH2 0x2713 DUP3 DUP3 PUSH2 0x26CD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2732 JUMPI PUSH2 0x2731 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST PUSH2 0x273B DUP3 PUSH2 0x246F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2768 PUSH2 0x2763 DUP5 PUSH2 0x2718 JUMP JUMPDEST PUSH2 0x26FE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2784 JUMPI PUSH2 0x2783 PUSH2 0x269C JUMP JUMPDEST JUMPDEST PUSH2 0x278F DUP5 DUP3 DUP6 PUSH2 0x2748 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27AB JUMPI PUSH2 0x27AA PUSH2 0x2698 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27BB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2756 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27DA JUMPI PUSH2 0x27D9 PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27E7 DUP6 DUP3 DUP7 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2808 JUMPI PUSH2 0x2807 PUSH2 0x2376 JUMP JUMPDEST JUMPDEST PUSH2 0x2814 DUP6 DUP3 DUP7 ADD PUSH2 0x2797 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2827 DUP2 PUSH2 0x23FA JUMP JUMPDEST DUP2 EQ PUSH2 0x2831 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2842 DUP2 PUSH2 0x281E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x285E JUMPI PUSH2 0x285D PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x286B DUP6 DUP3 DUP7 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x287C DUP6 DUP3 DUP7 ADD PUSH2 0x2834 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28A0 JUMPI PUSH2 0x289F PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST PUSH2 0x28A9 DUP3 PUSH2 0x246F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28C8 PUSH2 0x28C3 DUP5 PUSH2 0x2886 JUMP JUMPDEST PUSH2 0x26FE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x28E4 JUMPI PUSH2 0x28E3 PUSH2 0x269C JUMP JUMPDEST JUMPDEST PUSH2 0x28EF DUP5 DUP3 DUP6 PUSH2 0x2748 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x290B JUMPI PUSH2 0x290A PUSH2 0x2698 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x291B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x293C JUMPI PUSH2 0x293B PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2949 DUP8 DUP3 DUP9 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x295A DUP8 DUP3 DUP9 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x296B DUP8 DUP3 DUP9 ADD PUSH2 0x24F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x298C JUMPI PUSH2 0x298B PUSH2 0x2376 JUMP JUMPDEST JUMPDEST PUSH2 0x2998 DUP8 DUP3 DUP9 ADD PUSH2 0x28F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29BA JUMPI PUSH2 0x29B9 PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29C7 DUP6 DUP3 DUP7 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29D8 DUP6 DUP3 DUP7 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2A26 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A39 JUMPI PUSH2 0x2A38 PUSH2 0x29E2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E732063616E206578656375746520746869732066756E PUSH0 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A99 PUSH1 0x25 DUP4 PUSH2 0x2437 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA4 DUP3 PUSH2 0x2A3F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AC6 DUP2 PUSH2 0x2A8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2AE0 PUSH0 DUP4 ADD DUP7 PUSH2 0x2565 JUMP JUMPDEST PUSH2 0x2AED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2670 JUMP JUMPDEST PUSH2 0x2AFA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2565 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x596F7520686176656E277420766F746564207965740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B36 PUSH1 0x15 DUP4 PUSH2 0x2437 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B41 DUP3 PUSH2 0x2B02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B63 DUP2 PUSH2 0x2B2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E646964617465206E6F7420726567697374657265640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9E PUSH1 0x18 DUP4 PUSH2 0x2437 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA9 DUP3 PUSH2 0x2B6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BCB DUP2 PUSH2 0x2B92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573732068617320616C726561647920766F74656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C06 PUSH1 0x19 DUP4 PUSH2 0x2437 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C11 DUP3 PUSH2 0x2BD2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C33 DUP2 PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420766F74696E672076616C756500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C6E PUSH1 0x19 DUP4 PUSH2 0x2437 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C79 DUP3 PUSH2 0x2C3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C9B DUP2 PUSH2 0x2C62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2CD9 DUP3 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE4 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CFC JUMPI PUSH2 0x2CFB PUSH2 0x2CA2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D0C DUP3 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2D3E JUMPI PUSH2 0x2D3D PUSH2 0x2CA2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2DA5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2D6A JUMP JUMPDEST PUSH2 0x2DAF DUP7 DUP4 PUSH2 0x2D6A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2DEA PUSH2 0x2DE5 PUSH2 0x2DE0 DUP5 PUSH2 0x24D7 JUMP JUMPDEST PUSH2 0x2DC7 JUMP JUMPDEST PUSH2 0x24D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E03 DUP4 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x2E17 PUSH2 0x2E0F DUP3 PUSH2 0x2DF1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2D76 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2E2B PUSH2 0x2E1F JUMP JUMPDEST PUSH2 0x2E36 DUP2 DUP5 DUP5 PUSH2 0x2DFA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E59 JUMPI PUSH2 0x2E4E PUSH0 DUP3 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2E3C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2E9E JUMPI PUSH2 0x2E6F DUP2 PUSH2 0x2D49 JUMP JUMPDEST PUSH2 0x2E78 DUP5 PUSH2 0x2D5B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2E87 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2E9B PUSH2 0x2E93 DUP6 PUSH2 0x2D5B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2E3B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EBE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2EA3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2ED6 DUP4 DUP4 PUSH2 0x2EAF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EEF DUP3 PUSH2 0x242D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F08 JUMPI PUSH2 0x2F07 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST PUSH2 0x2F12 DUP3 SLOAD PUSH2 0x2A0F JUMP JUMPDEST PUSH2 0x2F1D DUP3 DUP3 DUP6 PUSH2 0x2E5D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2F4E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2F3C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2F46 DUP6 DUP3 PUSH2 0x2ECB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2F5C DUP7 PUSH2 0x2D49 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F83 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F5E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2FA0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2F9C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2EAF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FC9 DUP3 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x2FD3 DUP2 DUP6 PUSH2 0x2FB5 JUMP JUMPDEST SWAP4 POP PUSH2 0x2FE3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2447 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FFA DUP3 DUP6 PUSH2 0x2FBF JUMP JUMPDEST SWAP2 POP PUSH2 0x3006 DUP3 DUP5 PUSH2 0x2FBF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3036 DUP3 PUSH2 0x3012 JUMP JUMPDEST PUSH2 0x3040 DUP2 DUP6 PUSH2 0x301C JUMP JUMPDEST SWAP4 POP PUSH2 0x3050 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x3059 DUP2 PUSH2 0x246F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3077 PUSH0 DUP4 ADD DUP8 PUSH2 0x2565 JUMP JUMPDEST PUSH2 0x3084 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2565 JUMP JUMPDEST PUSH2 0x3091 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2670 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x30A3 DUP2 DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x30BC DUP2 PUSH2 0x23A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30D7 JUMPI PUSH2 0x30D6 PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x30E4 DUP5 DUP3 DUP6 ADD PUSH2 0x30AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x312D PUSH0 DUP4 ADD DUP6 PUSH2 0x2565 JUMP JUMPDEST PUSH2 0x313A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2670 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB CALLDATASIZE 0xB9 0xB2 0xE 0x5D 0xFB 0xE 0xE1 0xBD DUP11 LOG2 PUSH32 0x80D3E26870B945520CF4F1372DBD813442FA0E64736F6C634300081700330000 ",
							"sourceMap": "117:2828:11:-:0;;;213:26;184:55;;539:142;;;;;;;;;;1381:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;590:28:11::1;;;;;;;;;;;;;;;;::::0;:6:::1;:18;597:10;590:18;;;;;;;;;;;;;;;:28;;;;;;:::i;:::-;;117:2828:::0;;7:99:12;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;117:2828:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1014": {
									"entryPoint": 7536,
									"id": 1014,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_948": {
									"entryPoint": 5890,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_341": {
									"entryPoint": 7255,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_596": {
									"entryPoint": 7983,
									"id": 596,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1144": {
									"entryPoint": 6821,
									"id": 1144,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_523": {
									"entryPoint": 5826,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_559": {
									"entryPoint": 8542,
									"id": 559,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_752": {
									"entryPoint": 8734,
									"id": 752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1320": {
									"entryPoint": 5883,
									"id": 1320,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_510": {
									"entryPoint": 7479,
									"id": 510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1080": {
									"entryPoint": 5692,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_767": {
									"entryPoint": 6431,
									"id": 767,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_793": {
									"entryPoint": 8178,
									"id": 793,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1051": {
									"entryPoint": 6460,
									"id": 1051,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_702": {
									"entryPoint": 5908,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@addAdmim_2855": {
									"entryPoint": 4384,
									"id": 2855,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addCandidate_2890": {
									"entryPoint": 4746,
									"id": 2890,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@admins_2794": {
									"entryPoint": 3202,
									"id": 2794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_357": {
									"entryPoint": 2041,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_265": {
									"entryPoint": 4105,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@candidates_names_2798": {
									"entryPoint": 2341,
									"id": 2798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deleteAdmim_2868": {
									"entryPoint": 5052,
									"id": 2868,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deleteandidate_2908": {
									"entryPoint": 2063,
									"id": 2908,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getApproved_374": {
									"entryPoint": 2014,
									"id": 374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_407": {
									"entryPoint": 5445,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2495": {
									"entryPoint": 8205,
									"id": 2495,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_287": {
									"entryPoint": 1871,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nextTokenId_2787": {
									"entryPoint": 4287,
									"id": 2787,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@num_votes_2806": {
									"entryPoint": 4293,
									"id": 2806,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_278": {
									"entryPoint": 3357,
									"id": 278,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_471": {
									"entryPoint": 3171,
									"id": 471,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_497": {
									"entryPoint": 5266,
									"id": 497,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_390": {
									"entryPoint": 5030,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@showMyVote_2955": {
									"entryPoint": 2751,
									"id": 2955,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@showVotesCandidate_2920": {
									"entryPoint": 4314,
									"id": 2920,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1608": {
									"entryPoint": 5587,
									"id": 1608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_237": {
									"entryPoint": 1646,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_296": {
									"entryPoint": 4602,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1398": {
									"entryPoint": 7277,
									"id": 1398,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_332": {
									"entryPoint": 5295,
									"id": 332,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_453": {
									"entryPoint": 2496,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@vote_3031": {
									"entryPoint": 3380,
									"id": 3031,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@votes_2802": {
									"entryPoint": 5397,
									"id": 2802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@votingEther_2790": {
									"entryPoint": 3374,
									"id": 2790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 10422,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 10070,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 10292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 9147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 12462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 10487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 10135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 10532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 10312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 10180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 9167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 12482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 12332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12271,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 12388,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12570,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10957,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 9065,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 10374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 10008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 11593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 12306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 12316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 11869,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 9556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 9082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 11835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 11728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 12006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 10056,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9287,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 11611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 10767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 11979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 11719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 11951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 12525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 11761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9880,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9884,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9078,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9074,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 11626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 11939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 11811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac": {
									"entryPoint": 11010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e": {
									"entryPoint": 11114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3": {
									"entryPoint": 11322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401": {
									"entryPoint": 11218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0": {
									"entryPoint": 10815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 11638,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 11770,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 9125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 11807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26410:12",
										"nodeType": "YulBlock",
										"src": "0:26410:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1577:40:12",
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nativeSrc": "1588:22:12",
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nativeSrc": "1598:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:12",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:12",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nativeSrc": "1719:73:12",
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nativeSrc": "1729:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nativeSrc": "1729:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nativeSrc": "1757:29:12",
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nativeSrc": "1772:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:12",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:12",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:12",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nativeSrc": "1860:184:12",
													"nodeType": "YulBlock",
													"src": "1860:184:12",
													"statements": [
														{
															"nativeSrc": "1870:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:12",
																"nodeType": "YulLiteral",
																"src": "1879:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:12",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:12",
																"nodeType": "YulBlock",
																"src": "1939:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:12"
																					},
																					"nativeSrc": "1960:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:12"
																							},
																							"nativeSrc": "1979:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:12"
																					},
																					"nativeSrc": "1973:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:12"
																			},
																			"nativeSrc": "1953:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:12"
																		},
																		"nativeSrc": "1953:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:12"
																},
																"nativeSrc": "1897:13:12",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:12"
															},
															"nativeSrc": "1889:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:12",
																"nodeType": "YulBlock",
																"src": "1911:19:12",
																"statements": [
																	{
																		"nativeSrc": "1913:15:12",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:12",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:12"
																			},
																			"nativeSrc": "1918:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:12",
																"nodeType": "YulBlock",
																"src": "1893:3:12",
																"statements": []
															},
															"src": "1889:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:12"
																		},
																		"nativeSrc": "2018:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:12"
																},
																"nativeSrc": "2011:27:12",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:12"
															},
															"nativeSrc": "2011:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:12",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:12",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:12",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:246:12"
											},
											{
												"body": {
													"nativeSrc": "2098:54:12",
													"nodeType": "YulBlock",
													"src": "2098:54:12",
													"statements": [
														{
															"nativeSrc": "2108:38:12",
															"nodeType": "YulAssignment",
															"src": "2108:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:12"
																		},
																		"nativeSrc": "2122:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:12"
																		},
																		"nativeSrc": "2138:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:12"
																},
																"nativeSrc": "2118:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:12",
														"nodeType": "YulTypedName",
														"src": "2081:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:12",
														"nodeType": "YulTypedName",
														"src": "2091:6:12",
														"type": ""
													}
												],
												"src": "2050:102:12"
											},
											{
												"body": {
													"nativeSrc": "2250:285:12",
													"nodeType": "YulBlock",
													"src": "2250:285:12",
													"statements": [
														{
															"nativeSrc": "2260:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:12"
																},
																"nativeSrc": "2274:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:12",
															"nodeType": "YulAssignment",
															"src": "2322:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:12"
																},
																"nativeSrc": "2329:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:12"
																		},
																		"nativeSrc": "2444:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:12"
																},
																"nativeSrc": "2409:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:12"
															},
															"nativeSrc": "2409:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:12"
														},
														{
															"nativeSrc": "2483:46:12",
															"nodeType": "YulAssignment",
															"src": "2483:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:12"
																		},
																		"nativeSrc": "2499:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:12"
																},
																"nativeSrc": "2490:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:12",
														"nodeType": "YulTypedName",
														"src": "2231:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:12",
														"nodeType": "YulTypedName",
														"src": "2238:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:12",
														"nodeType": "YulTypedName",
														"src": "2246:3:12",
														"type": ""
													}
												],
												"src": "2158:377:12"
											},
											{
												"body": {
													"nativeSrc": "2659:195:12",
													"nodeType": "YulBlock",
													"src": "2659:195:12",
													"statements": [
														{
															"nativeSrc": "2669:26:12",
															"nodeType": "YulAssignment",
															"src": "2669:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:12"
																},
																"nativeSrc": "2677:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:12"
																		},
																		"nativeSrc": "2712:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:12"
																		},
																		"nativeSrc": "2731:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:12"
																},
																"nativeSrc": "2705:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:12"
															},
															"nativeSrc": "2705:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:12"
														},
														{
															"nativeSrc": "2761:86:12",
															"nodeType": "YulAssignment",
															"src": "2761:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:12"
																},
																"nativeSrc": "2769:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:12",
														"nodeType": "YulTypedName",
														"src": "2631:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:12",
														"nodeType": "YulTypedName",
														"src": "2643:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:12",
														"nodeType": "YulTypedName",
														"src": "2654:4:12",
														"type": ""
													}
												],
												"src": "2541:313:12"
											},
											{
												"body": {
													"nativeSrc": "2905:32:12",
													"nodeType": "YulBlock",
													"src": "2905:32:12",
													"statements": [
														{
															"nativeSrc": "2915:16:12",
															"nodeType": "YulAssignment",
															"src": "2915:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:12",
																"nodeType": "YulIdentifier",
																"src": "2926:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:12",
														"nodeType": "YulTypedName",
														"src": "2887:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:12",
														"nodeType": "YulTypedName",
														"src": "2897:7:12",
														"type": ""
													}
												],
												"src": "2860:77:12"
											},
											{
												"body": {
													"nativeSrc": "2986:79:12",
													"nodeType": "YulBlock",
													"src": "2986:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:12",
																"nodeType": "YulBlock",
																"src": "3043:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:12"
																			},
																			"nativeSrc": "3045:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:12"
																		},
																		"nativeSrc": "3045:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:12"
																				},
																				"nativeSrc": "3016:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:12"
																		},
																		"nativeSrc": "3006:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:12"
																},
																"nativeSrc": "2999:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:12"
															},
															"nativeSrc": "2996:63:12",
															"nodeType": "YulIf",
															"src": "2996:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:12",
														"nodeType": "YulTypedName",
														"src": "2979:5:12",
														"type": ""
													}
												],
												"src": "2943:122:12"
											},
											{
												"body": {
													"nativeSrc": "3123:87:12",
													"nodeType": "YulBlock",
													"src": "3123:87:12",
													"statements": [
														{
															"nativeSrc": "3133:29:12",
															"nodeType": "YulAssignment",
															"src": "3133:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:12"
																},
																"nativeSrc": "3142:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:12"
																},
																"nativeSrc": "3171:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:12"
															},
															"nativeSrc": "3171:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:12",
														"nodeType": "YulTypedName",
														"src": "3101:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:12",
														"nodeType": "YulTypedName",
														"src": "3109:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:12",
														"nodeType": "YulTypedName",
														"src": "3117:5:12",
														"type": ""
													}
												],
												"src": "3071:139:12"
											},
											{
												"body": {
													"nativeSrc": "3282:263:12",
													"nodeType": "YulBlock",
													"src": "3282:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:12",
																"nodeType": "YulBlock",
																"src": "3328:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:12"
																			},
																			"nativeSrc": "3330:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:12"
																		},
																		"nativeSrc": "3330:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:12"
																		},
																		"nativeSrc": "3299:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:12"
																},
																"nativeSrc": "3295:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:12"
															},
															"nativeSrc": "3292:119:12",
															"nodeType": "YulIf",
															"src": "3292:119:12"
														},
														{
															"nativeSrc": "3421:117:12",
															"nodeType": "YulBlock",
															"src": "3421:117:12",
															"statements": [
																{
																	"nativeSrc": "3436:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:12"
																				},
																				"nativeSrc": "3496:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:12"
																		},
																		"nativeSrc": "3475:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:12",
														"nodeType": "YulTypedName",
														"src": "3252:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:12",
														"nodeType": "YulTypedName",
														"src": "3263:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:12",
														"nodeType": "YulTypedName",
														"src": "3275:6:12",
														"type": ""
													}
												],
												"src": "3216:329:12"
											},
											{
												"body": {
													"nativeSrc": "3596:81:12",
													"nodeType": "YulBlock",
													"src": "3596:81:12",
													"statements": [
														{
															"nativeSrc": "3606:65:12",
															"nodeType": "YulAssignment",
															"src": "3606:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:12",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:12"
																},
																"nativeSrc": "3617:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:12",
														"nodeType": "YulTypedName",
														"src": "3578:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:12",
														"nodeType": "YulTypedName",
														"src": "3588:7:12",
														"type": ""
													}
												],
												"src": "3551:126:12"
											},
											{
												"body": {
													"nativeSrc": "3728:51:12",
													"nodeType": "YulBlock",
													"src": "3728:51:12",
													"statements": [
														{
															"nativeSrc": "3738:35:12",
															"nodeType": "YulAssignment",
															"src": "3738:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:12"
																},
																"nativeSrc": "3749:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:12",
														"nodeType": "YulTypedName",
														"src": "3710:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:12",
														"nodeType": "YulTypedName",
														"src": "3720:7:12",
														"type": ""
													}
												],
												"src": "3683:96:12"
											},
											{
												"body": {
													"nativeSrc": "3850:53:12",
													"nodeType": "YulBlock",
													"src": "3850:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:12"
																		},
																		"nativeSrc": "3872:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:12"
																},
																"nativeSrc": "3860:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:12"
															},
															"nativeSrc": "3860:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:12",
														"nodeType": "YulTypedName",
														"src": "3838:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:12",
														"nodeType": "YulTypedName",
														"src": "3845:3:12",
														"type": ""
													}
												],
												"src": "3785:118:12"
											},
											{
												"body": {
													"nativeSrc": "4007:124:12",
													"nodeType": "YulBlock",
													"src": "4007:124:12",
													"statements": [
														{
															"nativeSrc": "4017:26:12",
															"nodeType": "YulAssignment",
															"src": "4017:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:12"
																},
																"nativeSrc": "4025:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:12"
																		},
																		"nativeSrc": "4106:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:12"
																},
																"nativeSrc": "4053:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:12"
															},
															"nativeSrc": "4053:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:12",
														"nodeType": "YulTypedName",
														"src": "3979:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:12",
														"nodeType": "YulTypedName",
														"src": "3991:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:12",
														"nodeType": "YulTypedName",
														"src": "4002:4:12",
														"type": ""
													}
												],
												"src": "3909:222:12"
											},
											{
												"body": {
													"nativeSrc": "4180:79:12",
													"nodeType": "YulBlock",
													"src": "4180:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:12",
																"nodeType": "YulBlock",
																"src": "4237:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:12"
																			},
																			"nativeSrc": "4239:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:12"
																		},
																		"nativeSrc": "4239:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:12"
																				},
																				"nativeSrc": "4210:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:12"
																		},
																		"nativeSrc": "4200:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:12"
																},
																"nativeSrc": "4193:43:12",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:12"
															},
															"nativeSrc": "4190:63:12",
															"nodeType": "YulIf",
															"src": "4190:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:12",
														"nodeType": "YulTypedName",
														"src": "4173:5:12",
														"type": ""
													}
												],
												"src": "4137:122:12"
											},
											{
												"body": {
													"nativeSrc": "4317:87:12",
													"nodeType": "YulBlock",
													"src": "4317:87:12",
													"statements": [
														{
															"nativeSrc": "4327:29:12",
															"nodeType": "YulAssignment",
															"src": "4327:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:12"
																},
																"nativeSrc": "4336:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:12"
																},
																"nativeSrc": "4365:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:12"
															},
															"nativeSrc": "4365:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:12",
														"nodeType": "YulTypedName",
														"src": "4295:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:12",
														"nodeType": "YulTypedName",
														"src": "4303:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:12",
														"nodeType": "YulTypedName",
														"src": "4311:5:12",
														"type": ""
													}
												],
												"src": "4265:139:12"
											},
											{
												"body": {
													"nativeSrc": "4493:391:12",
													"nodeType": "YulBlock",
													"src": "4493:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:12",
																"nodeType": "YulBlock",
																"src": "4539:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:12"
																			},
																			"nativeSrc": "4541:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:12"
																		},
																		"nativeSrc": "4541:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:12"
																		},
																		"nativeSrc": "4510:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:12"
																},
																"nativeSrc": "4506:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:12"
															},
															"nativeSrc": "4503:119:12",
															"nodeType": "YulIf",
															"src": "4503:119:12"
														},
														{
															"nativeSrc": "4632:117:12",
															"nodeType": "YulBlock",
															"src": "4632:117:12",
															"statements": [
																{
																	"nativeSrc": "4647:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:12"
																				},
																				"nativeSrc": "4707:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:12"
																		},
																		"nativeSrc": "4686:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:12",
															"nodeType": "YulBlock",
															"src": "4759:118:12",
															"statements": [
																{
																	"nativeSrc": "4774:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:12"
																				},
																				"nativeSrc": "4835:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:12"
																		},
																		"nativeSrc": "4814:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:12",
														"nodeType": "YulTypedName",
														"src": "4455:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:12",
														"nodeType": "YulTypedName",
														"src": "4466:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:12",
														"nodeType": "YulTypedName",
														"src": "4478:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:12",
														"nodeType": "YulTypedName",
														"src": "4486:6:12",
														"type": ""
													}
												],
												"src": "4410:474:12"
											},
											{
												"body": {
													"nativeSrc": "4956:263:12",
													"nodeType": "YulBlock",
													"src": "4956:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5002:83:12",
																"nodeType": "YulBlock",
																"src": "5002:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5004:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5004:77:12"
																			},
																			"nativeSrc": "5004:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5004:79:12"
																		},
																		"nativeSrc": "5004:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5004:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4977:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4977:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4986:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4986:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4973:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4973:3:12"
																		},
																		"nativeSrc": "4973:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4973:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4998:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4998:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4969:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4969:3:12"
																},
																"nativeSrc": "4969:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4969:32:12"
															},
															"nativeSrc": "4966:119:12",
															"nodeType": "YulIf",
															"src": "4966:119:12"
														},
														{
															"nativeSrc": "5095:117:12",
															"nodeType": "YulBlock",
															"src": "5095:117:12",
															"statements": [
																{
																	"nativeSrc": "5110:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5110:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5124:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5124:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5114:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5114:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5139:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5139:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5174:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5174:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5185:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5185:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5170:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5170:3:12"
																				},
																				"nativeSrc": "5170:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5170:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5194:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5194:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5149:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5149:20:12"
																		},
																		"nativeSrc": "5149:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5149:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5139:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5139:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4890:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4926:9:12",
														"nodeType": "YulTypedName",
														"src": "4926:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4937:7:12",
														"nodeType": "YulTypedName",
														"src": "4937:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4949:6:12",
														"nodeType": "YulTypedName",
														"src": "4949:6:12",
														"type": ""
													}
												],
												"src": "4890:329:12"
											},
											{
												"body": {
													"nativeSrc": "5325:519:12",
													"nodeType": "YulBlock",
													"src": "5325:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5371:83:12",
																"nodeType": "YulBlock",
																"src": "5371:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5373:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5373:77:12"
																			},
																			"nativeSrc": "5373:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5373:79:12"
																		},
																		"nativeSrc": "5373:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5373:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5346:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5346:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5355:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5355:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5342:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5342:3:12"
																		},
																		"nativeSrc": "5342:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5342:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5367:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5338:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5338:3:12"
																},
																"nativeSrc": "5338:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5338:32:12"
															},
															"nativeSrc": "5335:119:12",
															"nodeType": "YulIf",
															"src": "5335:119:12"
														},
														{
															"nativeSrc": "5464:117:12",
															"nodeType": "YulBlock",
															"src": "5464:117:12",
															"statements": [
																{
																	"nativeSrc": "5479:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5479:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5493:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5493:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5483:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5483:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5508:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5508:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5543:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5543:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5554:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5554:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5539:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5539:3:12"
																				},
																				"nativeSrc": "5539:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5539:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5563:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5563:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5518:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5518:20:12"
																		},
																		"nativeSrc": "5518:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5518:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5508:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5508:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5591:118:12",
															"nodeType": "YulBlock",
															"src": "5591:118:12",
															"statements": [
																{
																	"nativeSrc": "5606:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5606:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5620:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5620:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5610:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5610:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5636:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5636:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5671:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5671:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5682:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5682:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5667:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5667:3:12"
																				},
																				"nativeSrc": "5667:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5667:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5691:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5691:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5646:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5646:20:12"
																		},
																		"nativeSrc": "5646:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5646:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5636:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5636:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5719:118:12",
															"nodeType": "YulBlock",
															"src": "5719:118:12",
															"statements": [
																{
																	"nativeSrc": "5734:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5734:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5748:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5748:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5738:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5738:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:12"
																				},
																				"nativeSrc": "5795:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5774:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:12"
																		},
																		"nativeSrc": "5774:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5764:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5225:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5279:9:12",
														"nodeType": "YulTypedName",
														"src": "5279:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5290:7:12",
														"nodeType": "YulTypedName",
														"src": "5290:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5302:6:12",
														"nodeType": "YulTypedName",
														"src": "5302:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5310:6:12",
														"nodeType": "YulTypedName",
														"src": "5310:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5318:6:12",
														"nodeType": "YulTypedName",
														"src": "5318:6:12",
														"type": ""
													}
												],
												"src": "5225:619:12"
											},
											{
												"body": {
													"nativeSrc": "5915:53:12",
													"nodeType": "YulBlock",
													"src": "5915:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5932:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5955:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5937:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:12"
																		},
																		"nativeSrc": "5937:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:12"
																},
																"nativeSrc": "5925:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5925:37:12"
															},
															"nativeSrc": "5925:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5850:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5903:5:12",
														"nodeType": "YulTypedName",
														"src": "5903:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5910:3:12",
														"nodeType": "YulTypedName",
														"src": "5910:3:12",
														"type": ""
													}
												],
												"src": "5850:118:12"
											},
											{
												"body": {
													"nativeSrc": "6072:124:12",
													"nodeType": "YulBlock",
													"src": "6072:124:12",
													"statements": [
														{
															"nativeSrc": "6082:26:12",
															"nodeType": "YulAssignment",
															"src": "6082:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:12"
																},
																"nativeSrc": "6090:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:12"
																		},
																		"nativeSrc": "6171:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6118:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:12"
																},
																"nativeSrc": "6118:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:12"
															},
															"nativeSrc": "6118:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5974:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:12",
														"nodeType": "YulTypedName",
														"src": "6044:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:12",
														"nodeType": "YulTypedName",
														"src": "6056:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:12",
														"nodeType": "YulTypedName",
														"src": "6067:4:12",
														"type": ""
													}
												],
												"src": "5974:222:12"
											},
											{
												"body": {
													"nativeSrc": "6291:28:12",
													"nodeType": "YulBlock",
													"src": "6291:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6308:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6308:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6311:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6311:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6301:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6301:6:12"
																},
																"nativeSrc": "6301:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6301:12:12"
															},
															"nativeSrc": "6301:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "6301:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6202:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6202:117:12"
											},
											{
												"body": {
													"nativeSrc": "6414:28:12",
													"nodeType": "YulBlock",
													"src": "6414:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6431:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6431:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6434:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6434:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6424:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6424:6:12"
																},
																"nativeSrc": "6424:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6424:12:12"
															},
															"nativeSrc": "6424:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "6424:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6325:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6325:117:12"
											},
											{
												"body": {
													"nativeSrc": "6476:152:12",
													"nodeType": "YulBlock",
													"src": "6476:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6493:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6493:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6496:77:12",
																		"nodeType": "YulLiteral",
																		"src": "6496:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6486:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6486:6:12"
																},
																"nativeSrc": "6486:88:12",
																"nodeType": "YulFunctionCall",
																"src": "6486:88:12"
															},
															"nativeSrc": "6486:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "6486:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6590:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6590:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6593:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6593:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6583:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6583:6:12"
																},
																"nativeSrc": "6583:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6583:15:12"
															},
															"nativeSrc": "6583:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6583:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6614:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6614:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6617:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6617:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6607:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6607:6:12"
																},
																"nativeSrc": "6607:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6607:15:12"
															},
															"nativeSrc": "6607:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6607:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6448:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6448:180:12"
											},
											{
												"body": {
													"nativeSrc": "6677:238:12",
													"nodeType": "YulBlock",
													"src": "6677:238:12",
													"statements": [
														{
															"nativeSrc": "6687:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6687:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6709:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6709:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6739:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6739:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6717:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "6717:21:12"
																		},
																		"nativeSrc": "6717:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6717:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6705:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6705:3:12"
																},
																"nativeSrc": "6705:40:12",
																"nodeType": "YulFunctionCall",
																"src": "6705:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6691:10:12",
																	"nodeType": "YulTypedName",
																	"src": "6691:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6856:22:12",
																"nodeType": "YulBlock",
																"src": "6856:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6858:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "6858:16:12"
																			},
																			"nativeSrc": "6858:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6858:18:12"
																		},
																		"nativeSrc": "6858:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6858:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6799:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "6799:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6811:18:12",
																				"nodeType": "YulLiteral",
																				"src": "6811:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6796:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "6796:2:12"
																		},
																		"nativeSrc": "6796:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6796:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6835:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "6835:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6847:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6847:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6832:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "6832:2:12"
																		},
																		"nativeSrc": "6832:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6832:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6793:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6793:2:12"
																},
																"nativeSrc": "6793:62:12",
																"nodeType": "YulFunctionCall",
																"src": "6793:62:12"
															},
															"nativeSrc": "6790:88:12",
															"nodeType": "YulIf",
															"src": "6790:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6894:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6894:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6898:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "6898:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6887:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:12"
																},
																"nativeSrc": "6887:22:12",
																"nodeType": "YulFunctionCall",
																"src": "6887:22:12"
															},
															"nativeSrc": "6887:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "6887:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6634:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6663:6:12",
														"nodeType": "YulTypedName",
														"src": "6663:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6671:4:12",
														"nodeType": "YulTypedName",
														"src": "6671:4:12",
														"type": ""
													}
												],
												"src": "6634:281:12"
											},
											{
												"body": {
													"nativeSrc": "6962:88:12",
													"nodeType": "YulBlock",
													"src": "6962:88:12",
													"statements": [
														{
															"nativeSrc": "6972:30:12",
															"nodeType": "YulAssignment",
															"src": "6972:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6982:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "6982:18:12"
																},
																"nativeSrc": "6982:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6982:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6972:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6972:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7031:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7031:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7039:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7039:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7011:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "7011:19:12"
																},
																"nativeSrc": "7011:33:12",
																"nodeType": "YulFunctionCall",
																"src": "7011:33:12"
															},
															"nativeSrc": "7011:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "7011:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6921:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6946:4:12",
														"nodeType": "YulTypedName",
														"src": "6946:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6955:6:12",
														"nodeType": "YulTypedName",
														"src": "6955:6:12",
														"type": ""
													}
												],
												"src": "6921:129:12"
											},
											{
												"body": {
													"nativeSrc": "7123:241:12",
													"nodeType": "YulBlock",
													"src": "7123:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7228:22:12",
																"nodeType": "YulBlock",
																"src": "7228:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7230:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7230:16:12"
																			},
																			"nativeSrc": "7230:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7230:18:12"
																		},
																		"nativeSrc": "7230:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7230:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7200:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7200:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7208:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7208:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7197:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7197:2:12"
																},
																"nativeSrc": "7197:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7197:30:12"
															},
															"nativeSrc": "7194:56:12",
															"nodeType": "YulIf",
															"src": "7194:56:12"
														},
														{
															"nativeSrc": "7260:37:12",
															"nodeType": "YulAssignment",
															"src": "7260:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7290:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7290:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7268:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "7268:21:12"
																},
																"nativeSrc": "7268:29:12",
																"nodeType": "YulFunctionCall",
																"src": "7268:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7260:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7260:4:12"
																}
															]
														},
														{
															"nativeSrc": "7334:23:12",
															"nodeType": "YulAssignment",
															"src": "7334:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7346:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7346:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7342:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:12"
																},
																"nativeSrc": "7342:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7342:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7334:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7334:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "7056:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7107:6:12",
														"nodeType": "YulTypedName",
														"src": "7107:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7118:4:12",
														"nodeType": "YulTypedName",
														"src": "7118:4:12",
														"type": ""
													}
												],
												"src": "7056:308:12"
											},
											{
												"body": {
													"nativeSrc": "7434:82:12",
													"nodeType": "YulBlock",
													"src": "7434:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7457:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7457:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7462:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7462:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7467:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7467:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7444:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7444:12:12"
																},
																"nativeSrc": "7444:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7444:30:12"
															},
															"nativeSrc": "7444:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7444:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7494:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7494:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7499:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7499:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7490:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7490:3:12"
																		},
																		"nativeSrc": "7490:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7490:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7508:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7508:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7483:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7483:6:12"
																},
																"nativeSrc": "7483:27:12",
																"nodeType": "YulFunctionCall",
																"src": "7483:27:12"
															},
															"nativeSrc": "7483:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "7483:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7370:146:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7416:3:12",
														"nodeType": "YulTypedName",
														"src": "7416:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7421:3:12",
														"nodeType": "YulTypedName",
														"src": "7421:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7426:6:12",
														"nodeType": "YulTypedName",
														"src": "7426:6:12",
														"type": ""
													}
												],
												"src": "7370:146:12"
											},
											{
												"body": {
													"nativeSrc": "7606:341:12",
													"nodeType": "YulBlock",
													"src": "7606:341:12",
													"statements": [
														{
															"nativeSrc": "7616:75:12",
															"nodeType": "YulAssignment",
															"src": "7616:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7683:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7683:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "7641:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "7641:41:12"
																		},
																		"nativeSrc": "7641:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7641:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7625:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "7625:15:12"
																},
																"nativeSrc": "7625:66:12",
																"nodeType": "YulFunctionCall",
																"src": "7625:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7616:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7616:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7707:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7707:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7714:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7714:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7700:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7700:6:12"
																},
																"nativeSrc": "7700:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7700:21:12"
															},
															"nativeSrc": "7700:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7700:21:12"
														},
														{
															"nativeSrc": "7730:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7730:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7745:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7745:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7752:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7752:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7741:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7741:3:12"
																},
																"nativeSrc": "7741:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7741:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7734:3:12",
																	"nodeType": "YulTypedName",
																	"src": "7734:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7795:83:12",
																"nodeType": "YulBlock",
																"src": "7795:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7797:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7797:77:12"
																			},
																			"nativeSrc": "7797:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7797:79:12"
																		},
																		"nativeSrc": "7797:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7797:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7776:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7776:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7781:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7781:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7772:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7772:3:12"
																		},
																		"nativeSrc": "7772:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7772:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7790:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7790:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7769:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7769:2:12"
																},
																"nativeSrc": "7769:25:12",
																"nodeType": "YulFunctionCall",
																"src": "7769:25:12"
															},
															"nativeSrc": "7766:112:12",
															"nodeType": "YulIf",
															"src": "7766:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7924:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7924:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7929:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7887:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "7887:36:12"
																},
																"nativeSrc": "7887:54:12",
																"nodeType": "YulFunctionCall",
																"src": "7887:54:12"
															},
															"nativeSrc": "7887:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "7887:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "7522:425:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7579:3:12",
														"nodeType": "YulTypedName",
														"src": "7579:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7584:6:12",
														"nodeType": "YulTypedName",
														"src": "7584:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7592:3:12",
														"nodeType": "YulTypedName",
														"src": "7592:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7600:5:12",
														"nodeType": "YulTypedName",
														"src": "7600:5:12",
														"type": ""
													}
												],
												"src": "7522:425:12"
											},
											{
												"body": {
													"nativeSrc": "8029:278:12",
													"nodeType": "YulBlock",
													"src": "8029:278:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8078:83:12",
																"nodeType": "YulBlock",
																"src": "8078:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8080:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8080:77:12"
																			},
																			"nativeSrc": "8080:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8080:79:12"
																		},
																		"nativeSrc": "8080:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8080:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8057:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8057:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8065:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8065:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8053:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8053:3:12"
																				},
																				"nativeSrc": "8053:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8053:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8072:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8072:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8049:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8049:3:12"
																		},
																		"nativeSrc": "8049:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8049:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8042:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8042:6:12"
																},
																"nativeSrc": "8042:35:12",
																"nodeType": "YulFunctionCall",
																"src": "8042:35:12"
															},
															"nativeSrc": "8039:122:12",
															"nodeType": "YulIf",
															"src": "8039:122:12"
														},
														{
															"nativeSrc": "8170:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8170:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8197:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8197:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8184:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "8184:12:12"
																},
																"nativeSrc": "8184:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8184:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8174:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8174:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8213:88:12",
															"nodeType": "YulAssignment",
															"src": "8213:88:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8274:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8274:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8282:4:12",
																				"nodeType": "YulLiteral",
																				"src": "8282:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8270:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8270:3:12"
																		},
																		"nativeSrc": "8270:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8270:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8289:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8289:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8297:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8297:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "8222:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "8222:47:12"
																},
																"nativeSrc": "8222:79:12",
																"nodeType": "YulFunctionCall",
																"src": "8222:79:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8213:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8213:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7967:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8007:6:12",
														"nodeType": "YulTypedName",
														"src": "8007:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8015:3:12",
														"nodeType": "YulTypedName",
														"src": "8015:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8023:5:12",
														"nodeType": "YulTypedName",
														"src": "8023:5:12",
														"type": ""
													}
												],
												"src": "7967:340:12"
											},
											{
												"body": {
													"nativeSrc": "8406:561:12",
													"nodeType": "YulBlock",
													"src": "8406:561:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8452:83:12",
																"nodeType": "YulBlock",
																"src": "8452:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8454:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8454:77:12"
																			},
																			"nativeSrc": "8454:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8454:79:12"
																		},
																		"nativeSrc": "8454:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8454:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8427:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8427:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8436:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8436:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8423:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8423:3:12"
																		},
																		"nativeSrc": "8423:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8423:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8448:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8448:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8419:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8419:3:12"
																},
																"nativeSrc": "8419:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8419:32:12"
															},
															"nativeSrc": "8416:119:12",
															"nodeType": "YulIf",
															"src": "8416:119:12"
														},
														{
															"nativeSrc": "8545:117:12",
															"nodeType": "YulBlock",
															"src": "8545:117:12",
															"statements": [
																{
																	"nativeSrc": "8560:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8560:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8574:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8574:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8564:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8564:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8589:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8589:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8624:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8624:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8635:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8635:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8620:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8620:3:12"
																				},
																				"nativeSrc": "8620:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8620:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8644:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8644:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8599:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8599:20:12"
																		},
																		"nativeSrc": "8599:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8599:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8589:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8589:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8672:288:12",
															"nodeType": "YulBlock",
															"src": "8672:288:12",
															"statements": [
																{
																	"nativeSrc": "8687:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8687:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8718:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8718:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8729:2:12",
																						"nodeType": "YulLiteral",
																						"src": "8729:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8714:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8714:3:12"
																				},
																				"nativeSrc": "8714:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8714:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8701:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "8701:12:12"
																		},
																		"nativeSrc": "8701:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8701:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8691:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8691:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8780:83:12",
																		"nodeType": "YulBlock",
																		"src": "8780:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8782:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "8782:77:12"
																					},
																					"nativeSrc": "8782:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8782:79:12"
																				},
																				"nativeSrc": "8782:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8782:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8752:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8752:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8760:18:12",
																				"nodeType": "YulLiteral",
																				"src": "8760:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8749:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8749:2:12"
																		},
																		"nativeSrc": "8749:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8749:30:12"
																	},
																	"nativeSrc": "8746:117:12",
																	"nodeType": "YulIf",
																	"src": "8746:117:12"
																},
																{
																	"nativeSrc": "8877:73:12",
																	"nodeType": "YulAssignment",
																	"src": "8877:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8922:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8922:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8933:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8933:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8918:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8918:3:12"
																				},
																				"nativeSrc": "8918:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8918:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8942:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8942:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8887:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "8887:30:12"
																		},
																		"nativeSrc": "8887:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8887:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8877:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8877:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "8313:654:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8368:9:12",
														"nodeType": "YulTypedName",
														"src": "8368:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8379:7:12",
														"nodeType": "YulTypedName",
														"src": "8379:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8391:6:12",
														"nodeType": "YulTypedName",
														"src": "8391:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8399:6:12",
														"nodeType": "YulTypedName",
														"src": "8399:6:12",
														"type": ""
													}
												],
												"src": "8313:654:12"
											},
											{
												"body": {
													"nativeSrc": "9013:76:12",
													"nodeType": "YulBlock",
													"src": "9013:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9067:16:12",
																"nodeType": "YulBlock",
																"src": "9067:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9076:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9076:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9079:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9079:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9069:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9069:6:12"
																			},
																			"nativeSrc": "9069:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9069:12:12"
																		},
																		"nativeSrc": "9069:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9069:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9036:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9036:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9058:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "9058:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9043:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "9043:14:12"
																				},
																				"nativeSrc": "9043:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9043:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9033:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9033:2:12"
																		},
																		"nativeSrc": "9033:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9033:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9026:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9026:6:12"
																},
																"nativeSrc": "9026:40:12",
																"nodeType": "YulFunctionCall",
																"src": "9026:40:12"
															},
															"nativeSrc": "9023:60:12",
															"nodeType": "YulIf",
															"src": "9023:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8973:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9006:5:12",
														"nodeType": "YulTypedName",
														"src": "9006:5:12",
														"type": ""
													}
												],
												"src": "8973:116:12"
											},
											{
												"body": {
													"nativeSrc": "9144:84:12",
													"nodeType": "YulBlock",
													"src": "9144:84:12",
													"statements": [
														{
															"nativeSrc": "9154:29:12",
															"nodeType": "YulAssignment",
															"src": "9154:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9176:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9176:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9163:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "9163:12:12"
																},
																"nativeSrc": "9163:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9163:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9154:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9154:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9216:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9216:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9192:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "9192:23:12"
																},
																"nativeSrc": "9192:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9192:30:12"
															},
															"nativeSrc": "9192:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9192:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "9095:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9122:6:12",
														"nodeType": "YulTypedName",
														"src": "9122:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9130:3:12",
														"nodeType": "YulTypedName",
														"src": "9130:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9138:5:12",
														"nodeType": "YulTypedName",
														"src": "9138:5:12",
														"type": ""
													}
												],
												"src": "9095:133:12"
											},
											{
												"body": {
													"nativeSrc": "9314:388:12",
													"nodeType": "YulBlock",
													"src": "9314:388:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9360:83:12",
																"nodeType": "YulBlock",
																"src": "9360:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9362:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9362:77:12"
																			},
																			"nativeSrc": "9362:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9362:79:12"
																		},
																		"nativeSrc": "9362:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9362:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9335:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9335:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9344:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9344:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9331:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9331:3:12"
																		},
																		"nativeSrc": "9331:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9331:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9356:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9356:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9327:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9327:3:12"
																},
																"nativeSrc": "9327:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9327:32:12"
															},
															"nativeSrc": "9324:119:12",
															"nodeType": "YulIf",
															"src": "9324:119:12"
														},
														{
															"nativeSrc": "9453:117:12",
															"nodeType": "YulBlock",
															"src": "9453:117:12",
															"statements": [
																{
																	"nativeSrc": "9468:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9468:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9482:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9482:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9472:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9472:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9497:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9497:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9532:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9532:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9543:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9543:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9528:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9528:3:12"
																				},
																				"nativeSrc": "9528:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9528:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9552:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9552:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9507:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9507:20:12"
																		},
																		"nativeSrc": "9507:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9507:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9497:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9497:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9580:115:12",
															"nodeType": "YulBlock",
															"src": "9580:115:12",
															"statements": [
																{
																	"nativeSrc": "9595:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9595:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9609:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9609:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9599:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9599:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9625:60:12",
																	"nodeType": "YulAssignment",
																	"src": "9625:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9657:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9657:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9668:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9668:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9653:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9653:3:12"
																				},
																				"nativeSrc": "9653:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9653:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9677:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9677:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "9635:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9635:17:12"
																		},
																		"nativeSrc": "9635:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9635:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9625:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9625:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9234:468:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9276:9:12",
														"nodeType": "YulTypedName",
														"src": "9276:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9287:7:12",
														"nodeType": "YulTypedName",
														"src": "9287:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9299:6:12",
														"nodeType": "YulTypedName",
														"src": "9299:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9307:6:12",
														"nodeType": "YulTypedName",
														"src": "9307:6:12",
														"type": ""
													}
												],
												"src": "9234:468:12"
											},
											{
												"body": {
													"nativeSrc": "9774:241:12",
													"nodeType": "YulBlock",
													"src": "9774:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9879:22:12",
																"nodeType": "YulBlock",
																"src": "9879:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9881:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9881:16:12"
																			},
																			"nativeSrc": "9881:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9881:18:12"
																		},
																		"nativeSrc": "9881:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9881:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9851:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9851:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9859:18:12",
																		"nodeType": "YulLiteral",
																		"src": "9859:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9848:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9848:2:12"
																},
																"nativeSrc": "9848:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9848:30:12"
															},
															"nativeSrc": "9845:56:12",
															"nodeType": "YulIf",
															"src": "9845:56:12"
														},
														{
															"nativeSrc": "9911:37:12",
															"nodeType": "YulAssignment",
															"src": "9911:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9941:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9941:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9919:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "9919:21:12"
																},
																"nativeSrc": "9919:29:12",
																"nodeType": "YulFunctionCall",
																"src": "9919:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9911:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9911:4:12"
																}
															]
														},
														{
															"nativeSrc": "9985:23:12",
															"nodeType": "YulAssignment",
															"src": "9985:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9997:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9997:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10003:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10003:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9993:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9993:3:12"
																},
																"nativeSrc": "9993:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9993:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9985:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9985:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "9708:307:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9758:6:12",
														"nodeType": "YulTypedName",
														"src": "9758:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9769:4:12",
														"nodeType": "YulTypedName",
														"src": "9769:4:12",
														"type": ""
													}
												],
												"src": "9708:307:12"
											},
											{
												"body": {
													"nativeSrc": "10104:340:12",
													"nodeType": "YulBlock",
													"src": "10104:340:12",
													"statements": [
														{
															"nativeSrc": "10114:74:12",
															"nodeType": "YulAssignment",
															"src": "10114:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10180:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10180:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "10139:40:12",
																			"nodeType": "YulIdentifier",
																			"src": "10139:40:12"
																		},
																		"nativeSrc": "10139:48:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10139:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10123:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "10123:15:12"
																},
																"nativeSrc": "10123:65:12",
																"nodeType": "YulFunctionCall",
																"src": "10123:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10114:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10114:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10204:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10204:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10211:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10211:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10197:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10197:6:12"
																},
																"nativeSrc": "10197:21:12",
																"nodeType": "YulFunctionCall",
																"src": "10197:21:12"
															},
															"nativeSrc": "10197:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "10197:21:12"
														},
														{
															"nativeSrc": "10227:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10227:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10242:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10242:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10249:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10249:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10238:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10238:3:12"
																},
																"nativeSrc": "10238:16:12",
																"nodeType": "YulFunctionCall",
																"src": "10238:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10231:3:12",
																	"nodeType": "YulTypedName",
																	"src": "10231:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10292:83:12",
																"nodeType": "YulBlock",
																"src": "10292:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10294:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10294:77:12"
																			},
																			"nativeSrc": "10294:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10294:79:12"
																		},
																		"nativeSrc": "10294:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10294:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10273:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10273:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10278:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10278:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10269:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10269:3:12"
																		},
																		"nativeSrc": "10269:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10269:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10287:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10287:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10266:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10266:2:12"
																},
																"nativeSrc": "10266:25:12",
																"nodeType": "YulFunctionCall",
																"src": "10266:25:12"
															},
															"nativeSrc": "10263:112:12",
															"nodeType": "YulIf",
															"src": "10263:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10421:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10421:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10426:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10426:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10431:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10431:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10384:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "10384:36:12"
																},
																"nativeSrc": "10384:54:12",
																"nodeType": "YulFunctionCall",
																"src": "10384:54:12"
															},
															"nativeSrc": "10384:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "10384:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "10021:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10077:3:12",
														"nodeType": "YulTypedName",
														"src": "10077:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10082:6:12",
														"nodeType": "YulTypedName",
														"src": "10082:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10090:3:12",
														"nodeType": "YulTypedName",
														"src": "10090:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10098:5:12",
														"nodeType": "YulTypedName",
														"src": "10098:5:12",
														"type": ""
													}
												],
												"src": "10021:423:12"
											},
											{
												"body": {
													"nativeSrc": "10524:277:12",
													"nodeType": "YulBlock",
													"src": "10524:277:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10573:83:12",
																"nodeType": "YulBlock",
																"src": "10573:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10575:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10575:77:12"
																			},
																			"nativeSrc": "10575:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10575:79:12"
																		},
																		"nativeSrc": "10575:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10575:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10552:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10552:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10560:4:12",
																						"nodeType": "YulLiteral",
																						"src": "10560:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10548:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10548:3:12"
																				},
																				"nativeSrc": "10548:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10548:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10567:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "10567:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10544:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10544:3:12"
																		},
																		"nativeSrc": "10544:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10544:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10537:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10537:6:12"
																},
																"nativeSrc": "10537:35:12",
																"nodeType": "YulFunctionCall",
																"src": "10537:35:12"
															},
															"nativeSrc": "10534:122:12",
															"nodeType": "YulIf",
															"src": "10534:122:12"
														},
														{
															"nativeSrc": "10665:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10665:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10692:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10692:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10679:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "10679:12:12"
																},
																"nativeSrc": "10679:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10679:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10669:6:12",
																	"nodeType": "YulTypedName",
																	"src": "10669:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10708:87:12",
															"nodeType": "YulAssignment",
															"src": "10708:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10768:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10768:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10776:4:12",
																				"nodeType": "YulLiteral",
																				"src": "10776:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10764:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10764:3:12"
																		},
																		"nativeSrc": "10764:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10764:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10783:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10783:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10791:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10791:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "10717:46:12",
																	"nodeType": "YulIdentifier",
																	"src": "10717:46:12"
																},
																"nativeSrc": "10717:78:12",
																"nodeType": "YulFunctionCall",
																"src": "10717:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10708:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10708:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10463:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10502:6:12",
														"nodeType": "YulTypedName",
														"src": "10502:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10510:3:12",
														"nodeType": "YulTypedName",
														"src": "10510:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10518:5:12",
														"nodeType": "YulTypedName",
														"src": "10518:5:12",
														"type": ""
													}
												],
												"src": "10463:338:12"
											},
											{
												"body": {
													"nativeSrc": "10933:817:12",
													"nodeType": "YulBlock",
													"src": "10933:817:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10980:83:12",
																"nodeType": "YulBlock",
																"src": "10980:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10982:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10982:77:12"
																			},
																			"nativeSrc": "10982:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10982:79:12"
																		},
																		"nativeSrc": "10982:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10982:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10954:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10954:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10963:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10963:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10950:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10950:3:12"
																		},
																		"nativeSrc": "10950:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10950:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10975:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10975:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10946:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10946:3:12"
																},
																"nativeSrc": "10946:33:12",
																"nodeType": "YulFunctionCall",
																"src": "10946:33:12"
															},
															"nativeSrc": "10943:120:12",
															"nodeType": "YulIf",
															"src": "10943:120:12"
														},
														{
															"nativeSrc": "11073:117:12",
															"nodeType": "YulBlock",
															"src": "11073:117:12",
															"statements": [
																{
																	"nativeSrc": "11088:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11088:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11102:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11102:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11092:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11092:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11117:63:12",
																	"nodeType": "YulAssignment",
																	"src": "11117:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11152:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11152:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11163:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11163:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11148:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11148:3:12"
																				},
																				"nativeSrc": "11148:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11148:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11172:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11172:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11127:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "11127:20:12"
																		},
																		"nativeSrc": "11127:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11127:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11117:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11117:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11200:118:12",
															"nodeType": "YulBlock",
															"src": "11200:118:12",
															"statements": [
																{
																	"nativeSrc": "11215:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11215:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11229:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11229:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11219:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11219:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11245:63:12",
																	"nodeType": "YulAssignment",
																	"src": "11245:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11280:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11280:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11291:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11291:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11276:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11276:3:12"
																				},
																				"nativeSrc": "11276:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11276:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11300:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11300:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11255:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "11255:20:12"
																		},
																		"nativeSrc": "11255:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11255:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11245:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11245:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11328:118:12",
															"nodeType": "YulBlock",
															"src": "11328:118:12",
															"statements": [
																{
																	"nativeSrc": "11343:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11343:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11357:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11357:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11347:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11347:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11373:63:12",
																	"nodeType": "YulAssignment",
																	"src": "11373:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11408:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11408:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11419:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11419:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11404:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11404:3:12"
																				},
																				"nativeSrc": "11404:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11404:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11428:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11428:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11383:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "11383:20:12"
																		},
																		"nativeSrc": "11383:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11383:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11373:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11373:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11456:287:12",
															"nodeType": "YulBlock",
															"src": "11456:287:12",
															"statements": [
																{
																	"nativeSrc": "11471:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11471:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11502:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11502:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11513:2:12",
																						"nodeType": "YulLiteral",
																						"src": "11513:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11498:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11498:3:12"
																				},
																				"nativeSrc": "11498:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11498:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11485:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "11485:12:12"
																		},
																		"nativeSrc": "11485:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11485:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11475:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11475:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11564:83:12",
																		"nodeType": "YulBlock",
																		"src": "11564:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11566:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "11566:77:12"
																					},
																					"nativeSrc": "11566:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "11566:79:12"
																				},
																				"nativeSrc": "11566:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "11566:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11536:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11536:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11544:18:12",
																				"nodeType": "YulLiteral",
																				"src": "11544:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11533:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11533:2:12"
																		},
																		"nativeSrc": "11533:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11533:30:12"
																	},
																	"nativeSrc": "11530:117:12",
																	"nodeType": "YulIf",
																	"src": "11530:117:12"
																},
																{
																	"nativeSrc": "11661:72:12",
																	"nodeType": "YulAssignment",
																	"src": "11661:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11705:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11705:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11716:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11716:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11701:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11701:3:12"
																				},
																				"nativeSrc": "11701:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11701:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11725:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11725:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11671:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "11671:29:12"
																		},
																		"nativeSrc": "11671:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11671:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11661:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11661:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "10807:943:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10879:9:12",
														"nodeType": "YulTypedName",
														"src": "10879:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10890:7:12",
														"nodeType": "YulTypedName",
														"src": "10890:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10902:6:12",
														"nodeType": "YulTypedName",
														"src": "10902:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10910:6:12",
														"nodeType": "YulTypedName",
														"src": "10910:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10918:6:12",
														"nodeType": "YulTypedName",
														"src": "10918:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10926:6:12",
														"nodeType": "YulTypedName",
														"src": "10926:6:12",
														"type": ""
													}
												],
												"src": "10807:943:12"
											},
											{
												"body": {
													"nativeSrc": "11839:391:12",
													"nodeType": "YulBlock",
													"src": "11839:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11885:83:12",
																"nodeType": "YulBlock",
																"src": "11885:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11887:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "11887:77:12"
																			},
																			"nativeSrc": "11887:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11887:79:12"
																		},
																		"nativeSrc": "11887:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11887:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11860:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11860:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11869:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11869:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11856:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11856:3:12"
																		},
																		"nativeSrc": "11856:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11856:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11881:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11881:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11852:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11852:3:12"
																},
																"nativeSrc": "11852:32:12",
																"nodeType": "YulFunctionCall",
																"src": "11852:32:12"
															},
															"nativeSrc": "11849:119:12",
															"nodeType": "YulIf",
															"src": "11849:119:12"
														},
														{
															"nativeSrc": "11978:117:12",
															"nodeType": "YulBlock",
															"src": "11978:117:12",
															"statements": [
																{
																	"nativeSrc": "11993:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11993:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12007:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12007:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11997:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11997:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12022:63:12",
																	"nodeType": "YulAssignment",
																	"src": "12022:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12057:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12057:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12068:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12068:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12053:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12053:3:12"
																				},
																				"nativeSrc": "12053:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12053:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12077:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12077:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12032:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "12032:20:12"
																		},
																		"nativeSrc": "12032:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12032:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12022:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12022:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12105:118:12",
															"nodeType": "YulBlock",
															"src": "12105:118:12",
															"statements": [
																{
																	"nativeSrc": "12120:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12120:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12134:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12124:6:12",
																			"nodeType": "YulTypedName",
																			"src": "12124:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12150:63:12",
																	"nodeType": "YulAssignment",
																	"src": "12150:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12185:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12185:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12196:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12196:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12181:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12181:3:12"
																				},
																				"nativeSrc": "12181:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12181:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12205:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12205:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12160:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "12160:20:12"
																		},
																		"nativeSrc": "12160:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12160:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12150:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12150:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11756:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11801:9:12",
														"nodeType": "YulTypedName",
														"src": "11801:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11812:7:12",
														"nodeType": "YulTypedName",
														"src": "11812:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11824:6:12",
														"nodeType": "YulTypedName",
														"src": "11824:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11832:6:12",
														"nodeType": "YulTypedName",
														"src": "11832:6:12",
														"type": ""
													}
												],
												"src": "11756:474:12"
											},
											{
												"body": {
													"nativeSrc": "12264:152:12",
													"nodeType": "YulBlock",
													"src": "12264:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12281:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12281:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12284:77:12",
																		"nodeType": "YulLiteral",
																		"src": "12284:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12274:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12274:6:12"
																},
																"nativeSrc": "12274:88:12",
																"nodeType": "YulFunctionCall",
																"src": "12274:88:12"
															},
															"nativeSrc": "12274:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "12274:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12378:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12378:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12381:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12381:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12371:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12371:6:12"
																},
																"nativeSrc": "12371:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12371:15:12"
															},
															"nativeSrc": "12371:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "12371:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12402:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12402:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12405:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12405:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12395:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12395:6:12"
																},
																"nativeSrc": "12395:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12395:15:12"
															},
															"nativeSrc": "12395:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "12395:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12236:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "12236:180:12"
											},
											{
												"body": {
													"nativeSrc": "12473:269:12",
													"nodeType": "YulBlock",
													"src": "12473:269:12",
													"statements": [
														{
															"nativeSrc": "12483:22:12",
															"nodeType": "YulAssignment",
															"src": "12483:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12497:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12497:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12503:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12503:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12493:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12493:3:12"
																},
																"nativeSrc": "12493:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12493:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12483:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12483:6:12"
																}
															]
														},
														{
															"nativeSrc": "12514:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12514:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12544:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12544:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12550:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12550:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12540:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12540:3:12"
																},
																"nativeSrc": "12540:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12540:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12518:18:12",
																	"nodeType": "YulTypedName",
																	"src": "12518:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12591:51:12",
																"nodeType": "YulBlock",
																"src": "12591:51:12",
																"statements": [
																	{
																		"nativeSrc": "12605:27:12",
																		"nodeType": "YulAssignment",
																		"src": "12605:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12619:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "12619:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12627:4:12",
																					"nodeType": "YulLiteral",
																					"src": "12627:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12615:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12615:3:12"
																			},
																			"nativeSrc": "12615:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12615:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12605:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12605:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12571:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "12571:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12564:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12564:6:12"
																},
																"nativeSrc": "12564:26:12",
																"nodeType": "YulFunctionCall",
																"src": "12564:26:12"
															},
															"nativeSrc": "12561:81:12",
															"nodeType": "YulIf",
															"src": "12561:81:12"
														},
														{
															"body": {
																"nativeSrc": "12694:42:12",
																"nodeType": "YulBlock",
																"src": "12694:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12708:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "12708:16:12"
																			},
																			"nativeSrc": "12708:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12708:18:12"
																		},
																		"nativeSrc": "12708:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12708:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12658:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "12658:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12681:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12681:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12689:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12689:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12678:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "12678:2:12"
																		},
																		"nativeSrc": "12678:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12678:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12655:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12655:2:12"
																},
																"nativeSrc": "12655:38:12",
																"nodeType": "YulFunctionCall",
																"src": "12655:38:12"
															},
															"nativeSrc": "12652:84:12",
															"nodeType": "YulIf",
															"src": "12652:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12422:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12457:4:12",
														"nodeType": "YulTypedName",
														"src": "12457:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12466:6:12",
														"nodeType": "YulTypedName",
														"src": "12466:6:12",
														"type": ""
													}
												],
												"src": "12422:320:12"
											},
											{
												"body": {
													"nativeSrc": "12854:118:12",
													"nodeType": "YulBlock",
													"src": "12854:118:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12876:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12876:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12884:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12884:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12872:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12872:3:12"
																		},
																		"nativeSrc": "12872:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12872:14:12"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e732063616e206578656375746520746869732066756e",
																		"kind": "string",
																		"nativeSrc": "12888:34:12",
																		"nodeType": "YulLiteral",
																		"src": "12888:34:12",
																		"type": "",
																		"value": "Only admins can execute this fun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12865:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12865:6:12"
																},
																"nativeSrc": "12865:58:12",
																"nodeType": "YulFunctionCall",
																"src": "12865:58:12"
															},
															"nativeSrc": "12865:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "12865:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12944:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12944:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12952:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12952:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12940:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12940:3:12"
																		},
																		"nativeSrc": "12940:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12940:15:12"
																	},
																	{
																		"hexValue": "6374696f6e",
																		"kind": "string",
																		"nativeSrc": "12957:7:12",
																		"nodeType": "YulLiteral",
																		"src": "12957:7:12",
																		"type": "",
																		"value": "ction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12933:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12933:6:12"
																},
																"nativeSrc": "12933:32:12",
																"nodeType": "YulFunctionCall",
																"src": "12933:32:12"
															},
															"nativeSrc": "12933:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "12933:32:12"
														}
													]
												},
												"name": "store_literal_in_memory_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0",
												"nativeSrc": "12748:224:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12846:6:12",
														"nodeType": "YulTypedName",
														"src": "12846:6:12",
														"type": ""
													}
												],
												"src": "12748:224:12"
											},
											{
												"body": {
													"nativeSrc": "13124:220:12",
													"nodeType": "YulBlock",
													"src": "13124:220:12",
													"statements": [
														{
															"nativeSrc": "13134:74:12",
															"nodeType": "YulAssignment",
															"src": "13134:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13200:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13200:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13205:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13205:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13141:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13141:58:12"
																},
																"nativeSrc": "13141:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13141:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13134:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13134:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13306:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13306:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0",
																	"nativeSrc": "13217:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13217:88:12"
																},
																"nativeSrc": "13217:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13217:93:12"
															},
															"nativeSrc": "13217:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13217:93:12"
														},
														{
															"nativeSrc": "13319:19:12",
															"nodeType": "YulAssignment",
															"src": "13319:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13330:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13330:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13335:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13335:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13326:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13326:3:12"
																},
																"nativeSrc": "13326:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13326:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13319:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13319:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12978:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13112:3:12",
														"nodeType": "YulTypedName",
														"src": "13112:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13120:3:12",
														"nodeType": "YulTypedName",
														"src": "13120:3:12",
														"type": ""
													}
												],
												"src": "12978:366:12"
											},
											{
												"body": {
													"nativeSrc": "13521:248:12",
													"nodeType": "YulBlock",
													"src": "13521:248:12",
													"statements": [
														{
															"nativeSrc": "13531:26:12",
															"nodeType": "YulAssignment",
															"src": "13531:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13543:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13543:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13554:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13554:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13539:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13539:3:12"
																},
																"nativeSrc": "13539:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13539:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13531:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13531:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13578:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13578:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13589:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13589:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13574:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13574:3:12"
																		},
																		"nativeSrc": "13574:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13574:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13597:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13597:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13603:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13603:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13593:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13593:3:12"
																		},
																		"nativeSrc": "13593:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13593:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13567:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13567:6:12"
																},
																"nativeSrc": "13567:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13567:47:12"
															},
															"nativeSrc": "13567:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13567:47:12"
														},
														{
															"nativeSrc": "13623:139:12",
															"nodeType": "YulAssignment",
															"src": "13623:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13757:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13757:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13631:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13631:124:12"
																},
																"nativeSrc": "13631:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13631:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13623:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13623:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13350:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13501:9:12",
														"nodeType": "YulTypedName",
														"src": "13501:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13516:4:12",
														"nodeType": "YulTypedName",
														"src": "13516:4:12",
														"type": ""
													}
												],
												"src": "13350:419:12"
											},
											{
												"body": {
													"nativeSrc": "13929:288:12",
													"nodeType": "YulBlock",
													"src": "13929:288:12",
													"statements": [
														{
															"nativeSrc": "13939:26:12",
															"nodeType": "YulAssignment",
															"src": "13939:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13951:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13951:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13962:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13962:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13947:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13947:3:12"
																},
																"nativeSrc": "13947:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13947:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13939:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13939:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14019:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14019:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14032:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14032:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14043:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14043:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14028:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14028:3:12"
																		},
																		"nativeSrc": "14028:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14028:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13975:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "13975:43:12"
																},
																"nativeSrc": "13975:71:12",
																"nodeType": "YulFunctionCall",
																"src": "13975:71:12"
															},
															"nativeSrc": "13975:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "13975:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14100:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14100:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14113:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14113:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14124:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14124:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14109:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14109:3:12"
																		},
																		"nativeSrc": "14109:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14109:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14056:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "14056:43:12"
																},
																"nativeSrc": "14056:72:12",
																"nodeType": "YulFunctionCall",
																"src": "14056:72:12"
															},
															"nativeSrc": "14056:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "14056:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14182:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14182:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14195:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14195:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14206:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14206:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14191:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14191:3:12"
																		},
																		"nativeSrc": "14191:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14191:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14138:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "14138:43:12"
																},
																"nativeSrc": "14138:72:12",
																"nodeType": "YulFunctionCall",
																"src": "14138:72:12"
															},
															"nativeSrc": "14138:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "14138:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13775:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13885:9:12",
														"nodeType": "YulTypedName",
														"src": "13885:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13897:6:12",
														"nodeType": "YulTypedName",
														"src": "13897:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13905:6:12",
														"nodeType": "YulTypedName",
														"src": "13905:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13913:6:12",
														"nodeType": "YulTypedName",
														"src": "13913:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13924:4:12",
														"nodeType": "YulTypedName",
														"src": "13924:4:12",
														"type": ""
													}
												],
												"src": "13775:442:12"
											},
											{
												"body": {
													"nativeSrc": "14329:65:12",
													"nodeType": "YulBlock",
													"src": "14329:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14351:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14351:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14359:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14359:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14347:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14347:3:12"
																		},
																		"nativeSrc": "14347:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14347:14:12"
																	},
																	{
																		"hexValue": "596f7520686176656e277420766f74656420796574",
																		"kind": "string",
																		"nativeSrc": "14363:23:12",
																		"nodeType": "YulLiteral",
																		"src": "14363:23:12",
																		"type": "",
																		"value": "You haven't voted yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14340:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14340:6:12"
																},
																"nativeSrc": "14340:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14340:47:12"
															},
															"nativeSrc": "14340:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14340:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac",
												"nativeSrc": "14223:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14321:6:12",
														"nodeType": "YulTypedName",
														"src": "14321:6:12",
														"type": ""
													}
												],
												"src": "14223:171:12"
											},
											{
												"body": {
													"nativeSrc": "14546:220:12",
													"nodeType": "YulBlock",
													"src": "14546:220:12",
													"statements": [
														{
															"nativeSrc": "14556:74:12",
															"nodeType": "YulAssignment",
															"src": "14556:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14622:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14622:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14627:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14627:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14563:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14563:58:12"
																},
																"nativeSrc": "14563:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14563:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14556:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14556:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14728:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14728:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac",
																	"nativeSrc": "14639:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14639:88:12"
																},
																"nativeSrc": "14639:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14639:93:12"
															},
															"nativeSrc": "14639:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14639:93:12"
														},
														{
															"nativeSrc": "14741:19:12",
															"nodeType": "YulAssignment",
															"src": "14741:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14752:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14752:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14757:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14757:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14748:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14748:3:12"
																},
																"nativeSrc": "14748:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14748:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14741:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14741:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14400:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14534:3:12",
														"nodeType": "YulTypedName",
														"src": "14534:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14542:3:12",
														"nodeType": "YulTypedName",
														"src": "14542:3:12",
														"type": ""
													}
												],
												"src": "14400:366:12"
											},
											{
												"body": {
													"nativeSrc": "14943:248:12",
													"nodeType": "YulBlock",
													"src": "14943:248:12",
													"statements": [
														{
															"nativeSrc": "14953:26:12",
															"nodeType": "YulAssignment",
															"src": "14953:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14965:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14965:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14976:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14976:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14961:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14961:3:12"
																},
																"nativeSrc": "14961:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14961:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14953:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14953:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15000:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15000:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15011:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15011:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14996:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14996:3:12"
																		},
																		"nativeSrc": "14996:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14996:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15019:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15019:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15025:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15025:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15015:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15015:3:12"
																		},
																		"nativeSrc": "15015:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15015:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14989:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14989:6:12"
																},
																"nativeSrc": "14989:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14989:47:12"
															},
															"nativeSrc": "14989:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14989:47:12"
														},
														{
															"nativeSrc": "15045:139:12",
															"nodeType": "YulAssignment",
															"src": "15045:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15179:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15179:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15053:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15053:124:12"
																},
																"nativeSrc": "15053:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15053:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15045:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15045:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14772:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14923:9:12",
														"nodeType": "YulTypedName",
														"src": "14923:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14938:4:12",
														"nodeType": "YulTypedName",
														"src": "14938:4:12",
														"type": ""
													}
												],
												"src": "14772:419:12"
											},
											{
												"body": {
													"nativeSrc": "15303:68:12",
													"nodeType": "YulBlock",
													"src": "15303:68:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15325:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15325:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15333:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15333:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15321:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15321:3:12"
																		},
																		"nativeSrc": "15321:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15321:14:12"
																	},
																	{
																		"hexValue": "43616e646964617465206e6f742072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "15337:26:12",
																		"nodeType": "YulLiteral",
																		"src": "15337:26:12",
																		"type": "",
																		"value": "Candidate not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15314:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15314:6:12"
																},
																"nativeSrc": "15314:50:12",
																"nodeType": "YulFunctionCall",
																"src": "15314:50:12"
															},
															"nativeSrc": "15314:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "15314:50:12"
														}
													]
												},
												"name": "store_literal_in_memory_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e",
												"nativeSrc": "15197:174:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15295:6:12",
														"nodeType": "YulTypedName",
														"src": "15295:6:12",
														"type": ""
													}
												],
												"src": "15197:174:12"
											},
											{
												"body": {
													"nativeSrc": "15523:220:12",
													"nodeType": "YulBlock",
													"src": "15523:220:12",
													"statements": [
														{
															"nativeSrc": "15533:74:12",
															"nodeType": "YulAssignment",
															"src": "15533:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15599:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15599:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15604:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15604:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15540:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15540:58:12"
																},
																"nativeSrc": "15540:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15540:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15533:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15533:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15705:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15705:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e",
																	"nativeSrc": "15616:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15616:88:12"
																},
																"nativeSrc": "15616:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15616:93:12"
															},
															"nativeSrc": "15616:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15616:93:12"
														},
														{
															"nativeSrc": "15718:19:12",
															"nodeType": "YulAssignment",
															"src": "15718:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15729:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15729:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15734:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15734:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15725:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15725:3:12"
																},
																"nativeSrc": "15725:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15725:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15718:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15718:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15377:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15511:3:12",
														"nodeType": "YulTypedName",
														"src": "15511:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15519:3:12",
														"nodeType": "YulTypedName",
														"src": "15519:3:12",
														"type": ""
													}
												],
												"src": "15377:366:12"
											},
											{
												"body": {
													"nativeSrc": "15920:248:12",
													"nodeType": "YulBlock",
													"src": "15920:248:12",
													"statements": [
														{
															"nativeSrc": "15930:26:12",
															"nodeType": "YulAssignment",
															"src": "15930:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15942:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15942:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15953:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15953:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15938:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15938:3:12"
																},
																"nativeSrc": "15938:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15938:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15930:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15930:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15977:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15977:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15988:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15988:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15973:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15973:3:12"
																		},
																		"nativeSrc": "15973:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15973:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15996:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15996:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16002:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16002:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15992:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15992:3:12"
																		},
																		"nativeSrc": "15992:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15992:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15966:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15966:6:12"
																},
																"nativeSrc": "15966:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15966:47:12"
															},
															"nativeSrc": "15966:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15966:47:12"
														},
														{
															"nativeSrc": "16022:139:12",
															"nodeType": "YulAssignment",
															"src": "16022:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16156:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16156:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16030:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16030:124:12"
																},
																"nativeSrc": "16030:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16030:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16022:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16022:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15749:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15900:9:12",
														"nodeType": "YulTypedName",
														"src": "15900:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15915:4:12",
														"nodeType": "YulTypedName",
														"src": "15915:4:12",
														"type": ""
													}
												],
												"src": "15749:419:12"
											},
											{
												"body": {
													"nativeSrc": "16280:69:12",
													"nodeType": "YulBlock",
													"src": "16280:69:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16302:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16302:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16310:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16310:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16298:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16298:3:12"
																		},
																		"nativeSrc": "16298:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16298:14:12"
																	},
																	{
																		"hexValue": "416464726573732068617320616c726561647920766f746564",
																		"kind": "string",
																		"nativeSrc": "16314:27:12",
																		"nodeType": "YulLiteral",
																		"src": "16314:27:12",
																		"type": "",
																		"value": "Address has already voted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16291:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16291:6:12"
																},
																"nativeSrc": "16291:51:12",
																"nodeType": "YulFunctionCall",
																"src": "16291:51:12"
															},
															"nativeSrc": "16291:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "16291:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401",
												"nativeSrc": "16174:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16272:6:12",
														"nodeType": "YulTypedName",
														"src": "16272:6:12",
														"type": ""
													}
												],
												"src": "16174:175:12"
											},
											{
												"body": {
													"nativeSrc": "16501:220:12",
													"nodeType": "YulBlock",
													"src": "16501:220:12",
													"statements": [
														{
															"nativeSrc": "16511:74:12",
															"nodeType": "YulAssignment",
															"src": "16511:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16577:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16577:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16582:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16582:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16518:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "16518:58:12"
																},
																"nativeSrc": "16518:67:12",
																"nodeType": "YulFunctionCall",
																"src": "16518:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16511:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16511:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16683:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16683:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401",
																	"nativeSrc": "16594:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "16594:88:12"
																},
																"nativeSrc": "16594:93:12",
																"nodeType": "YulFunctionCall",
																"src": "16594:93:12"
															},
															"nativeSrc": "16594:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "16594:93:12"
														},
														{
															"nativeSrc": "16696:19:12",
															"nodeType": "YulAssignment",
															"src": "16696:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16707:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16707:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16712:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16712:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16703:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16703:3:12"
																},
																"nativeSrc": "16703:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16703:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16696:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16696:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16355:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16489:3:12",
														"nodeType": "YulTypedName",
														"src": "16489:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16497:3:12",
														"nodeType": "YulTypedName",
														"src": "16497:3:12",
														"type": ""
													}
												],
												"src": "16355:366:12"
											},
											{
												"body": {
													"nativeSrc": "16898:248:12",
													"nodeType": "YulBlock",
													"src": "16898:248:12",
													"statements": [
														{
															"nativeSrc": "16908:26:12",
															"nodeType": "YulAssignment",
															"src": "16908:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16920:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16920:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16931:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16931:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16916:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16916:3:12"
																},
																"nativeSrc": "16916:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16916:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16908:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16908:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16955:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16955:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16966:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16966:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16951:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16951:3:12"
																		},
																		"nativeSrc": "16951:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16951:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16974:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16974:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16980:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16980:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16970:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16970:3:12"
																		},
																		"nativeSrc": "16970:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16970:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16944:6:12"
																},
																"nativeSrc": "16944:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16944:47:12"
															},
															"nativeSrc": "16944:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16944:47:12"
														},
														{
															"nativeSrc": "17000:139:12",
															"nodeType": "YulAssignment",
															"src": "17000:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17134:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17134:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17008:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "17008:124:12"
																},
																"nativeSrc": "17008:131:12",
																"nodeType": "YulFunctionCall",
																"src": "17008:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17000:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17000:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16727:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16878:9:12",
														"nodeType": "YulTypedName",
														"src": "16878:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16893:4:12",
														"nodeType": "YulTypedName",
														"src": "16893:4:12",
														"type": ""
													}
												],
												"src": "16727:419:12"
											},
											{
												"body": {
													"nativeSrc": "17258:69:12",
													"nodeType": "YulBlock",
													"src": "17258:69:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17280:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17280:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17288:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17288:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17276:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17276:3:12"
																		},
																		"nativeSrc": "17276:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17276:14:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420766f74696e672076616c7565",
																		"kind": "string",
																		"nativeSrc": "17292:27:12",
																		"nodeType": "YulLiteral",
																		"src": "17292:27:12",
																		"type": "",
																		"value": "Insufficient voting value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17269:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17269:6:12"
																},
																"nativeSrc": "17269:51:12",
																"nodeType": "YulFunctionCall",
																"src": "17269:51:12"
															},
															"nativeSrc": "17269:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "17269:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3",
												"nativeSrc": "17152:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17250:6:12",
														"nodeType": "YulTypedName",
														"src": "17250:6:12",
														"type": ""
													}
												],
												"src": "17152:175:12"
											},
											{
												"body": {
													"nativeSrc": "17479:220:12",
													"nodeType": "YulBlock",
													"src": "17479:220:12",
													"statements": [
														{
															"nativeSrc": "17489:74:12",
															"nodeType": "YulAssignment",
															"src": "17489:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17555:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17555:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17560:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17560:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17496:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "17496:58:12"
																},
																"nativeSrc": "17496:67:12",
																"nodeType": "YulFunctionCall",
																"src": "17496:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17489:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17489:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17661:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17661:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3",
																	"nativeSrc": "17572:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "17572:88:12"
																},
																"nativeSrc": "17572:93:12",
																"nodeType": "YulFunctionCall",
																"src": "17572:93:12"
															},
															"nativeSrc": "17572:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "17572:93:12"
														},
														{
															"nativeSrc": "17674:19:12",
															"nodeType": "YulAssignment",
															"src": "17674:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17685:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17685:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17690:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17690:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17681:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17681:3:12"
																},
																"nativeSrc": "17681:12:12",
																"nodeType": "YulFunctionCall",
																"src": "17681:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17674:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17674:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17333:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17467:3:12",
														"nodeType": "YulTypedName",
														"src": "17467:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17475:3:12",
														"nodeType": "YulTypedName",
														"src": "17475:3:12",
														"type": ""
													}
												],
												"src": "17333:366:12"
											},
											{
												"body": {
													"nativeSrc": "17876:248:12",
													"nodeType": "YulBlock",
													"src": "17876:248:12",
													"statements": [
														{
															"nativeSrc": "17886:26:12",
															"nodeType": "YulAssignment",
															"src": "17886:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17898:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17898:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17909:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17909:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17894:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17894:3:12"
																},
																"nativeSrc": "17894:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17894:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17886:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17886:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17933:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17933:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17944:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17944:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17929:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17929:3:12"
																		},
																		"nativeSrc": "17929:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17929:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17952:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17952:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17958:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17958:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17948:3:12"
																		},
																		"nativeSrc": "17948:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17948:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17922:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17922:6:12"
																},
																"nativeSrc": "17922:47:12",
																"nodeType": "YulFunctionCall",
																"src": "17922:47:12"
															},
															"nativeSrc": "17922:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "17922:47:12"
														},
														{
															"nativeSrc": "17978:139:12",
															"nodeType": "YulAssignment",
															"src": "17978:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18112:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18112:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17986:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "17986:124:12"
																},
																"nativeSrc": "17986:131:12",
																"nodeType": "YulFunctionCall",
																"src": "17986:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17978:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17978:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17705:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17856:9:12",
														"nodeType": "YulTypedName",
														"src": "17856:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17871:4:12",
														"nodeType": "YulTypedName",
														"src": "17871:4:12",
														"type": ""
													}
												],
												"src": "17705:419:12"
											},
											{
												"body": {
													"nativeSrc": "18158:152:12",
													"nodeType": "YulBlock",
													"src": "18158:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18175:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18175:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18178:77:12",
																		"nodeType": "YulLiteral",
																		"src": "18178:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18168:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18168:6:12"
																},
																"nativeSrc": "18168:88:12",
																"nodeType": "YulFunctionCall",
																"src": "18168:88:12"
															},
															"nativeSrc": "18168:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "18168:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18272:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18272:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18275:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18275:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18265:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18265:6:12"
																},
																"nativeSrc": "18265:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18265:15:12"
															},
															"nativeSrc": "18265:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18265:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18296:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18296:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18299:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18299:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18289:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18289:6:12"
																},
																"nativeSrc": "18289:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18289:15:12"
															},
															"nativeSrc": "18289:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18289:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "18130:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "18130:180:12"
											},
											{
												"body": {
													"nativeSrc": "18360:147:12",
													"nodeType": "YulBlock",
													"src": "18360:147:12",
													"statements": [
														{
															"nativeSrc": "18370:25:12",
															"nodeType": "YulAssignment",
															"src": "18370:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18393:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18393:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18375:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "18375:17:12"
																},
																"nativeSrc": "18375:20:12",
																"nodeType": "YulFunctionCall",
																"src": "18375:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18370:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "18370:1:12"
																}
															]
														},
														{
															"nativeSrc": "18404:25:12",
															"nodeType": "YulAssignment",
															"src": "18404:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18427:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18427:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18409:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "18409:17:12"
																},
																"nativeSrc": "18409:20:12",
																"nodeType": "YulFunctionCall",
																"src": "18409:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18404:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "18404:1:12"
																}
															]
														},
														{
															"nativeSrc": "18438:16:12",
															"nodeType": "YulAssignment",
															"src": "18438:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18449:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18449:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18452:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18452:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18445:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18445:3:12"
																},
																"nativeSrc": "18445:9:12",
																"nodeType": "YulFunctionCall",
																"src": "18445:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "18438:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18438:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18478:22:12",
																"nodeType": "YulBlock",
																"src": "18478:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18480:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "18480:16:12"
																			},
																			"nativeSrc": "18480:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18480:18:12"
																		},
																		"nativeSrc": "18480:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18480:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18470:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18470:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "18473:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18473:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18467:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "18467:2:12"
																},
																"nativeSrc": "18467:10:12",
																"nodeType": "YulFunctionCall",
																"src": "18467:10:12"
															},
															"nativeSrc": "18464:36:12",
															"nodeType": "YulIf",
															"src": "18464:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "18316:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18347:1:12",
														"nodeType": "YulTypedName",
														"src": "18347:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18350:1:12",
														"nodeType": "YulTypedName",
														"src": "18350:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "18356:3:12",
														"nodeType": "YulTypedName",
														"src": "18356:3:12",
														"type": ""
													}
												],
												"src": "18316:191:12"
											},
											{
												"body": {
													"nativeSrc": "18556:190:12",
													"nodeType": "YulBlock",
													"src": "18556:190:12",
													"statements": [
														{
															"nativeSrc": "18566:33:12",
															"nodeType": "YulAssignment",
															"src": "18566:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18593:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "18593:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18575:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "18575:17:12"
																},
																"nativeSrc": "18575:24:12",
																"nodeType": "YulFunctionCall",
																"src": "18575:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18566:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "18566:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18689:22:12",
																"nodeType": "YulBlock",
																"src": "18689:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18691:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "18691:16:12"
																			},
																			"nativeSrc": "18691:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18691:18:12"
																		},
																		"nativeSrc": "18691:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18691:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18614:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "18614:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18621:66:12",
																		"nodeType": "YulLiteral",
																		"src": "18621:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18611:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "18611:2:12"
																},
																"nativeSrc": "18611:77:12",
																"nodeType": "YulFunctionCall",
																"src": "18611:77:12"
															},
															"nativeSrc": "18608:103:12",
															"nodeType": "YulIf",
															"src": "18608:103:12"
														},
														{
															"nativeSrc": "18720:20:12",
															"nodeType": "YulAssignment",
															"src": "18720:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18731:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "18731:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18738:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18738:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18727:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18727:3:12"
																},
																"nativeSrc": "18727:13:12",
																"nodeType": "YulFunctionCall",
																"src": "18727:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18720:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18720:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "18513:233:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18542:5:12",
														"nodeType": "YulTypedName",
														"src": "18542:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18552:3:12",
														"nodeType": "YulTypedName",
														"src": "18552:3:12",
														"type": ""
													}
												],
												"src": "18513:233:12"
											},
											{
												"body": {
													"nativeSrc": "18806:87:12",
													"nodeType": "YulBlock",
													"src": "18806:87:12",
													"statements": [
														{
															"nativeSrc": "18816:11:12",
															"nodeType": "YulAssignment",
															"src": "18816:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "18824:3:12",
																"nodeType": "YulIdentifier",
																"src": "18824:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18816:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18816:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18844:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18844:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "18847:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18847:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18837:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18837:6:12"
																},
																"nativeSrc": "18837:14:12",
																"nodeType": "YulFunctionCall",
																"src": "18837:14:12"
															},
															"nativeSrc": "18837:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "18837:14:12"
														},
														{
															"nativeSrc": "18860:26:12",
															"nodeType": "YulAssignment",
															"src": "18860:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18878:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18878:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18881:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18881:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "18868:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "18868:9:12"
																},
																"nativeSrc": "18868:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18868:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18860:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18860:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "18752:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "18793:3:12",
														"nodeType": "YulTypedName",
														"src": "18793:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "18801:4:12",
														"nodeType": "YulTypedName",
														"src": "18801:4:12",
														"type": ""
													}
												],
												"src": "18752:141:12"
											},
											{
												"body": {
													"nativeSrc": "18943:49:12",
													"nodeType": "YulBlock",
													"src": "18943:49:12",
													"statements": [
														{
															"nativeSrc": "18953:33:12",
															"nodeType": "YulAssignment",
															"src": "18953:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18971:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "18971:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18978:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18978:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18967:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18967:3:12"
																		},
																		"nativeSrc": "18967:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18967:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18983:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18983:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18963:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18963:3:12"
																},
																"nativeSrc": "18963:23:12",
																"nodeType": "YulFunctionCall",
																"src": "18963:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18953:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18953:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "18899:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18926:5:12",
														"nodeType": "YulTypedName",
														"src": "18926:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18936:6:12",
														"nodeType": "YulTypedName",
														"src": "18936:6:12",
														"type": ""
													}
												],
												"src": "18899:93:12"
											},
											{
												"body": {
													"nativeSrc": "19051:54:12",
													"nodeType": "YulBlock",
													"src": "19051:54:12",
													"statements": [
														{
															"nativeSrc": "19061:37:12",
															"nodeType": "YulAssignment",
															"src": "19061:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "19086:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19086:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "19092:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "19092:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "19082:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19082:3:12"
																},
																"nativeSrc": "19082:16:12",
																"nodeType": "YulFunctionCall",
																"src": "19082:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "19061:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "19061:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "18998:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "19026:4:12",
														"nodeType": "YulTypedName",
														"src": "19026:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "19032:5:12",
														"nodeType": "YulTypedName",
														"src": "19032:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "19042:8:12",
														"nodeType": "YulTypedName",
														"src": "19042:8:12",
														"type": ""
													}
												],
												"src": "18998:107:12"
											},
											{
												"body": {
													"nativeSrc": "19187:317:12",
													"nodeType": "YulBlock",
													"src": "19187:317:12",
													"statements": [
														{
															"nativeSrc": "19197:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "19197:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "19218:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "19218:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19230:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19230:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "19214:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19214:3:12"
																},
																"nativeSrc": "19214:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19214:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "19201:9:12",
																	"nodeType": "YulTypedName",
																	"src": "19201:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19241:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "19241:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "19272:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19272:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19283:66:12",
																		"nodeType": "YulLiteral",
																		"src": "19283:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "19253:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "19253:18:12"
																},
																"nativeSrc": "19253:97:12",
																"nodeType": "YulFunctionCall",
																"src": "19253:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "19245:4:12",
																	"nodeType": "YulTypedName",
																	"src": "19245:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19359:51:12",
															"nodeType": "YulAssignment",
															"src": "19359:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "19390:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19390:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "19401:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "19401:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "19371:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "19371:18:12"
																},
																"nativeSrc": "19371:39:12",
																"nodeType": "YulFunctionCall",
																"src": "19371:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "19359:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "19359:8:12"
																}
															]
														},
														{
															"nativeSrc": "19419:30:12",
															"nodeType": "YulAssignment",
															"src": "19419:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19432:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "19432:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "19443:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19443:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "19439:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19439:3:12"
																		},
																		"nativeSrc": "19439:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19439:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19428:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19428:3:12"
																},
																"nativeSrc": "19428:21:12",
																"nodeType": "YulFunctionCall",
																"src": "19428:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19419:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "19419:5:12"
																}
															]
														},
														{
															"nativeSrc": "19458:40:12",
															"nodeType": "YulAssignment",
															"src": "19458:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19471:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "19471:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "19482:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "19482:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "19492:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19492:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19478:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19478:3:12"
																		},
																		"nativeSrc": "19478:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19478:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19468:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "19468:2:12"
																},
																"nativeSrc": "19468:30:12",
																"nodeType": "YulFunctionCall",
																"src": "19468:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19458:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19458:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "19111:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19148:5:12",
														"nodeType": "YulTypedName",
														"src": "19148:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "19155:10:12",
														"nodeType": "YulTypedName",
														"src": "19155:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "19167:8:12",
														"nodeType": "YulTypedName",
														"src": "19167:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19180:6:12",
														"nodeType": "YulTypedName",
														"src": "19180:6:12",
														"type": ""
													}
												],
												"src": "19111:393:12"
											},
											{
												"body": {
													"nativeSrc": "19542:28:12",
													"nodeType": "YulBlock",
													"src": "19542:28:12",
													"statements": [
														{
															"nativeSrc": "19552:12:12",
															"nodeType": "YulAssignment",
															"src": "19552:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "19559:5:12",
																"nodeType": "YulIdentifier",
																"src": "19559:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19552:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19552:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "19510:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19528:5:12",
														"nodeType": "YulTypedName",
														"src": "19528:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19538:3:12",
														"nodeType": "YulTypedName",
														"src": "19538:3:12",
														"type": ""
													}
												],
												"src": "19510:60:12"
											},
											{
												"body": {
													"nativeSrc": "19636:82:12",
													"nodeType": "YulBlock",
													"src": "19636:82:12",
													"statements": [
														{
															"nativeSrc": "19646:66:12",
															"nodeType": "YulAssignment",
															"src": "19646:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19704:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "19704:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "19686:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "19686:17:12"
																				},
																				"nativeSrc": "19686:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "19686:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "19677:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "19677:8:12"
																		},
																		"nativeSrc": "19677:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19677:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19659:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19659:17:12"
																},
																"nativeSrc": "19659:53:12",
																"nodeType": "YulFunctionCall",
																"src": "19659:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19646:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "19646:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "19576:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19616:5:12",
														"nodeType": "YulTypedName",
														"src": "19616:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19626:9:12",
														"nodeType": "YulTypedName",
														"src": "19626:9:12",
														"type": ""
													}
												],
												"src": "19576:142:12"
											},
											{
												"body": {
													"nativeSrc": "19771:28:12",
													"nodeType": "YulBlock",
													"src": "19771:28:12",
													"statements": [
														{
															"nativeSrc": "19781:12:12",
															"nodeType": "YulAssignment",
															"src": "19781:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "19788:5:12",
																"nodeType": "YulIdentifier",
																"src": "19788:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19781:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19781:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "19724:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19757:5:12",
														"nodeType": "YulTypedName",
														"src": "19757:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19767:3:12",
														"nodeType": "YulTypedName",
														"src": "19767:3:12",
														"type": ""
													}
												],
												"src": "19724:75:12"
											},
											{
												"body": {
													"nativeSrc": "19881:193:12",
													"nodeType": "YulBlock",
													"src": "19881:193:12",
													"statements": [
														{
															"nativeSrc": "19891:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "19891:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "19946:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "19946:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "19915:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "19915:30:12"
																},
																"nativeSrc": "19915:39:12",
																"nodeType": "YulFunctionCall",
																"src": "19915:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "19895:16:12",
																	"nodeType": "YulTypedName",
																	"src": "19895:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19970:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19970:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "20010:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "20010:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "20004:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "20004:5:12"
																				},
																				"nativeSrc": "20004:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "20004:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "20017:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20017:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "20049:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "20049:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "20025:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "20025:23:12"
																				},
																				"nativeSrc": "20025:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "20025:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "19976:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "19976:27:12"
																		},
																		"nativeSrc": "19976:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19976:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "19963:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19963:6:12"
																},
																"nativeSrc": "19963:105:12",
																"nodeType": "YulFunctionCall",
																"src": "19963:105:12"
															},
															"nativeSrc": "19963:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "19963:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "19805:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19858:4:12",
														"nodeType": "YulTypedName",
														"src": "19858:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "19864:6:12",
														"nodeType": "YulTypedName",
														"src": "19864:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "19872:7:12",
														"nodeType": "YulTypedName",
														"src": "19872:7:12",
														"type": ""
													}
												],
												"src": "19805:269:12"
											},
											{
												"body": {
													"nativeSrc": "20129:24:12",
													"nodeType": "YulBlock",
													"src": "20129:24:12",
													"statements": [
														{
															"nativeSrc": "20139:8:12",
															"nodeType": "YulAssignment",
															"src": "20139:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "20146:1:12",
																"nodeType": "YulLiteral",
																"src": "20146:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20139:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20139:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "20080:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20125:3:12",
														"nodeType": "YulTypedName",
														"src": "20125:3:12",
														"type": ""
													}
												],
												"src": "20080:73:12"
											},
											{
												"body": {
													"nativeSrc": "20212:136:12",
													"nodeType": "YulBlock",
													"src": "20212:136:12",
													"statements": [
														{
															"nativeSrc": "20222:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "20222:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "20236:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "20236:30:12"
																},
																"nativeSrc": "20236:32:12",
																"nodeType": "YulFunctionCall",
																"src": "20236:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "20226:6:12",
																	"nodeType": "YulTypedName",
																	"src": "20226:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20321:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "20321:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "20327:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20327:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "20335:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20335:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "20277:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20277:43:12"
																},
																"nativeSrc": "20277:65:12",
																"nodeType": "YulFunctionCall",
																"src": "20277:65:12"
															},
															"nativeSrc": "20277:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "20277:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "20159:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20198:4:12",
														"nodeType": "YulTypedName",
														"src": "20198:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "20204:6:12",
														"nodeType": "YulTypedName",
														"src": "20204:6:12",
														"type": ""
													}
												],
												"src": "20159:189:12"
											},
											{
												"body": {
													"nativeSrc": "20404:136:12",
													"nodeType": "YulBlock",
													"src": "20404:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "20471:63:12",
																"nodeType": "YulBlock",
																"src": "20471:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "20515:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "20515:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20522:1:12",
																					"nodeType": "YulLiteral",
																					"src": "20522:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "20485:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "20485:29:12"
																			},
																			"nativeSrc": "20485:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "20485:39:12"
																		},
																		"nativeSrc": "20485:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "20485:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "20424:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "20424:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "20431:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20431:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "20421:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "20421:2:12"
																},
																"nativeSrc": "20421:14:12",
																"nodeType": "YulFunctionCall",
																"src": "20421:14:12"
															},
															"nativeSrc": "20414:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "20436:26:12",
																"nodeType": "YulBlock",
																"src": "20436:26:12",
																"statements": [
																	{
																		"nativeSrc": "20438:22:12",
																		"nodeType": "YulAssignment",
																		"src": "20438:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "20451:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "20451:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20458:1:12",
																					"nodeType": "YulLiteral",
																					"src": "20458:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20447:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "20447:3:12"
																			},
																			"nativeSrc": "20447:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "20447:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "20438:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "20438:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "20418:2:12",
																"nodeType": "YulBlock",
																"src": "20418:2:12",
																"statements": []
															},
															"src": "20414:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "20354:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "20392:5:12",
														"nodeType": "YulTypedName",
														"src": "20392:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20399:3:12",
														"nodeType": "YulTypedName",
														"src": "20399:3:12",
														"type": ""
													}
												],
												"src": "20354:186:12"
											},
											{
												"body": {
													"nativeSrc": "20625:464:12",
													"nodeType": "YulBlock",
													"src": "20625:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "20651:431:12",
																"nodeType": "YulBlock",
																"src": "20651:431:12",
																"statements": [
																	{
																		"nativeSrc": "20665:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20665:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "20713:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "20713:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "20681:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "20681:31:12"
																			},
																			"nativeSrc": "20681:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "20681:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "20669:8:12",
																				"nodeType": "YulTypedName",
																				"src": "20669:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "20732:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20732:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "20755:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "20755:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "20783:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "20783:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "20765:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "20765:17:12"
																					},
																					"nativeSrc": "20765:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "20765:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20751:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "20751:3:12"
																			},
																			"nativeSrc": "20751:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "20751:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "20736:11:12",
																				"nodeType": "YulTypedName",
																				"src": "20736:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "20952:27:12",
																			"nodeType": "YulBlock",
																			"src": "20952:27:12",
																			"statements": [
																				{
																					"nativeSrc": "20954:23:12",
																					"nodeType": "YulAssignment",
																					"src": "20954:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "20969:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "20969:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "20954:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "20954:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "20936:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "20936:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20948:2:12",
																					"nodeType": "YulLiteral",
																					"src": "20948:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "20933:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "20933:2:12"
																			},
																			"nativeSrc": "20933:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "20933:18:12"
																		},
																		"nativeSrc": "20930:49:12",
																		"nodeType": "YulIf",
																		"src": "20930:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "21021:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "21021:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "21038:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "21038:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "21066:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "21066:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "21048:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "21048:17:12"
																							},
																							"nativeSrc": "21048:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "21048:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "21034:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "21034:3:12"
																					},
																					"nativeSrc": "21034:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "21034:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "20992:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "20992:28:12"
																			},
																			"nativeSrc": "20992:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "20992:80:12"
																		},
																		"nativeSrc": "20992:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "20992:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "20642:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20642:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20647:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20647:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20639:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "20639:2:12"
																},
																"nativeSrc": "20639:11:12",
																"nodeType": "YulFunctionCall",
																"src": "20639:11:12"
															},
															"nativeSrc": "20636:446:12",
															"nodeType": "YulIf",
															"src": "20636:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "20546:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "20601:5:12",
														"nodeType": "YulTypedName",
														"src": "20601:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "20608:3:12",
														"nodeType": "YulTypedName",
														"src": "20608:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "20613:10:12",
														"nodeType": "YulTypedName",
														"src": "20613:10:12",
														"type": ""
													}
												],
												"src": "20546:543:12"
											},
											{
												"body": {
													"nativeSrc": "21158:54:12",
													"nodeType": "YulBlock",
													"src": "21158:54:12",
													"statements": [
														{
															"nativeSrc": "21168:37:12",
															"nodeType": "YulAssignment",
															"src": "21168:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "21193:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21193:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21199:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "21199:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "21189:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21189:3:12"
																},
																"nativeSrc": "21189:16:12",
																"nodeType": "YulFunctionCall",
																"src": "21189:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "21168:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "21168:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "21095:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "21133:4:12",
														"nodeType": "YulTypedName",
														"src": "21133:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "21139:5:12",
														"nodeType": "YulTypedName",
														"src": "21139:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "21149:8:12",
														"nodeType": "YulTypedName",
														"src": "21149:8:12",
														"type": ""
													}
												],
												"src": "21095:117:12"
											},
											{
												"body": {
													"nativeSrc": "21269:118:12",
													"nodeType": "YulBlock",
													"src": "21269:118:12",
													"statements": [
														{
															"nativeSrc": "21279:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "21279:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21328:1:12",
																						"nodeType": "YulLiteral",
																						"src": "21328:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "21331:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "21331:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "21324:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "21324:3:12"
																				},
																				"nativeSrc": "21324:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "21324:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "21343:1:12",
																						"nodeType": "YulLiteral",
																						"src": "21343:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "21339:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "21339:3:12"
																				},
																				"nativeSrc": "21339:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "21339:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "21295:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "21295:28:12"
																		},
																		"nativeSrc": "21295:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21295:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "21291:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21291:3:12"
																},
																"nativeSrc": "21291:56:12",
																"nodeType": "YulFunctionCall",
																"src": "21291:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "21283:4:12",
																	"nodeType": "YulTypedName",
																	"src": "21283:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21356:25:12",
															"nodeType": "YulAssignment",
															"src": "21356:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21370:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21370:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "21376:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21376:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21366:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21366:3:12"
																},
																"nativeSrc": "21366:15:12",
																"nodeType": "YulFunctionCall",
																"src": "21366:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21356:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21356:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "21218:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21246:4:12",
														"nodeType": "YulTypedName",
														"src": "21246:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "21252:5:12",
														"nodeType": "YulTypedName",
														"src": "21252:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21262:6:12",
														"nodeType": "YulTypedName",
														"src": "21262:6:12",
														"type": ""
													}
												],
												"src": "21218:169:12"
											},
											{
												"body": {
													"nativeSrc": "21473:214:12",
													"nodeType": "YulBlock",
													"src": "21473:214:12",
													"statements": [
														{
															"nativeSrc": "21606:37:12",
															"nodeType": "YulAssignment",
															"src": "21606:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21633:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21633:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "21639:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21639:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "21614:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "21614:18:12"
																},
																"nativeSrc": "21614:29:12",
																"nodeType": "YulFunctionCall",
																"src": "21614:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21606:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21606:4:12"
																}
															]
														},
														{
															"nativeSrc": "21652:29:12",
															"nodeType": "YulAssignment",
															"src": "21652:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21663:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21663:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "21673:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21673:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "21676:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "21676:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "21669:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21669:3:12"
																		},
																		"nativeSrc": "21669:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21669:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21660:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "21660:2:12"
																},
																"nativeSrc": "21660:21:12",
																"nodeType": "YulFunctionCall",
																"src": "21660:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "21652:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21652:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "21392:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21454:4:12",
														"nodeType": "YulTypedName",
														"src": "21454:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "21460:3:12",
														"nodeType": "YulTypedName",
														"src": "21460:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "21468:4:12",
														"nodeType": "YulTypedName",
														"src": "21468:4:12",
														"type": ""
													}
												],
												"src": "21392:295:12"
											},
											{
												"body": {
													"nativeSrc": "21784:1303:12",
													"nodeType": "YulBlock",
													"src": "21784:1303:12",
													"statements": [
														{
															"nativeSrc": "21795:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "21795:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "21842:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21842:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "21809:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "21809:32:12"
																},
																"nativeSrc": "21809:37:12",
																"nodeType": "YulFunctionCall",
																"src": "21809:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "21799:6:12",
																	"nodeType": "YulTypedName",
																	"src": "21799:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21931:22:12",
																"nodeType": "YulBlock",
																"src": "21931:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "21933:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "21933:16:12"
																			},
																			"nativeSrc": "21933:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "21933:18:12"
																		},
																		"nativeSrc": "21933:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "21933:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "21903:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21903:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21911:18:12",
																		"nodeType": "YulLiteral",
																		"src": "21911:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21900:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "21900:2:12"
																},
																"nativeSrc": "21900:30:12",
																"nodeType": "YulFunctionCall",
																"src": "21900:30:12"
															},
															"nativeSrc": "21897:56:12",
															"nodeType": "YulIf",
															"src": "21897:56:12"
														},
														{
															"nativeSrc": "21963:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "21963:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "22009:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22009:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "22003:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "22003:5:12"
																		},
																		"nativeSrc": "22003:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22003:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "21977:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "21977:25:12"
																},
																"nativeSrc": "21977:38:12",
																"nodeType": "YulFunctionCall",
																"src": "21977:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "21967:6:12",
																	"nodeType": "YulTypedName",
																	"src": "21967:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22108:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22108:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "22114:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22114:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "22122:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22122:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "22062:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "22062:45:12"
																},
																"nativeSrc": "22062:67:12",
																"nodeType": "YulFunctionCall",
																"src": "22062:67:12"
															},
															"nativeSrc": "22062:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "22062:67:12"
														},
														{
															"nativeSrc": "22139:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "22139:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "22156:1:12",
																"nodeType": "YulLiteral",
																"src": "22156:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "22143:9:12",
																	"nodeType": "YulTypedName",
																	"src": "22143:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22167:17:12",
															"nodeType": "YulAssignment",
															"src": "22167:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "22180:4:12",
																"nodeType": "YulLiteral",
																"src": "22180:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "22167:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "22167:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "22231:611:12",
																		"nodeType": "YulBlock",
																		"src": "22231:611:12",
																		"statements": [
																			{
																				"nativeSrc": "22245:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22245:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "22264:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "22264:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "22276:4:12",
																									"nodeType": "YulLiteral",
																									"src": "22276:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "22272:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "22272:3:12"
																							},
																							"nativeSrc": "22272:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "22272:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "22260:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "22260:3:12"
																					},
																					"nativeSrc": "22260:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "22260:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "22249:7:12",
																						"nodeType": "YulTypedName",
																						"src": "22249:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22296:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22296:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22342:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "22342:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "22310:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "22310:31:12"
																					},
																					"nativeSrc": "22310:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "22310:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "22300:6:12",
																						"nodeType": "YulTypedName",
																						"src": "22300:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22360:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22360:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22369:1:12",
																					"nodeType": "YulLiteral",
																					"src": "22369:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "22364:1:12",
																						"nodeType": "YulTypedName",
																						"src": "22364:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22428:163:12",
																					"nodeType": "YulBlock",
																					"src": "22428:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22453:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "22453:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "22471:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "22471:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "22476:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "22476:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "22467:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "22467:3:12"
																												},
																												"nativeSrc": "22467:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "22467:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "22461:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "22461:5:12"
																										},
																										"nativeSrc": "22461:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "22461:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "22446:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "22446:6:12"
																								},
																								"nativeSrc": "22446:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "22446:42:12"
																							},
																							"nativeSrc": "22446:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "22446:42:12"
																						},
																						{
																							"nativeSrc": "22505:24:12",
																							"nodeType": "YulAssignment",
																							"src": "22505:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22519:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "22519:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22527:1:12",
																										"nodeType": "YulLiteral",
																										"src": "22527:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22515:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "22515:3:12"
																								},
																								"nativeSrc": "22515:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "22515:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "22505:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "22505:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "22546:31:12",
																							"nodeType": "YulAssignment",
																							"src": "22546:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "22563:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "22563:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22574:2:12",
																										"nodeType": "YulLiteral",
																										"src": "22574:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22559:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "22559:3:12"
																								},
																								"nativeSrc": "22559:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "22559:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "22546:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "22546:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "22394:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "22394:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "22397:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "22397:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22391:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "22391:2:12"
																					},
																					"nativeSrc": "22391:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "22391:14:12"
																				},
																				"nativeSrc": "22383:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "22406:21:12",
																					"nodeType": "YulBlock",
																					"src": "22406:21:12",
																					"statements": [
																						{
																							"nativeSrc": "22408:17:12",
																							"nodeType": "YulAssignment",
																							"src": "22408:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "22417:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "22417:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "22420:4:12",
																										"nodeType": "YulLiteral",
																										"src": "22420:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "22413:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "22413:3:12"
																								},
																								"nativeSrc": "22413:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "22413:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "22408:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "22408:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "22387:3:12",
																					"nodeType": "YulBlock",
																					"src": "22387:3:12",
																					"statements": []
																				},
																				"src": "22383:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "22627:156:12",
																					"nodeType": "YulBlock",
																					"src": "22627:156:12",
																					"statements": [
																						{
																							"nativeSrc": "22645:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "22645:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "22672:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "22672:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "22677:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "22677:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "22668:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "22668:3:12"
																										},
																										"nativeSrc": "22668:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "22668:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "22662:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "22662:5:12"
																								},
																								"nativeSrc": "22662:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "22662:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "22649:9:12",
																									"nodeType": "YulTypedName",
																									"src": "22649:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22712:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "22712:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "22739:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "22739:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "22754:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "22754:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "22762:4:12",
																														"nodeType": "YulLiteral",
																														"src": "22762:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "22750:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "22750:3:12"
																												},
																												"nativeSrc": "22750:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "22750:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "22720:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "22720:18:12"
																										},
																										"nativeSrc": "22720:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "22720:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "22705:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "22705:6:12"
																								},
																								"nativeSrc": "22705:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "22705:64:12"
																							},
																							"nativeSrc": "22705:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "22705:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "22610:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "22610:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "22619:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "22619:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22607:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "22607:2:12"
																					},
																					"nativeSrc": "22607:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "22607:19:12"
																				},
																				"nativeSrc": "22604:179:12",
																				"nodeType": "YulIf",
																				"src": "22604:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22803:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "22803:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "22817:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "22817:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "22825:1:12",
																											"nodeType": "YulLiteral",
																											"src": "22825:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "22813:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "22813:3:12"
																									},
																									"nativeSrc": "22813:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "22813:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "22829:1:12",
																									"nodeType": "YulLiteral",
																									"src": "22829:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "22809:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "22809:3:12"
																							},
																							"nativeSrc": "22809:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "22809:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "22796:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "22796:6:12"
																					},
																					"nativeSrc": "22796:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "22796:36:12"
																				},
																				"nativeSrc": "22796:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "22796:36:12"
																			}
																		]
																	},
																	"nativeSrc": "22224:618:12",
																	"nodeType": "YulCase",
																	"src": "22224:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22229:1:12",
																		"nodeType": "YulLiteral",
																		"src": "22229:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "22859:222:12",
																		"nodeType": "YulBlock",
																		"src": "22859:222:12",
																		"statements": [
																			{
																				"nativeSrc": "22873:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22873:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22886:1:12",
																					"nodeType": "YulLiteral",
																					"src": "22886:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "22877:5:12",
																						"nodeType": "YulTypedName",
																						"src": "22877:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22910:67:12",
																					"nodeType": "YulBlock",
																					"src": "22910:67:12",
																					"statements": [
																						{
																							"nativeSrc": "22928:35:12",
																							"nodeType": "YulAssignment",
																							"src": "22928:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "22947:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "22947:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "22952:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "22952:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "22943:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "22943:3:12"
																										},
																										"nativeSrc": "22943:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "22943:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "22937:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "22937:5:12"
																								},
																								"nativeSrc": "22937:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "22937:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "22928:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "22928:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "22903:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "22903:6:12"
																				},
																				"nativeSrc": "22900:77:12",
																				"nodeType": "YulIf",
																				"src": "22900:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22997:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "22997:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "23056:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "23056:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "23063:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "23063:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "23003:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "23003:52:12"
																							},
																							"nativeSrc": "23003:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "23003:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "22990:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "22990:6:12"
																					},
																					"nativeSrc": "22990:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "22990:81:12"
																				},
																				"nativeSrc": "22990:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "22990:81:12"
																			}
																		]
																	},
																	"nativeSrc": "22851:230:12",
																	"nodeType": "YulCase",
																	"src": "22851:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "22204:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22204:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22212:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22212:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22201:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "22201:2:12"
																},
																"nativeSrc": "22201:14:12",
																"nodeType": "YulFunctionCall",
																"src": "22201:14:12"
															},
															"nativeSrc": "22194:887:12",
															"nodeType": "YulSwitch",
															"src": "22194:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "21692:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21773:4:12",
														"nodeType": "YulTypedName",
														"src": "21773:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "21779:3:12",
														"nodeType": "YulTypedName",
														"src": "21779:3:12",
														"type": ""
													}
												],
												"src": "21692:1395:12"
											},
											{
												"body": {
													"nativeSrc": "23207:34:12",
													"nodeType": "YulBlock",
													"src": "23207:34:12",
													"statements": [
														{
															"nativeSrc": "23217:18:12",
															"nodeType": "YulAssignment",
															"src": "23217:18:12",
															"value": {
																"name": "pos",
																"nativeSrc": "23232:3:12",
																"nodeType": "YulIdentifier",
																"src": "23232:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "23217:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "23217:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "23093:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23179:3:12",
														"nodeType": "YulTypedName",
														"src": "23179:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "23184:6:12",
														"nodeType": "YulTypedName",
														"src": "23184:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "23195:11:12",
														"nodeType": "YulTypedName",
														"src": "23195:11:12",
														"type": ""
													}
												],
												"src": "23093:148:12"
											},
											{
												"body": {
													"nativeSrc": "23357:280:12",
													"nodeType": "YulBlock",
													"src": "23357:280:12",
													"statements": [
														{
															"nativeSrc": "23367:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "23367:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23414:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "23414:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "23381:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "23381:32:12"
																},
																"nativeSrc": "23381:39:12",
																"nodeType": "YulFunctionCall",
																"src": "23381:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "23371:6:12",
																	"nodeType": "YulTypedName",
																	"src": "23371:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23429:96:12",
															"nodeType": "YulAssignment",
															"src": "23429:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23513:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23513:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23518:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23518:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "23436:76:12",
																	"nodeType": "YulIdentifier",
																	"src": "23436:76:12"
																},
																"nativeSrc": "23436:89:12",
																"nodeType": "YulFunctionCall",
																"src": "23436:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23429:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23429:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23573:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "23573:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23580:4:12",
																				"nodeType": "YulLiteral",
																				"src": "23580:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23569:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23569:3:12"
																		},
																		"nativeSrc": "23569:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23569:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "23587:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23587:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23592:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23592:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "23534:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "23534:34:12"
																},
																"nativeSrc": "23534:65:12",
																"nodeType": "YulFunctionCall",
																"src": "23534:65:12"
															},
															"nativeSrc": "23534:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "23534:65:12"
														},
														{
															"nativeSrc": "23608:23:12",
															"nodeType": "YulAssignment",
															"src": "23608:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23619:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23619:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "23624:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23624:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23615:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23615:3:12"
																},
																"nativeSrc": "23615:16:12",
																"nodeType": "YulFunctionCall",
																"src": "23615:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23608:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23608:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "23247:390:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23338:5:12",
														"nodeType": "YulTypedName",
														"src": "23338:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23345:3:12",
														"nodeType": "YulTypedName",
														"src": "23345:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23353:3:12",
														"nodeType": "YulTypedName",
														"src": "23353:3:12",
														"type": ""
													}
												],
												"src": "23247:390:12"
											},
											{
												"body": {
													"nativeSrc": "23827:251:12",
													"nodeType": "YulBlock",
													"src": "23827:251:12",
													"statements": [
														{
															"nativeSrc": "23838:102:12",
															"nodeType": "YulAssignment",
															"src": "23838:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23927:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23927:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "23936:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23936:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "23845:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "23845:81:12"
																},
																"nativeSrc": "23845:95:12",
																"nodeType": "YulFunctionCall",
																"src": "23845:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23838:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23838:3:12"
																}
															]
														},
														{
															"nativeSrc": "23950:102:12",
															"nodeType": "YulAssignment",
															"src": "23950:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24039:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "24039:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24048:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24048:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "23957:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "23957:81:12"
																},
																"nativeSrc": "23957:95:12",
																"nodeType": "YulFunctionCall",
																"src": "23957:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23950:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23950:3:12"
																}
															]
														},
														{
															"nativeSrc": "24062:10:12",
															"nodeType": "YulAssignment",
															"src": "24062:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "24069:3:12",
																"nodeType": "YulIdentifier",
																"src": "24069:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24062:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24062:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "23643:435:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23798:3:12",
														"nodeType": "YulTypedName",
														"src": "23798:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23804:6:12",
														"nodeType": "YulTypedName",
														"src": "23804:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23812:6:12",
														"nodeType": "YulTypedName",
														"src": "23812:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23823:3:12",
														"nodeType": "YulTypedName",
														"src": "23823:3:12",
														"type": ""
													}
												],
												"src": "23643:435:12"
											},
											{
												"body": {
													"nativeSrc": "24142:40:12",
													"nodeType": "YulBlock",
													"src": "24142:40:12",
													"statements": [
														{
															"nativeSrc": "24153:22:12",
															"nodeType": "YulAssignment",
															"src": "24153:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24169:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "24169:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24163:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "24163:5:12"
																},
																"nativeSrc": "24163:12:12",
																"nodeType": "YulFunctionCall",
																"src": "24163:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "24153:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24153:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "24084:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24125:5:12",
														"nodeType": "YulTypedName",
														"src": "24125:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "24135:6:12",
														"nodeType": "YulTypedName",
														"src": "24135:6:12",
														"type": ""
													}
												],
												"src": "24084:98:12"
											},
											{
												"body": {
													"nativeSrc": "24283:73:12",
													"nodeType": "YulBlock",
													"src": "24283:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24300:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24300:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24305:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "24305:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24293:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24293:6:12"
																},
																"nativeSrc": "24293:19:12",
																"nodeType": "YulFunctionCall",
																"src": "24293:19:12"
															},
															"nativeSrc": "24293:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "24293:19:12"
														},
														{
															"nativeSrc": "24321:29:12",
															"nodeType": "YulAssignment",
															"src": "24321:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24340:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24340:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24345:4:12",
																		"nodeType": "YulLiteral",
																		"src": "24345:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24336:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24336:3:12"
																},
																"nativeSrc": "24336:14:12",
																"nodeType": "YulFunctionCall",
																"src": "24336:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "24321:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "24321:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "24188:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24255:3:12",
														"nodeType": "YulTypedName",
														"src": "24255:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "24260:6:12",
														"nodeType": "YulTypedName",
														"src": "24260:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "24271:11:12",
														"nodeType": "YulTypedName",
														"src": "24271:11:12",
														"type": ""
													}
												],
												"src": "24188:168:12"
											},
											{
												"body": {
													"nativeSrc": "24452:283:12",
													"nodeType": "YulBlock",
													"src": "24452:283:12",
													"statements": [
														{
															"nativeSrc": "24462:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "24462:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24508:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "24508:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "24476:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "24476:31:12"
																},
																"nativeSrc": "24476:38:12",
																"nodeType": "YulFunctionCall",
																"src": "24476:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "24466:6:12",
																	"nodeType": "YulTypedName",
																	"src": "24466:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24523:77:12",
															"nodeType": "YulAssignment",
															"src": "24523:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24588:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24588:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24593:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "24593:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "24530:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "24530:57:12"
																},
																"nativeSrc": "24530:70:12",
																"nodeType": "YulFunctionCall",
																"src": "24530:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24523:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24523:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24648:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "24648:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24655:4:12",
																				"nodeType": "YulLiteral",
																				"src": "24655:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24644:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24644:3:12"
																		},
																		"nativeSrc": "24644:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24644:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24662:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24662:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24667:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "24667:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "24609:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "24609:34:12"
																},
																"nativeSrc": "24609:65:12",
																"nodeType": "YulFunctionCall",
																"src": "24609:65:12"
															},
															"nativeSrc": "24609:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "24609:65:12"
														},
														{
															"nativeSrc": "24683:46:12",
															"nodeType": "YulAssignment",
															"src": "24683:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24694:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24694:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "24721:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "24721:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "24699:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "24699:21:12"
																		},
																		"nativeSrc": "24699:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24699:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24690:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24690:3:12"
																},
																"nativeSrc": "24690:39:12",
																"nodeType": "YulFunctionCall",
																"src": "24690:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24683:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24683:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "24362:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24433:5:12",
														"nodeType": "YulTypedName",
														"src": "24433:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24440:3:12",
														"nodeType": "YulTypedName",
														"src": "24440:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24448:3:12",
														"nodeType": "YulTypedName",
														"src": "24448:3:12",
														"type": ""
													}
												],
												"src": "24362:373:12"
											},
											{
												"body": {
													"nativeSrc": "24941:440:12",
													"nodeType": "YulBlock",
													"src": "24941:440:12",
													"statements": [
														{
															"nativeSrc": "24951:27:12",
															"nodeType": "YulAssignment",
															"src": "24951:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24963:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "24963:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24974:3:12",
																		"nodeType": "YulLiteral",
																		"src": "24974:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24959:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24959:3:12"
																},
																"nativeSrc": "24959:19:12",
																"nodeType": "YulFunctionCall",
																"src": "24959:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24951:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24951:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25032:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25032:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25045:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25045:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25056:1:12",
																				"nodeType": "YulLiteral",
																				"src": "25056:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25041:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25041:3:12"
																		},
																		"nativeSrc": "25041:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25041:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24988:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "24988:43:12"
																},
																"nativeSrc": "24988:71:12",
																"nodeType": "YulFunctionCall",
																"src": "24988:71:12"
															},
															"nativeSrc": "24988:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "24988:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25113:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25113:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25126:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25126:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25137:2:12",
																				"nodeType": "YulLiteral",
																				"src": "25137:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25122:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25122:3:12"
																		},
																		"nativeSrc": "25122:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25122:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25069:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "25069:43:12"
																},
																"nativeSrc": "25069:72:12",
																"nodeType": "YulFunctionCall",
																"src": "25069:72:12"
															},
															"nativeSrc": "25069:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "25069:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25195:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25195:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25208:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25208:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25219:2:12",
																				"nodeType": "YulLiteral",
																				"src": "25219:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25204:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25204:3:12"
																		},
																		"nativeSrc": "25204:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25204:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25151:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "25151:43:12"
																},
																"nativeSrc": "25151:72:12",
																"nodeType": "YulFunctionCall",
																"src": "25151:72:12"
															},
															"nativeSrc": "25151:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "25151:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25244:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25244:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25255:2:12",
																				"nodeType": "YulLiteral",
																				"src": "25255:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25240:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25240:3:12"
																		},
																		"nativeSrc": "25240:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25240:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25264:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "25264:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25270:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25270:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25260:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25260:3:12"
																		},
																		"nativeSrc": "25260:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25260:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25233:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25233:6:12"
																},
																"nativeSrc": "25233:48:12",
																"nodeType": "YulFunctionCall",
																"src": "25233:48:12"
															},
															"nativeSrc": "25233:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "25233:48:12"
														},
														{
															"nativeSrc": "25290:84:12",
															"nodeType": "YulAssignment",
															"src": "25290:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "25360:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25360:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "25369:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "25369:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "25298:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "25298:61:12"
																},
																"nativeSrc": "25298:76:12",
																"nodeType": "YulFunctionCall",
																"src": "25298:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25290:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25290:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "24741:640:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24889:9:12",
														"nodeType": "YulTypedName",
														"src": "24889:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "24901:6:12",
														"nodeType": "YulTypedName",
														"src": "24901:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24909:6:12",
														"nodeType": "YulTypedName",
														"src": "24909:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24917:6:12",
														"nodeType": "YulTypedName",
														"src": "24917:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24925:6:12",
														"nodeType": "YulTypedName",
														"src": "24925:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24936:4:12",
														"nodeType": "YulTypedName",
														"src": "24936:4:12",
														"type": ""
													}
												],
												"src": "24741:640:12"
											},
											{
												"body": {
													"nativeSrc": "25449:79:12",
													"nodeType": "YulBlock",
													"src": "25449:79:12",
													"statements": [
														{
															"nativeSrc": "25459:22:12",
															"nodeType": "YulAssignment",
															"src": "25459:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "25474:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25474:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "25468:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "25468:5:12"
																},
																"nativeSrc": "25468:13:12",
																"nodeType": "YulFunctionCall",
																"src": "25468:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "25459:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "25459:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25516:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "25516:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "25490:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "25490:25:12"
																},
																"nativeSrc": "25490:32:12",
																"nodeType": "YulFunctionCall",
																"src": "25490:32:12"
															},
															"nativeSrc": "25490:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "25490:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "25387:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "25427:6:12",
														"nodeType": "YulTypedName",
														"src": "25427:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "25435:3:12",
														"nodeType": "YulTypedName",
														"src": "25435:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "25443:5:12",
														"nodeType": "YulTypedName",
														"src": "25443:5:12",
														"type": ""
													}
												],
												"src": "25387:141:12"
											},
											{
												"body": {
													"nativeSrc": "25610:273:12",
													"nodeType": "YulBlock",
													"src": "25610:273:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "25656:83:12",
																"nodeType": "YulBlock",
																"src": "25656:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "25658:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "25658:77:12"
																			},
																			"nativeSrc": "25658:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "25658:79:12"
																		},
																		"nativeSrc": "25658:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "25658:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25631:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "25631:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25640:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25640:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25627:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25627:3:12"
																		},
																		"nativeSrc": "25627:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25627:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25652:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25652:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "25623:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25623:3:12"
																},
																"nativeSrc": "25623:32:12",
																"nodeType": "YulFunctionCall",
																"src": "25623:32:12"
															},
															"nativeSrc": "25620:119:12",
															"nodeType": "YulIf",
															"src": "25620:119:12"
														},
														{
															"nativeSrc": "25749:127:12",
															"nodeType": "YulBlock",
															"src": "25749:127:12",
															"statements": [
																{
																	"nativeSrc": "25764:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "25764:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25778:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25778:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "25768:6:12",
																			"nodeType": "YulTypedName",
																			"src": "25768:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "25793:73:12",
																	"nodeType": "YulAssignment",
																	"src": "25793:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "25838:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "25838:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "25849:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "25849:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25834:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "25834:3:12"
																				},
																				"nativeSrc": "25834:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "25834:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "25858:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "25858:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "25803:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "25803:30:12"
																		},
																		"nativeSrc": "25803:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25803:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "25793:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "25793:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "25534:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25580:9:12",
														"nodeType": "YulTypedName",
														"src": "25580:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "25591:7:12",
														"nodeType": "YulTypedName",
														"src": "25591:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "25603:6:12",
														"nodeType": "YulTypedName",
														"src": "25603:6:12",
														"type": ""
													}
												],
												"src": "25534:349:12"
											},
											{
												"body": {
													"nativeSrc": "25917:152:12",
													"nodeType": "YulBlock",
													"src": "25917:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25934:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25934:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25937:77:12",
																		"nodeType": "YulLiteral",
																		"src": "25937:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25927:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25927:6:12"
																},
																"nativeSrc": "25927:88:12",
																"nodeType": "YulFunctionCall",
																"src": "25927:88:12"
															},
															"nativeSrc": "25927:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "25927:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26031:1:12",
																		"nodeType": "YulLiteral",
																		"src": "26031:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26034:4:12",
																		"nodeType": "YulLiteral",
																		"src": "26034:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26024:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26024:6:12"
																},
																"nativeSrc": "26024:15:12",
																"nodeType": "YulFunctionCall",
																"src": "26024:15:12"
															},
															"nativeSrc": "26024:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "26024:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26055:1:12",
																		"nodeType": "YulLiteral",
																		"src": "26055:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26058:4:12",
																		"nodeType": "YulLiteral",
																		"src": "26058:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "26048:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26048:6:12"
																},
																"nativeSrc": "26048:15:12",
																"nodeType": "YulFunctionCall",
																"src": "26048:15:12"
															},
															"nativeSrc": "26048:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "26048:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "25889:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "25889:180:12"
											},
											{
												"body": {
													"nativeSrc": "26201:206:12",
													"nodeType": "YulBlock",
													"src": "26201:206:12",
													"statements": [
														{
															"nativeSrc": "26211:26:12",
															"nodeType": "YulAssignment",
															"src": "26211:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26223:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "26223:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26234:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26234:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26219:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26219:3:12"
																},
																"nativeSrc": "26219:18:12",
																"nodeType": "YulFunctionCall",
																"src": "26219:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26211:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26211:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26291:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26291:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26304:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26304:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26315:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26315:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26300:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26300:3:12"
																		},
																		"nativeSrc": "26300:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26300:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26247:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "26247:43:12"
																},
																"nativeSrc": "26247:71:12",
																"nodeType": "YulFunctionCall",
																"src": "26247:71:12"
															},
															"nativeSrc": "26247:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "26247:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26372:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26372:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26385:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26385:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26396:2:12",
																				"nodeType": "YulLiteral",
																				"src": "26396:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26381:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26381:3:12"
																		},
																		"nativeSrc": "26381:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26381:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26328:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "26328:43:12"
																},
																"nativeSrc": "26328:72:12",
																"nodeType": "YulFunctionCall",
																"src": "26328:72:12"
															},
															"nativeSrc": "26328:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "26328:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "26075:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26165:9:12",
														"nodeType": "YulTypedName",
														"src": "26165:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26177:6:12",
														"nodeType": "YulTypedName",
														"src": "26177:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26185:6:12",
														"nodeType": "YulTypedName",
														"src": "26185:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26196:4:12",
														"nodeType": "YulTypedName",
														"src": "26196:4:12",
														"type": ""
													}
												],
												"src": "26075:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admins can execute this fun\")\n\n        mstore(add(memPtr, 32), \"ction\")\n\n    }\n\n    function abi_encode_t_stringliteral_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac(memPtr) {\n\n        mstore(add(memPtr, 0), \"You haven't voted yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Candidate not registered\")\n\n    }\n\n    function abi_encode_t_stringliteral_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address has already voted\")\n\n    }\n\n    function abi_encode_t_stringliteral_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient voting value\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610180575f3560e01c806370a08231116100d05780639a594f0611610089578063b88d4fde11610063578063b88d4fde14610592578063c87b56dd146105ba578063d8bff5a5146105f6578063e985e9c51461063257610180565b80639a594f061461051a578063a22cb46514610542578063b3849e2a1461056a57610180565b806370a08231146103ea57806375794a3c1461042657806378d66c39146104505780638a7c3a321461048c5780638edfc059146104c857806395d89b41146104f057610180565b806323b872dd1161013d578063429b62e511610117578063429b62e51461032c5780636352211e1461036857806363f67b54146103a45780636dd7d8ea146103ce57610180565b806323b872dd146102b25780633219ac2a146102da57806342842e0e1461030457610180565b806301ffc9a71461018457806306fdde03146101c0578063081812fc146101ea578063095ea7b31461022657806312ee1b0b1461024e57806323202fe314610276575b5f80fd5b34801561018f575f80fd5b506101aa60048036038101906101a591906123cf565b61066e565b6040516101b79190612414565b60405180910390f35b3480156101cb575f80fd5b506101d461074f565b6040516101e191906124b7565b60405180910390f35b3480156101f5575f80fd5b50610210600480360381019061020b919061250a565b6107de565b60405161021d9190612574565b60405180910390f35b348015610231575f80fd5b5061024c600480360381019061024791906125b7565b6107f9565b005b348015610259575f80fd5b50610274600480360381019061026f91906125f5565b61080f565b005b348015610281575f80fd5b5061029c600480360381019061029791906125f5565b610925565b6040516102a991906124b7565b60405180910390f35b3480156102bd575f80fd5b506102d860048036038101906102d39190612620565b6109c0565b005b3480156102e5575f80fd5b506102ee610abf565b6040516102fb91906124b7565b60405180910390f35b34801561030f575f80fd5b5061032a60048036038101906103259190612620565b610c63565b005b348015610337575f80fd5b50610352600480360381019061034d91906125f5565b610c82565b60405161035f91906124b7565b60405180910390f35b348015610373575f80fd5b5061038e6004803603810190610389919061250a565b610d1d565b60405161039b9190612574565b60405180910390f35b3480156103af575f80fd5b506103b8610d2e565b6040516103c5919061267f565b60405180910390f35b6103e860048036038101906103e391906125f5565b610d34565b005b3480156103f5575f80fd5b50610410600480360381019061040b91906125f5565b611009565b60405161041d919061267f565b60405180910390f35b348015610431575f80fd5b5061043a6110bf565b604051610447919061267f565b60405180910390f35b34801561045b575f80fd5b50610476600480360381019061047191906125f5565b6110c5565b604051610483919061267f565b60405180910390f35b348015610497575f80fd5b506104b260048036038101906104ad91906125f5565b6110da565b6040516104bf919061267f565b60405180910390f35b3480156104d3575f80fd5b506104ee60048036038101906104e991906127c4565b611120565b005b3480156104fb575f80fd5b506105046111fa565b60405161051191906124b7565b60405180910390f35b348015610525575f80fd5b50610540600480360381019061053b91906127c4565b61128a565b005b34801561054d575f80fd5b5061056860048036038101906105639190612848565b6113a6565b005b348015610575575f80fd5b50610590600480360381019061058b91906125f5565b6113bc565b005b34801561059d575f80fd5b506105b860048036038101906105b39190612924565b611492565b005b3480156105c5575f80fd5b506105e060048036038101906105db919061250a565b6114af565b6040516105ed91906124b7565b60405180910390f35b348015610601575f80fd5b5061061c600480360381019061061791906125f5565b611515565b6040516106299190612574565b60405180910390f35b34801561063d575f80fd5b50610658600480360381019061065391906129a4565b611545565b6040516106659190612414565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061073857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806107485750610747826115d3565b5b9050919050565b60605f805461075d90612a0f565b80601f016020809104026020016040519081016040528092919081815260200182805461078990612a0f565b80156107d45780601f106107ab576101008083540402835291602001916107d4565b820191905f5260205f20905b8154815290600101906020018083116107b757829003601f168201915b5050505050905090565b5f6107e88261163c565b506107f2826116c2565b9050919050565b61080b82826108066116fb565b611702565b5050565b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805461085890612a0f565b90501161089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089190612aaf565b60405180910390fd5b60095f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6108e29190612311565b600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f905550565b6009602052805f5260405f205f91509050805461094190612a0f565b80601f016020809104026020016040519081016040528092919081815260200182805461096d90612a0f565b80156109b85780601f1061098f576101008083540402835291602001916109b8565b820191905f5260205f20905b81548152906001019060200180831161099b57829003601f168201915b505050505081565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a30575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610a279190612574565b60405180910390fd5b5f610a438383610a3e6116fb565b611714565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ab9578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610ab093929190612acd565b60405180910390fd5b50505050565b60605f3390505f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8a90612b4c565b60405180910390fd5b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054610bdc90612a0f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0890612a0f565b8015610c535780601f10610c2a57610100808354040283529160200191610c53565b820191905f5260205f20905b815481529060010190602001808311610c3657829003601f168201915b5050505050905080935050505090565b610c7d83838360405180602001604052805f815250611492565b505050565b6008602052805f5260405f205f915090508054610c9e90612a0f565b80601f0160208091040260200160405190810160405280929190818152602001828054610cca90612a0f565b8015610d155780601f10610cec57610100808354040283529160200191610d15565b820191905f5260205f20905b815481529060010190602001808311610cf857829003601f168201915b505050505081565b5f610d278261163c565b9050919050565b60075481565b5f3390505f3490505f60095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054610d8590612a0f565b905011610dc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbe90612bb4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff16600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8890612c1c565b60405180910390fd5b600754811015610ed6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecd90612c84565b60405180910390fd5b6001600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f209190612ccf565b600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555082600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f6006549050610fec838261191f565b60065f815480929190610ffe90612d02565b919050555050505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361107a575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016110719190612574565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60065481565b600b602052805f5260405f205f915090505481565b5f600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805461116990612a0f565b9050116111ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a290612aaf565b60405180910390fd5b8060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090816111f59190612ee6565b505050565b60606001805461120990612a0f565b80601f016020809104026020016040519081016040528092919081815260200182805461123590612a0f565b80156112805780601f1061125757610100808354040283529160200191611280565b820191905f5260205f20905b81548152906001019060200180831161126357829003601f168201915b5050505050905090565b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080546112d390612a0f565b905011611315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130c90612aaf565b60405180910390fd5b8060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20908161135f9190612ee6565b505f600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b6113b86113b16116fb565b838361193c565b5050565b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805461140590612a0f565b905011611447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143e90612aaf565b60405180910390fd5b60085f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f61148f9190612311565b50565b61149d8484846109c0565b6114a984848484611aa5565b50505050565b60606114ba8261163c565b505f6114c4611c57565b90505f8151116114e25760405180602001604052805f81525061150d565b806114ec84611c6d565b6040516020016114fd929190612fef565b6040516020818303038152906040525b915050919050565b600a602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061164783611d37565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116b957826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116b0919061267f565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b61170f8383836001611d70565b505050565b5f8061171f84611d37565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146117605761175f818486611f2f565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117eb5761179f5f855f80611d70565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461186a57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b611938828260405180602001604052805f815250611ff2565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119ac57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016119a39190612574565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611a989190612414565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611c51578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611ae86116fb565b8685856040518563ffffffff1660e01b8152600401611b0a9493929190613064565b6020604051808303815f875af1925050508015611b4557506040513d601f19601f82011682018060405250810190611b4291906130c2565b60015b611bc6573d805f8114611b73576040519150601f19603f3d011682016040523d82523d5f602084013e611b78565b606091505b505f815103611bbe57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611bb59190612574565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611c4f57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611c469190612574565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f6001611c7b8461200d565b0190505f8167ffffffffffffffff811115611c9957611c986126a0565b5b6040519080825280601f01601f191660200182016040528015611ccb5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611d2c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611d2157611d206130ed565b5b0494505f8503611cd8575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611da857505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611eda575f611db78461163c565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611e2157508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611e345750611e328184611545565b155b15611e7657826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611e6d9190612574565b60405180910390fd5b8115611ed857838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611f3a83838361215e565b611fed575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611fae57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611fa5919061267f565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611fe492919061311a565b60405180910390fd5b505050565b611ffc838361221e565b6120085f848484611aa5565b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612069577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161205f5761205e6130ed565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106120a6576d04ee2d6d415b85acef8100000000838161209c5761209b6130ed565b5b0492506020810190505b662386f26fc1000083106120d557662386f26fc1000083816120cb576120ca6130ed565b5b0492506010810190505b6305f5e10083106120fe576305f5e10083816120f4576120f36130ed565b5b0492506008810190505b6127108310612123576127108381612119576121186130ed565b5b0492506004810190505b60648310612146576064838161213c5761213b6130ed565b5b0492506002810190505b600a8310612155576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561221557508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806121d657506121d58484611545565b5b8061221457508273ffffffffffffffffffffffffffffffffffffffff166121fc836116c2565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361228e575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016122859190612574565b60405180910390fd5b5f61229a83835f611714565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461230c575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016123039190612574565b60405180910390fd5b505050565b50805461231d90612a0f565b5f825580601f1061232e575061234b565b601f0160209004905f5260205f209081019061234a919061234e565b5b50565b5b80821115612365575f815f90555060010161234f565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6123ae8161237a565b81146123b8575f80fd5b50565b5f813590506123c9816123a5565b92915050565b5f602082840312156123e4576123e3612372565b5b5f6123f1848285016123bb565b91505092915050565b5f8115159050919050565b61240e816123fa565b82525050565b5f6020820190506124275f830184612405565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612464578082015181840152602081019050612449565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6124898261242d565b6124938185612437565b93506124a3818560208601612447565b6124ac8161246f565b840191505092915050565b5f6020820190508181035f8301526124cf818461247f565b905092915050565b5f819050919050565b6124e9816124d7565b81146124f3575f80fd5b50565b5f81359050612504816124e0565b92915050565b5f6020828403121561251f5761251e612372565b5b5f61252c848285016124f6565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61255e82612535565b9050919050565b61256e81612554565b82525050565b5f6020820190506125875f830184612565565b92915050565b61259681612554565b81146125a0575f80fd5b50565b5f813590506125b18161258d565b92915050565b5f80604083850312156125cd576125cc612372565b5b5f6125da858286016125a3565b92505060206125eb858286016124f6565b9150509250929050565b5f6020828403121561260a57612609612372565b5b5f612617848285016125a3565b91505092915050565b5f805f6060848603121561263757612636612372565b5b5f612644868287016125a3565b9350506020612655868287016125a3565b9250506040612666868287016124f6565b9150509250925092565b612679816124d7565b82525050565b5f6020820190506126925f830184612670565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6126d68261246f565b810181811067ffffffffffffffff821117156126f5576126f46126a0565b5b80604052505050565b5f612707612369565b905061271382826126cd565b919050565b5f67ffffffffffffffff821115612732576127316126a0565b5b61273b8261246f565b9050602081019050919050565b828183375f83830152505050565b5f61276861276384612718565b6126fe565b9050828152602081018484840111156127845761278361269c565b5b61278f848285612748565b509392505050565b5f82601f8301126127ab576127aa612698565b5b81356127bb848260208601612756565b91505092915050565b5f80604083850312156127da576127d9612372565b5b5f6127e7858286016125a3565b925050602083013567ffffffffffffffff81111561280857612807612376565b5b61281485828601612797565b9150509250929050565b612827816123fa565b8114612831575f80fd5b50565b5f813590506128428161281e565b92915050565b5f806040838503121561285e5761285d612372565b5b5f61286b858286016125a3565b925050602061287c85828601612834565b9150509250929050565b5f67ffffffffffffffff8211156128a05761289f6126a0565b5b6128a98261246f565b9050602081019050919050565b5f6128c86128c384612886565b6126fe565b9050828152602081018484840111156128e4576128e361269c565b5b6128ef848285612748565b509392505050565b5f82601f83011261290b5761290a612698565b5b813561291b8482602086016128b6565b91505092915050565b5f805f806080858703121561293c5761293b612372565b5b5f612949878288016125a3565b945050602061295a878288016125a3565b935050604061296b878288016124f6565b925050606085013567ffffffffffffffff81111561298c5761298b612376565b5b612998878288016128f7565b91505092959194509250565b5f80604083850312156129ba576129b9612372565b5b5f6129c7858286016125a3565b92505060206129d8858286016125a3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612a2657607f821691505b602082108103612a3957612a386129e2565b5b50919050565b7f4f6e6c792061646d696e732063616e206578656375746520746869732066756e5f8201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b5f612a99602583612437565b9150612aa482612a3f565b604082019050919050565b5f6020820190508181035f830152612ac681612a8d565b9050919050565b5f606082019050612ae05f830186612565565b612aed6020830185612670565b612afa6040830184612565565b949350505050565b7f596f7520686176656e277420766f7465642079657400000000000000000000005f82015250565b5f612b36601583612437565b9150612b4182612b02565b602082019050919050565b5f6020820190508181035f830152612b6381612b2a565b9050919050565b7f43616e646964617465206e6f74207265676973746572656400000000000000005f82015250565b5f612b9e601883612437565b9150612ba982612b6a565b602082019050919050565b5f6020820190508181035f830152612bcb81612b92565b9050919050565b7f416464726573732068617320616c726561647920766f746564000000000000005f82015250565b5f612c06601983612437565b9150612c1182612bd2565b602082019050919050565b5f6020820190508181035f830152612c3381612bfa565b9050919050565b7f496e73756666696369656e7420766f74696e672076616c7565000000000000005f82015250565b5f612c6e601983612437565b9150612c7982612c3a565b602082019050919050565b5f6020820190508181035f830152612c9b81612c62565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612cd9826124d7565b9150612ce4836124d7565b9250828201905080821115612cfc57612cfb612ca2565b5b92915050565b5f612d0c826124d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d3e57612d3d612ca2565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612da57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612d6a565b612daf8683612d6a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f612dea612de5612de0846124d7565b612dc7565b6124d7565b9050919050565b5f819050919050565b612e0383612dd0565b612e17612e0f82612df1565b848454612d76565b825550505050565b5f90565b612e2b612e1f565b612e36818484612dfa565b505050565b5b81811015612e5957612e4e5f82612e23565b600181019050612e3c565b5050565b601f821115612e9e57612e6f81612d49565b612e7884612d5b565b81016020851015612e87578190505b612e9b612e9385612d5b565b830182612e3b565b50505b505050565b5f82821c905092915050565b5f612ebe5f1984600802612ea3565b1980831691505092915050565b5f612ed68383612eaf565b9150826002028217905092915050565b612eef8261242d565b67ffffffffffffffff811115612f0857612f076126a0565b5b612f128254612a0f565b612f1d828285612e5d565b5f60209050601f831160018114612f4e575f8415612f3c578287015190505b612f468582612ecb565b865550612fad565b601f198416612f5c86612d49565b5f5b82811015612f8357848901518255600182019150602085019450602081019050612f5e565b86831015612fa05784890151612f9c601f891682612eaf565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f612fc98261242d565b612fd38185612fb5565b9350612fe3818560208601612447565b80840191505092915050565b5f612ffa8285612fbf565b91506130068284612fbf565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61303682613012565b613040818561301c565b9350613050818560208601612447565b6130598161246f565b840191505092915050565b5f6080820190506130775f830187612565565b6130846020830186612565565b6130916040830185612670565b81810360608301526130a3818461302c565b905095945050505050565b5f815190506130bc816123a5565b92915050565b5f602082840312156130d7576130d6612372565b5b5f6130e4848285016130ae565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f60408201905061312d5f830185612565565b61313a6020830184612670565b939250505056fea2646970667358221220eb36b9b20e5dfb0ee1bd8aa27f80d3e26870b945520cf4f1372dbd813442fa0e64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x9A594F06 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xD8BFF5A5 EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x632 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x9A594F06 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xB3849E2A EQ PUSH2 0x56A JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x78D66C39 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x8A7C3A32 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x8EDFC059 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4F0 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x429B62E5 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x63F67B54 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x6DD7D8EA EQ PUSH2 0x3CE JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x3219AC2A EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x304 JUMPI PUSH2 0x180 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x12EE1B0B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x23202FE3 EQ PUSH2 0x276 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x2414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x25B7 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x80F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0xABF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x2620 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0xD34 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43A PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x476 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x27C4 JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x27C4 JUMP JUMPDEST PUSH2 0x128A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x2848 JUMP JUMPDEST PUSH2 0x13A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x590 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x13BC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x2924 JUMP JUMPDEST PUSH2 0x1492 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x24B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x601 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x658 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x653 SWAP2 SWAP1 PUSH2 0x29A4 JUMP JUMPDEST PUSH2 0x1545 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x2414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x738 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x748 JUMPI POP PUSH2 0x747 DUP3 PUSH2 0x15D3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x75D SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x789 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x7E8 DUP3 PUSH2 0x163C JUMP JUMPDEST POP PUSH2 0x7F2 DUP3 PUSH2 0x16C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80B DUP3 DUP3 PUSH2 0x806 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1702 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x858 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP GT PUSH2 0x89A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x891 SWAP1 PUSH2 0x2AAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x941 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x96D SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA30 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xA43 DUP4 DUP4 PUSH2 0xA3E PUSH2 0x16FB JUMP JUMPDEST PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB9 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8A SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xBDC SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC08 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC53 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC2A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC53 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC36 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xC7D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1492 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0xC9E SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCCA SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD15 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCEC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD15 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCF8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xD27 DUP3 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 CALLVALUE SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xD85 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP GT PUSH2 0xDC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBE SWAP1 PUSH2 0x2BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE88 SWAP1 PUSH2 0x2C1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECD SWAP1 PUSH2 0x2C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0xFEC DUP4 DUP3 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFFE SWAP1 PUSH2 0x2D02 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1071 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x1169 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP GT PUSH2 0x11AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A2 SWAP1 PUSH2 0x2AAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1209 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1235 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1280 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1257 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1280 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1263 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x12D3 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130C SWAP1 PUSH2 0x2AAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x135F SWAP2 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST POP PUSH0 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x13B8 PUSH2 0x13B1 PUSH2 0x16FB JUMP JUMPDEST DUP4 DUP4 PUSH2 0x193C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x1405 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST SWAP1 POP GT PUSH2 0x1447 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143E SWAP1 PUSH2 0x2AAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x148F SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x149D DUP5 DUP5 DUP5 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x14A9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1AA5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x14BA DUP3 PUSH2 0x163C JUMP JUMPDEST POP PUSH0 PUSH2 0x14C4 PUSH2 0x1C57 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x14E2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x150D JUMP JUMPDEST DUP1 PUSH2 0x14EC DUP5 PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14FD SWAP3 SWAP2 SWAP1 PUSH2 0x2FEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1647 DUP4 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B9 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B0 SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x170F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1D70 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x171F DUP5 PUSH2 0x1D37 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1760 JUMPI PUSH2 0x175F DUP2 DUP5 DUP7 PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17EB JUMPI PUSH2 0x179F PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1D70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x186A JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1938 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1FF2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19AC JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A3 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A98 SWAP2 SWAP1 PUSH2 0x2414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1C51 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1AE8 PUSH2 0x16FB JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B0A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3064 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1B45 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B42 SWAP2 SWAP1 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1BC6 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1B73 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1BBE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB5 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1C4F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C46 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1C7B DUP5 PUSH2 0x200D JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C99 JUMPI PUSH2 0x1C98 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1CCB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1D2C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1D21 JUMPI PUSH2 0x1D20 PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1CD8 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1DA8 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1EDA JUMPI PUSH0 PUSH2 0x1DB7 DUP5 PUSH2 0x163C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1E21 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1E34 JUMPI POP PUSH2 0x1E32 DUP2 DUP5 PUSH2 0x1545 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1E76 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E6D SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1ED8 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F3A DUP4 DUP4 DUP4 PUSH2 0x215E JUMP JUMPDEST PUSH2 0x1FED JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FAE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA5 SWAP2 SWAP1 PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE4 SWAP3 SWAP2 SWAP1 PUSH2 0x311A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1FFC DUP4 DUP4 PUSH2 0x221E JUMP JUMPDEST PUSH2 0x2008 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1AA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2069 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x205F JUMPI PUSH2 0x205E PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x20A6 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x209C JUMPI PUSH2 0x209B PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x20D5 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x20CB JUMPI PUSH2 0x20CA PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x20FE JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x20F4 JUMPI PUSH2 0x20F3 PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x2123 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2119 JUMPI PUSH2 0x2118 PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2146 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x213C JUMPI PUSH2 0x213B PUSH2 0x30ED JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2155 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2215 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x21D6 JUMPI POP PUSH2 0x21D5 DUP5 DUP5 PUSH2 0x1545 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2214 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21FC DUP4 PUSH2 0x16C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x228E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2285 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x229A DUP4 DUP4 PUSH0 PUSH2 0x1714 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x230C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2303 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x231D SWAP1 PUSH2 0x2A0F JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x232E JUMPI POP PUSH2 0x234B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x234A SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2365 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x234F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23AE DUP2 PUSH2 0x237A JUMP JUMPDEST DUP2 EQ PUSH2 0x23B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23C9 DUP2 PUSH2 0x23A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E4 JUMPI PUSH2 0x23E3 PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23F1 DUP5 DUP3 DUP6 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x240E DUP2 PUSH2 0x23FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2427 PUSH0 DUP4 ADD DUP5 PUSH2 0x2405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2464 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2449 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2489 DUP3 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x2493 DUP2 DUP6 PUSH2 0x2437 JUMP JUMPDEST SWAP4 POP PUSH2 0x24A3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x24AC DUP2 PUSH2 0x246F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24CF DUP2 DUP5 PUSH2 0x247F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E9 DUP2 PUSH2 0x24D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x24F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2504 DUP2 PUSH2 0x24E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251F JUMPI PUSH2 0x251E PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252C DUP5 DUP3 DUP6 ADD PUSH2 0x24F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x255E DUP3 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x256E DUP2 PUSH2 0x2554 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2587 PUSH0 DUP4 ADD DUP5 PUSH2 0x2565 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2596 DUP2 PUSH2 0x2554 JUMP JUMPDEST DUP2 EQ PUSH2 0x25A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25B1 DUP2 PUSH2 0x258D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25CD JUMPI PUSH2 0x25CC PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25DA DUP6 DUP3 DUP7 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25EB DUP6 DUP3 DUP7 ADD PUSH2 0x24F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x260A JUMPI PUSH2 0x2609 PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2617 DUP5 DUP3 DUP6 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2637 JUMPI PUSH2 0x2636 PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2644 DUP7 DUP3 DUP8 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2655 DUP7 DUP3 DUP8 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2666 DUP7 DUP3 DUP8 ADD PUSH2 0x24F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2679 DUP2 PUSH2 0x24D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2692 PUSH0 DUP4 ADD DUP5 PUSH2 0x2670 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x26D6 DUP3 PUSH2 0x246F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x26F5 JUMPI PUSH2 0x26F4 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2707 PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP PUSH2 0x2713 DUP3 DUP3 PUSH2 0x26CD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2732 JUMPI PUSH2 0x2731 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST PUSH2 0x273B DUP3 PUSH2 0x246F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2768 PUSH2 0x2763 DUP5 PUSH2 0x2718 JUMP JUMPDEST PUSH2 0x26FE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2784 JUMPI PUSH2 0x2783 PUSH2 0x269C JUMP JUMPDEST JUMPDEST PUSH2 0x278F DUP5 DUP3 DUP6 PUSH2 0x2748 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27AB JUMPI PUSH2 0x27AA PUSH2 0x2698 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27BB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2756 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27DA JUMPI PUSH2 0x27D9 PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27E7 DUP6 DUP3 DUP7 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2808 JUMPI PUSH2 0x2807 PUSH2 0x2376 JUMP JUMPDEST JUMPDEST PUSH2 0x2814 DUP6 DUP3 DUP7 ADD PUSH2 0x2797 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2827 DUP2 PUSH2 0x23FA JUMP JUMPDEST DUP2 EQ PUSH2 0x2831 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2842 DUP2 PUSH2 0x281E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x285E JUMPI PUSH2 0x285D PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x286B DUP6 DUP3 DUP7 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x287C DUP6 DUP3 DUP7 ADD PUSH2 0x2834 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28A0 JUMPI PUSH2 0x289F PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST PUSH2 0x28A9 DUP3 PUSH2 0x246F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28C8 PUSH2 0x28C3 DUP5 PUSH2 0x2886 JUMP JUMPDEST PUSH2 0x26FE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x28E4 JUMPI PUSH2 0x28E3 PUSH2 0x269C JUMP JUMPDEST JUMPDEST PUSH2 0x28EF DUP5 DUP3 DUP6 PUSH2 0x2748 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x290B JUMPI PUSH2 0x290A PUSH2 0x2698 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x291B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x293C JUMPI PUSH2 0x293B PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2949 DUP8 DUP3 DUP9 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x295A DUP8 DUP3 DUP9 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x296B DUP8 DUP3 DUP9 ADD PUSH2 0x24F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x298C JUMPI PUSH2 0x298B PUSH2 0x2376 JUMP JUMPDEST JUMPDEST PUSH2 0x2998 DUP8 DUP3 DUP9 ADD PUSH2 0x28F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29BA JUMPI PUSH2 0x29B9 PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29C7 DUP6 DUP3 DUP7 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29D8 DUP6 DUP3 DUP7 ADD PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2A26 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A39 JUMPI PUSH2 0x2A38 PUSH2 0x29E2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E732063616E206578656375746520746869732066756E PUSH0 DUP3 ADD MSTORE PUSH32 0x6374696F6E000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A99 PUSH1 0x25 DUP4 PUSH2 0x2437 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA4 DUP3 PUSH2 0x2A3F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AC6 DUP2 PUSH2 0x2A8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2AE0 PUSH0 DUP4 ADD DUP7 PUSH2 0x2565 JUMP JUMPDEST PUSH2 0x2AED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2670 JUMP JUMPDEST PUSH2 0x2AFA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2565 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x596F7520686176656E277420766F746564207965740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B36 PUSH1 0x15 DUP4 PUSH2 0x2437 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B41 DUP3 PUSH2 0x2B02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B63 DUP2 PUSH2 0x2B2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E646964617465206E6F7420726567697374657265640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9E PUSH1 0x18 DUP4 PUSH2 0x2437 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA9 DUP3 PUSH2 0x2B6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BCB DUP2 PUSH2 0x2B92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573732068617320616C726561647920766F74656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C06 PUSH1 0x19 DUP4 PUSH2 0x2437 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C11 DUP3 PUSH2 0x2BD2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C33 DUP2 PUSH2 0x2BFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420766F74696E672076616C756500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C6E PUSH1 0x19 DUP4 PUSH2 0x2437 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C79 DUP3 PUSH2 0x2C3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C9B DUP2 PUSH2 0x2C62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2CD9 DUP3 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE4 DUP4 PUSH2 0x24D7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CFC JUMPI PUSH2 0x2CFB PUSH2 0x2CA2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D0C DUP3 PUSH2 0x24D7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2D3E JUMPI PUSH2 0x2D3D PUSH2 0x2CA2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2DA5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2D6A JUMP JUMPDEST PUSH2 0x2DAF DUP7 DUP4 PUSH2 0x2D6A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2DEA PUSH2 0x2DE5 PUSH2 0x2DE0 DUP5 PUSH2 0x24D7 JUMP JUMPDEST PUSH2 0x2DC7 JUMP JUMPDEST PUSH2 0x24D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E03 DUP4 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x2E17 PUSH2 0x2E0F DUP3 PUSH2 0x2DF1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2D76 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2E2B PUSH2 0x2E1F JUMP JUMPDEST PUSH2 0x2E36 DUP2 DUP5 DUP5 PUSH2 0x2DFA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E59 JUMPI PUSH2 0x2E4E PUSH0 DUP3 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2E3C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2E9E JUMPI PUSH2 0x2E6F DUP2 PUSH2 0x2D49 JUMP JUMPDEST PUSH2 0x2E78 DUP5 PUSH2 0x2D5B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2E87 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2E9B PUSH2 0x2E93 DUP6 PUSH2 0x2D5B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2E3B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EBE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2EA3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2ED6 DUP4 DUP4 PUSH2 0x2EAF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EEF DUP3 PUSH2 0x242D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F08 JUMPI PUSH2 0x2F07 PUSH2 0x26A0 JUMP JUMPDEST JUMPDEST PUSH2 0x2F12 DUP3 SLOAD PUSH2 0x2A0F JUMP JUMPDEST PUSH2 0x2F1D DUP3 DUP3 DUP6 PUSH2 0x2E5D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2F4E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2F3C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2F46 DUP6 DUP3 PUSH2 0x2ECB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2F5C DUP7 PUSH2 0x2D49 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F83 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F5E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2FA0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2F9C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2EAF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FC9 DUP3 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x2FD3 DUP2 DUP6 PUSH2 0x2FB5 JUMP JUMPDEST SWAP4 POP PUSH2 0x2FE3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2447 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FFA DUP3 DUP6 PUSH2 0x2FBF JUMP JUMPDEST SWAP2 POP PUSH2 0x3006 DUP3 DUP5 PUSH2 0x2FBF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3036 DUP3 PUSH2 0x3012 JUMP JUMPDEST PUSH2 0x3040 DUP2 DUP6 PUSH2 0x301C JUMP JUMPDEST SWAP4 POP PUSH2 0x3050 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x3059 DUP2 PUSH2 0x246F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3077 PUSH0 DUP4 ADD DUP8 PUSH2 0x2565 JUMP JUMPDEST PUSH2 0x3084 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2565 JUMP JUMPDEST PUSH2 0x3091 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2670 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x30A3 DUP2 DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x30BC DUP2 PUSH2 0x23A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30D7 JUMPI PUSH2 0x30D6 PUSH2 0x2372 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x30E4 DUP5 DUP3 DUP6 ADD PUSH2 0x30AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x312D PUSH0 DUP4 ADD DUP6 PUSH2 0x2565 JUMP JUMPDEST PUSH2 0x313A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2670 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB CALLDATASIZE 0xB9 0xB2 0xE 0x5D 0xFB 0xE 0xE1 0xBD DUP11 LOG2 PUSH32 0x80D3E26870B945520CF4F1372DBD813442FA0E64736F6C634300081700330000 ",
							"sourceMap": "117:2828:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1395:172:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;308:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4143:578:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1826:375:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;245:40:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2185:118:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;184:55:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2230:713;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1920:208:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;152:26:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;454:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1634:136;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;867:124;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2518:93:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1175:187:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3718:144:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1028:107:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;385:40:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1561:300;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;1395:172:11:-;762:1;733:6;:18;740:10;733:18;;;;;;;;;;;;;;;727:32;;;;;:::i;:::-;;;:36;719:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;1482:16:::1;:34;1499:16;1482:34;;;;;;;;;;;;;;;;1475:41;;;;:::i;:::-;1533:9;:27;1543:16;1533:27;;;;;;;;;;;;;;;1526:34;;;1395:172:::0;:::o;308:50::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4143:578:1:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1826:375:11:-;1871:13;1896;1912:10;1896:26;;1932:24;1959:5;:12;1965:5;1959:12;;;;;;;;;;;;;;;;;;;;;;;;;1932:39;;2061:1;2033:30;;:16;:30;;;2025:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2100:27;2130:16;:34;2147:16;2130:34;;;;;;;;;;;;;;;2100:64;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2181:13;2174:20;;;;;1826:375;:::o;4787:132:1:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;245:40:11:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2185:118:1:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;184:55:11:-;;;;:::o;2230:713::-;2297:13;2313:10;2297:26;;2333:19;2355:9;2333:31;;2434:1;2389:16;:34;2406:16;2389:34;;;;;;;;;;;;;;;2383:48;;;;;:::i;:::-;;;:52;2375:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;2506:1;2482:26;;:5;:12;2488:5;2482:12;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;2474:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2571:11;;2556;:26;;2548:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2688:1;2669:9;:16;2679:5;2669:16;;;;;;;;;;;;;;;;:20;;;;:::i;:::-;2650:9;:16;2660:5;2650:16;;;;;;;;;;;;;;;:39;;;;2714:16;2699:5;:12;2705:5;2699:12;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2786:15;2804:11;;2786:29;;2825:25;2835:5;2842:7;2825:9;:25::i;:::-;2923:11;;:13;;;;;;;;;:::i;:::-;;;;;;2287:656;;;2230:713;:::o;1920:208:1:-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;152:26:11:-;;;;:::o;454:44::-;;;;;;;;;;;;;;;;;:::o;1634:136::-;1710:7;1736:9;:27;1746:16;1736:27;;;;;;;;;;;;;;;;1729:34;;1634:136;;;:::o;867:124::-;762:1;733:6;:18;740:10;733:18;;;;;;;;;;;;;;;727:32;;;;;:::i;:::-;;;:36;719:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;980:4:::1;957:6;:20;964:12;957:20;;;;;;;;;;;;;;;:27;;;;;;:::i;:::-;;867:124:::0;;:::o;2518:93:1:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;1175:187:11:-;762:1;733:6;:18;740:10;733:18;;;;;;;;;;;;;;;727:32;;;;;:::i;:::-;;;:36;719:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;1310:4:::1;1273:16;:34;1290:16;1273:34;;;;;;;;;;;;;;;:41;;;;;;:::i;:::-;;1354:1;1324:9;:27;1334:16;1324:27;;;;;;;;;;;;;;;:31;;;;1175:187:::0;;:::o;3718:144:1:-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;1028:107:11:-;762:1;733:6;:18;740:10;733:18;;;;;;;;;;;;;;;727:32;;;;;:::i;:::-;;;:36;719:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;1108:6:::1;:20;1115:12;1108:20;;;;;;;;;;;;;;;;1101:27;;;;:::i;:::-;1028:107:::0;:::o;4985:208:1:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;385:40:11:-;;;;;;;;;;;;;;;;;;;;;;:::o;3928:153:1:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;762:146:7:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:1:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;14418:120:1:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;10633:100::-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:6:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:1:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;12214:916:9:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;6376:272:1:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:329::-;4949:6;4998:2;4986:9;4977:7;4973:23;4969:32;4966:119;;;5004:79;;:::i;:::-;4966:119;5124:1;5149:53;5194:7;5185:6;5174:9;5170:22;5149:53;:::i;:::-;5139:63;;5095:117;4890:329;;;;:::o;5225:619::-;5302:6;5310;5318;5367:2;5355:9;5346:7;5342:23;5338:32;5335:119;;;5373:79;;:::i;:::-;5335:119;5493:1;5518:53;5563:7;5554:6;5543:9;5539:22;5518:53;:::i;:::-;5508:63;;5464:117;5620:2;5646:53;5691:7;5682:6;5671:9;5667:22;5646:53;:::i;:::-;5636:63;;5591:118;5748:2;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5719:118;5225:619;;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:117::-;6311:1;6308;6301:12;6325:117;6434:1;6431;6424:12;6448:180;6496:77;6493:1;6486:88;6593:4;6590:1;6583:15;6617:4;6614:1;6607:15;6634:281;6717:27;6739:4;6717:27;:::i;:::-;6709:6;6705:40;6847:6;6835:10;6832:22;6811:18;6799:10;6796:34;6793:62;6790:88;;;6858:18;;:::i;:::-;6790:88;6898:10;6894:2;6887:22;6677:238;6634:281;;:::o;6921:129::-;6955:6;6982:20;;:::i;:::-;6972:30;;7011:33;7039:4;7031:6;7011:33;:::i;:::-;6921:129;;;:::o;7056:308::-;7118:4;7208:18;7200:6;7197:30;7194:56;;;7230:18;;:::i;:::-;7194:56;7268:29;7290:6;7268:29;:::i;:::-;7260:37;;7352:4;7346;7342:15;7334:23;;7056:308;;;:::o;7370:146::-;7467:6;7462:3;7457;7444:30;7508:1;7499:6;7494:3;7490:16;7483:27;7370:146;;;:::o;7522:425::-;7600:5;7625:66;7641:49;7683:6;7641:49;:::i;:::-;7625:66;:::i;:::-;7616:75;;7714:6;7707:5;7700:21;7752:4;7745:5;7741:16;7790:3;7781:6;7776:3;7772:16;7769:25;7766:112;;;7797:79;;:::i;:::-;7766:112;7887:54;7934:6;7929:3;7924;7887:54;:::i;:::-;7606:341;7522:425;;;;;:::o;7967:340::-;8023:5;8072:3;8065:4;8057:6;8053:17;8049:27;8039:122;;8080:79;;:::i;:::-;8039:122;8197:6;8184:20;8222:79;8297:3;8289:6;8282:4;8274:6;8270:17;8222:79;:::i;:::-;8213:88;;8029:278;7967:340;;;;:::o;8313:654::-;8391:6;8399;8448:2;8436:9;8427:7;8423:23;8419:32;8416:119;;;8454:79;;:::i;:::-;8416:119;8574:1;8599:53;8644:7;8635:6;8624:9;8620:22;8599:53;:::i;:::-;8589:63;;8545:117;8729:2;8718:9;8714:18;8701:32;8760:18;8752:6;8749:30;8746:117;;;8782:79;;:::i;:::-;8746:117;8887:63;8942:7;8933:6;8922:9;8918:22;8887:63;:::i;:::-;8877:73;;8672:288;8313:654;;;;;:::o;8973:116::-;9043:21;9058:5;9043:21;:::i;:::-;9036:5;9033:32;9023:60;;9079:1;9076;9069:12;9023:60;8973:116;:::o;9095:133::-;9138:5;9176:6;9163:20;9154:29;;9192:30;9216:5;9192:30;:::i;:::-;9095:133;;;;:::o;9234:468::-;9299:6;9307;9356:2;9344:9;9335:7;9331:23;9327:32;9324:119;;;9362:79;;:::i;:::-;9324:119;9482:1;9507:53;9552:7;9543:6;9532:9;9528:22;9507:53;:::i;:::-;9497:63;;9453:117;9609:2;9635:50;9677:7;9668:6;9657:9;9653:22;9635:50;:::i;:::-;9625:60;;9580:115;9234:468;;;;;:::o;9708:307::-;9769:4;9859:18;9851:6;9848:30;9845:56;;;9881:18;;:::i;:::-;9845:56;9919:29;9941:6;9919:29;:::i;:::-;9911:37;;10003:4;9997;9993:15;9985:23;;9708:307;;;:::o;10021:423::-;10098:5;10123:65;10139:48;10180:6;10139:48;:::i;:::-;10123:65;:::i;:::-;10114:74;;10211:6;10204:5;10197:21;10249:4;10242:5;10238:16;10287:3;10278:6;10273:3;10269:16;10266:25;10263:112;;;10294:79;;:::i;:::-;10263:112;10384:54;10431:6;10426:3;10421;10384:54;:::i;:::-;10104:340;10021:423;;;;;:::o;10463:338::-;10518:5;10567:3;10560:4;10552:6;10548:17;10544:27;10534:122;;10575:79;;:::i;:::-;10534:122;10692:6;10679:20;10717:78;10791:3;10783:6;10776:4;10768:6;10764:17;10717:78;:::i;:::-;10708:87;;10524:277;10463:338;;;;:::o;10807:943::-;10902:6;10910;10918;10926;10975:3;10963:9;10954:7;10950:23;10946:33;10943:120;;;10982:79;;:::i;:::-;10943:120;11102:1;11127:53;11172:7;11163:6;11152:9;11148:22;11127:53;:::i;:::-;11117:63;;11073:117;11229:2;11255:53;11300:7;11291:6;11280:9;11276:22;11255:53;:::i;:::-;11245:63;;11200:118;11357:2;11383:53;11428:7;11419:6;11408:9;11404:22;11383:53;:::i;:::-;11373:63;;11328:118;11513:2;11502:9;11498:18;11485:32;11544:18;11536:6;11533:30;11530:117;;;11566:79;;:::i;:::-;11530:117;11671:62;11725:7;11716:6;11705:9;11701:22;11671:62;:::i;:::-;11661:72;;11456:287;10807:943;;;;;;;:::o;11756:474::-;11824:6;11832;11881:2;11869:9;11860:7;11856:23;11852:32;11849:119;;;11887:79;;:::i;:::-;11849:119;12007:1;12032:53;12077:7;12068:6;12057:9;12053:22;12032:53;:::i;:::-;12022:63;;11978:117;12134:2;12160:53;12205:7;12196:6;12185:9;12181:22;12160:53;:::i;:::-;12150:63;;12105:118;11756:474;;;;;:::o;12236:180::-;12284:77;12281:1;12274:88;12381:4;12378:1;12371:15;12405:4;12402:1;12395:15;12422:320;12466:6;12503:1;12497:4;12493:12;12483:22;;12550:1;12544:4;12540:12;12571:18;12561:81;;12627:4;12619:6;12615:17;12605:27;;12561:81;12689:2;12681:6;12678:14;12658:18;12655:38;12652:84;;12708:18;;:::i;:::-;12652:84;12473:269;12422:320;;;:::o;12748:224::-;12888:34;12884:1;12876:6;12872:14;12865:58;12957:7;12952:2;12944:6;12940:15;12933:32;12748:224;:::o;12978:366::-;13120:3;13141:67;13205:2;13200:3;13141:67;:::i;:::-;13134:74;;13217:93;13306:3;13217:93;:::i;:::-;13335:2;13330:3;13326:12;13319:19;;12978:366;;;:::o;13350:419::-;13516:4;13554:2;13543:9;13539:18;13531:26;;13603:9;13597:4;13593:20;13589:1;13578:9;13574:17;13567:47;13631:131;13757:4;13631:131;:::i;:::-;13623:139;;13350:419;;;:::o;13775:442::-;13924:4;13962:2;13951:9;13947:18;13939:26;;13975:71;14043:1;14032:9;14028:17;14019:6;13975:71;:::i;:::-;14056:72;14124:2;14113:9;14109:18;14100:6;14056:72;:::i;:::-;14138;14206:2;14195:9;14191:18;14182:6;14138:72;:::i;:::-;13775:442;;;;;;:::o;14223:171::-;14363:23;14359:1;14351:6;14347:14;14340:47;14223:171;:::o;14400:366::-;14542:3;14563:67;14627:2;14622:3;14563:67;:::i;:::-;14556:74;;14639:93;14728:3;14639:93;:::i;:::-;14757:2;14752:3;14748:12;14741:19;;14400:366;;;:::o;14772:419::-;14938:4;14976:2;14965:9;14961:18;14953:26;;15025:9;15019:4;15015:20;15011:1;15000:9;14996:17;14989:47;15053:131;15179:4;15053:131;:::i;:::-;15045:139;;14772:419;;;:::o;15197:174::-;15337:26;15333:1;15325:6;15321:14;15314:50;15197:174;:::o;15377:366::-;15519:3;15540:67;15604:2;15599:3;15540:67;:::i;:::-;15533:74;;15616:93;15705:3;15616:93;:::i;:::-;15734:2;15729:3;15725:12;15718:19;;15377:366;;;:::o;15749:419::-;15915:4;15953:2;15942:9;15938:18;15930:26;;16002:9;15996:4;15992:20;15988:1;15977:9;15973:17;15966:47;16030:131;16156:4;16030:131;:::i;:::-;16022:139;;15749:419;;;:::o;16174:175::-;16314:27;16310:1;16302:6;16298:14;16291:51;16174:175;:::o;16355:366::-;16497:3;16518:67;16582:2;16577:3;16518:67;:::i;:::-;16511:74;;16594:93;16683:3;16594:93;:::i;:::-;16712:2;16707:3;16703:12;16696:19;;16355:366;;;:::o;16727:419::-;16893:4;16931:2;16920:9;16916:18;16908:26;;16980:9;16974:4;16970:20;16966:1;16955:9;16951:17;16944:47;17008:131;17134:4;17008:131;:::i;:::-;17000:139;;16727:419;;;:::o;17152:175::-;17292:27;17288:1;17280:6;17276:14;17269:51;17152:175;:::o;17333:366::-;17475:3;17496:67;17560:2;17555:3;17496:67;:::i;:::-;17489:74;;17572:93;17661:3;17572:93;:::i;:::-;17690:2;17685:3;17681:12;17674:19;;17333:366;;;:::o;17705:419::-;17871:4;17909:2;17898:9;17894:18;17886:26;;17958:9;17952:4;17948:20;17944:1;17933:9;17929:17;17922:47;17986:131;18112:4;17986:131;:::i;:::-;17978:139;;17705:419;;;:::o;18130:180::-;18178:77;18175:1;18168:88;18275:4;18272:1;18265:15;18299:4;18296:1;18289:15;18316:191;18356:3;18375:20;18393:1;18375:20;:::i;:::-;18370:25;;18409:20;18427:1;18409:20;:::i;:::-;18404:25;;18452:1;18449;18445:9;18438:16;;18473:3;18470:1;18467:10;18464:36;;;18480:18;;:::i;:::-;18464:36;18316:191;;;;:::o;18513:233::-;18552:3;18575:24;18593:5;18575:24;:::i;:::-;18566:33;;18621:66;18614:5;18611:77;18608:103;;18691:18;;:::i;:::-;18608:103;18738:1;18731:5;18727:13;18720:20;;18513:233;;;:::o;18752:141::-;18801:4;18824:3;18816:11;;18847:3;18844:1;18837:14;18881:4;18878:1;18868:18;18860:26;;18752:141;;;:::o;18899:93::-;18936:6;18983:2;18978;18971:5;18967:14;18963:23;18953:33;;18899:93;;;:::o;18998:107::-;19042:8;19092:5;19086:4;19082:16;19061:37;;18998:107;;;;:::o;19111:393::-;19180:6;19230:1;19218:10;19214:18;19253:97;19283:66;19272:9;19253:97;:::i;:::-;19371:39;19401:8;19390:9;19371:39;:::i;:::-;19359:51;;19443:4;19439:9;19432:5;19428:21;19419:30;;19492:4;19482:8;19478:19;19471:5;19468:30;19458:40;;19187:317;;19111:393;;;;;:::o;19510:60::-;19538:3;19559:5;19552:12;;19510:60;;;:::o;19576:142::-;19626:9;19659:53;19677:34;19686:24;19704:5;19686:24;:::i;:::-;19677:34;:::i;:::-;19659:53;:::i;:::-;19646:66;;19576:142;;;:::o;19724:75::-;19767:3;19788:5;19781:12;;19724:75;;;:::o;19805:269::-;19915:39;19946:7;19915:39;:::i;:::-;19976:91;20025:41;20049:16;20025:41;:::i;:::-;20017:6;20010:4;20004:11;19976:91;:::i;:::-;19970:4;19963:105;19881:193;19805:269;;;:::o;20080:73::-;20125:3;20080:73;:::o;20159:189::-;20236:32;;:::i;:::-;20277:65;20335:6;20327;20321:4;20277:65;:::i;:::-;20212:136;20159:189;;:::o;20354:186::-;20414:120;20431:3;20424:5;20421:14;20414:120;;;20485:39;20522:1;20515:5;20485:39;:::i;:::-;20458:1;20451:5;20447:13;20438:22;;20414:120;;;20354:186;;:::o;20546:543::-;20647:2;20642:3;20639:11;20636:446;;;20681:38;20713:5;20681:38;:::i;:::-;20765:29;20783:10;20765:29;:::i;:::-;20755:8;20751:44;20948:2;20936:10;20933:18;20930:49;;;20969:8;20954:23;;20930:49;20992:80;21048:22;21066:3;21048:22;:::i;:::-;21038:8;21034:37;21021:11;20992:80;:::i;:::-;20651:431;;20636:446;20546:543;;;:::o;21095:117::-;21149:8;21199:5;21193:4;21189:16;21168:37;;21095:117;;;;:::o;21218:169::-;21262:6;21295:51;21343:1;21339:6;21331:5;21328:1;21324:13;21295:51;:::i;:::-;21291:56;21376:4;21370;21366:15;21356:25;;21269:118;21218:169;;;;:::o;21392:295::-;21468:4;21614:29;21639:3;21633:4;21614:29;:::i;:::-;21606:37;;21676:3;21673:1;21669:11;21663:4;21660:21;21652:29;;21392:295;;;;:::o;21692:1395::-;21809:37;21842:3;21809:37;:::i;:::-;21911:18;21903:6;21900:30;21897:56;;;21933:18;;:::i;:::-;21897:56;21977:38;22009:4;22003:11;21977:38;:::i;:::-;22062:67;22122:6;22114;22108:4;22062:67;:::i;:::-;22156:1;22180:4;22167:17;;22212:2;22204:6;22201:14;22229:1;22224:618;;;;22886:1;22903:6;22900:77;;;22952:9;22947:3;22943:19;22937:26;22928:35;;22900:77;23003:67;23063:6;23056:5;23003:67;:::i;:::-;22997:4;22990:81;22859:222;22194:887;;22224:618;22276:4;22272:9;22264:6;22260:22;22310:37;22342:4;22310:37;:::i;:::-;22369:1;22383:208;22397:7;22394:1;22391:14;22383:208;;;22476:9;22471:3;22467:19;22461:26;22453:6;22446:42;22527:1;22519:6;22515:14;22505:24;;22574:2;22563:9;22559:18;22546:31;;22420:4;22417:1;22413:12;22408:17;;22383:208;;;22619:6;22610:7;22607:19;22604:179;;;22677:9;22672:3;22668:19;22662:26;22720:48;22762:4;22754:6;22750:17;22739:9;22720:48;:::i;:::-;22712:6;22705:64;22627:156;22604:179;22829:1;22825;22817:6;22813:14;22809:22;22803:4;22796:36;22231:611;;;22194:887;;21784:1303;;;21692:1395;;:::o;23093:148::-;23195:11;23232:3;23217:18;;23093:148;;;;:::o;23247:390::-;23353:3;23381:39;23414:5;23381:39;:::i;:::-;23436:89;23518:6;23513:3;23436:89;:::i;:::-;23429:96;;23534:65;23592:6;23587:3;23580:4;23573:5;23569:16;23534:65;:::i;:::-;23624:6;23619:3;23615:16;23608:23;;23357:280;23247:390;;;;:::o;23643:435::-;23823:3;23845:95;23936:3;23927:6;23845:95;:::i;:::-;23838:102;;23957:95;24048:3;24039:6;23957:95;:::i;:::-;23950:102;;24069:3;24062:10;;23643:435;;;;;:::o;24084:98::-;24135:6;24169:5;24163:12;24153:22;;24084:98;;;:::o;24188:168::-;24271:11;24305:6;24300:3;24293:19;24345:4;24340:3;24336:14;24321:29;;24188:168;;;;:::o;24362:373::-;24448:3;24476:38;24508:5;24476:38;:::i;:::-;24530:70;24593:6;24588:3;24530:70;:::i;:::-;24523:77;;24609:65;24667:6;24662:3;24655:4;24648:5;24644:16;24609:65;:::i;:::-;24699:29;24721:6;24699:29;:::i;:::-;24694:3;24690:39;24683:46;;24452:283;24362:373;;;;:::o;24741:640::-;24936:4;24974:3;24963:9;24959:19;24951:27;;24988:71;25056:1;25045:9;25041:17;25032:6;24988:71;:::i;:::-;25069:72;25137:2;25126:9;25122:18;25113:6;25069:72;:::i;:::-;25151;25219:2;25208:9;25204:18;25195:6;25151:72;:::i;:::-;25270:9;25264:4;25260:20;25255:2;25244:9;25240:18;25233:48;25298:76;25369:4;25360:6;25298:76;:::i;:::-;25290:84;;24741:640;;;;;;;:::o;25387:141::-;25443:5;25474:6;25468:13;25459:22;;25490:32;25516:5;25490:32;:::i;:::-;25387:141;;;;:::o;25534:349::-;25603:6;25652:2;25640:9;25631:7;25627:23;25623:32;25620:119;;;25658:79;;:::i;:::-;25620:119;25778:1;25803:63;25858:7;25849:6;25838:9;25834:22;25803:63;:::i;:::-;25793:73;;25749:127;25534:349;;;;:::o;25889:180::-;25937:77;25934:1;25927:88;26034:4;26031:1;26024:15;26058:4;26055:1;26048:15;26075:332;26196:4;26234:2;26223:9;26219:18;26211:26;;26247:71;26315:1;26304:9;26300:17;26291:6;26247:71;:::i;:::-;26328:72;26396:2;26385:9;26381:18;26372:6;26328:72;:::i;:::-;26075:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2532600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addAdmim(address,string)": "infinite",
								"addCandidate(address,string)": "infinite",
								"admins(address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"candidates_names(address)": "infinite",
								"deleteAdmim(address)": "infinite",
								"deleteandidate(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"nextTokenId()": "2470",
								"num_votes(address)": "2869",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"showMyVote()": "infinite",
								"showVotesCandidate(address)": "2918",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"vote(address)": "infinite",
								"votes(address)": "infinite",
								"votingEther()": "2514"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 2945,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 213,
									"end": 239,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 239,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 184,
									"end": 239,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 539,
									"end": 681,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 539,
									"end": 681,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 539,
									"end": 681,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 539,
									"end": 681,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 539,
									"end": 681,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 539,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 539,
									"end": 681,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 539,
									"end": 681,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 539,
									"end": 681,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 539,
									"end": 681,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 539,
									"end": 681,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "566F74696E675553500000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "4D544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "41646D696E000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 590,
									"end": 596,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 607,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 590,
									"end": 608,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 590,
									"end": 618,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 590,
									"end": 618,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 2945,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb36b9b20e5dfb0ee1bd8aa27f80d3e26870b945520cf4f1372dbd813442fa0e64736f6c63430008170033",
									".code": [
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "9A594F06"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "B88D4FDE"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "B88D4FDE"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "C87B56DD"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "D8BFF5A5"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "9A594F06"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "B3849E2A"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "75794A3C"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "78D66C39"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "8A7C3A32"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "8EDFC059"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "429B62E5"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "429B62E5"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "6352211E"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "63F67B54"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "6DD7D8EA"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "3219AC2A"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "42842E0E"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "81812FC"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "12EE1B0B"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "23202FE3"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 117,
											"end": 2945,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1395,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1395,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 308,
											"end": 358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 308,
											"end": 358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 308,
											"end": 358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1826,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1826,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 245,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 245,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 245,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 245,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 184,
											"end": 239,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 184,
											"end": 239,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 184,
											"end": 239,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 239,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 184,
											"end": 239,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 184,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 184,
											"end": 239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 184,
											"end": 239,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 239,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 184,
											"end": 239,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 184,
											"end": 239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 184,
											"end": 239,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 239,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2230,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 2230,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 152,
											"end": 178,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 152,
											"end": 178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 152,
											"end": 178,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 178,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 152,
											"end": 178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 152,
											"end": 178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 152,
											"end": 178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 152,
											"end": 178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 152,
											"end": 178,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 152,
											"end": 178,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 152,
											"end": 178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 152,
											"end": 178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 152,
											"end": 178,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 454,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 454,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 454,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1634,
											"end": 1770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 1634,
											"end": 1770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1634,
											"end": 1770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 867,
											"end": 991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 867,
											"end": 991,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 991,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 867,
											"end": 991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 867,
											"end": 991,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 867,
											"end": 991,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 867,
											"end": 991,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 867,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 867,
											"end": 991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 867,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 867,
											"end": 991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 1175,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1175,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1028,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1028,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 385,
											"end": 425,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 385,
											"end": 425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 385,
											"end": 425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 385,
											"end": 425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 762,
											"end": 763,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 750,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 727,
											"end": 759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 727,
											"end": 759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 727,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 727,
											"end": 763,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 719,
											"end": 805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1515,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1475,
											"end": 1516,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1475,
											"end": 1516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1475,
											"end": 1516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 1475,
											"end": 1516,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1475,
											"end": 1516,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1475,
											"end": 1516,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1560,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1526,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1526,
											"end": 1560,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 308,
											"end": 358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 308,
											"end": 358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 308,
											"end": 358,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 308,
											"end": 358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1871,
											"end": 1884,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1896,
											"end": 1909,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1922,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1896,
											"end": 1922,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1896,
											"end": 1922,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1932,
											"end": 1956,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1965,
											"end": 1970,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1932,
											"end": 1971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1932,
											"end": 1971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2063,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2033,
											"end": 2063,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2049,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2063,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2033,
											"end": 2063,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2033,
											"end": 2063,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 2025,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2025,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2127,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2146,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2163,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2100,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2100,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2100,
											"end": 2164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2174,
											"end": 2194,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2174,
											"end": 2194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2174,
											"end": 2194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2174,
											"end": 2194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2174,
											"end": 2194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1826,
											"end": 2201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 245,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 245,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 245,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 245,
											"end": 285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 245,
											"end": 285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 239,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 184,
											"end": 239,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 184,
											"end": 239,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 184,
											"end": 239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2297,
											"end": 2310,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2323,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2297,
											"end": 2323,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2297,
											"end": 2323,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2352,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2364,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2364,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2405,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2422,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2431,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 2383,
											"end": 2431,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2383,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2431,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 2383,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2431,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2431,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2435,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 2375,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2375,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2507,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2508,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2508,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2487,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2508,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2508,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2482,
											"end": 2508,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 2474,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 2474,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2582,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2571,
											"end": 2582,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 2567,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 2582,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2556,
											"end": 2582,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 2548,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 2548,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2688,
											"end": 2689,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2669,
											"end": 2678,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2684,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2685,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 2669,
											"end": 2689,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 2669,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2689,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 2669,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2659,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2665,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2666,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2704,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2815,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2804,
											"end": 2815,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 2835,
											"end": 2840,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2842,
											"end": 2849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 2825,
											"end": 2850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2850,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 2825,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2934,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2923,
											"end": 2934,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 2923,
											"end": 2936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 178,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 152,
											"end": 178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 178,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 152,
											"end": 178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 498,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 454,
											"end": 498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1710,
											"end": 1717,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1745,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1762,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1763,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1763,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1763,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 867,
											"end": 991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 762,
											"end": 763,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 750,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 727,
											"end": 759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 727,
											"end": 759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 727,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 727,
											"end": 763,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 719,
											"end": 805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 980,
											"end": 984,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 957,
											"end": 963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 976,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 977,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 957,
											"end": 984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 957,
											"end": 984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 957,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 957,
											"end": 984,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 957,
											"end": 984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 957,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 957,
											"end": 984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 957,
											"end": 984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 957,
											"end": 984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 867,
											"end": 991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 762,
											"end": 763,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 750,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 727,
											"end": 759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 727,
											"end": 759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 727,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 727,
											"end": 763,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 719,
											"end": 805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1310,
											"end": 1314,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1306,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1307,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1314,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 1273,
											"end": 1314,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 1273,
											"end": 1314,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 1273,
											"end": 1314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1273,
											"end": 1314,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1354,
											"end": 1355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1350,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1351,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1355,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 762,
											"end": 763,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 750,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 733,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 751,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 727,
											"end": 759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 727,
											"end": 759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 727,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 727,
											"end": 759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 727,
											"end": 763,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 719,
											"end": 805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 719,
											"end": 805,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 719,
											"end": 805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1127,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 1101,
											"end": 1128,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 1101,
											"end": 1128,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1128,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 1101,
											"end": 1128,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1028,
											"end": 1135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 385,
											"end": 425,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 385,
											"end": 425,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 385,
											"end": 425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 6,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "189"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "403"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "167"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "403"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "405"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "404"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "405"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "406"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "407"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "406"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "404"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "407"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "408"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "409"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "408"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "409"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4949,
											"end": 4955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5000,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4986,
											"end": 4995,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4977,
											"end": 4984,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4996,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5001,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 5004,
											"end": 5083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5124,
											"end": 5125,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 5194,
											"end": 5201,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5185,
											"end": 5191,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5174,
											"end": 5183,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5170,
											"end": 5192,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 5149,
											"end": 5202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5139,
											"end": 5202,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5139,
											"end": 5202,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5095,
											"end": 5212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5302,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5316,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5355,
											"end": 5364,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5346,
											"end": 5353,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5342,
											"end": 5365,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5338,
											"end": 5370,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 5373,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 5373,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5452,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 5373,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5493,
											"end": 5494,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 5563,
											"end": 5570,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5554,
											"end": 5560,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5543,
											"end": 5552,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5539,
											"end": 5561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 5518,
											"end": 5571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5508,
											"end": 5571,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5508,
											"end": 5571,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5464,
											"end": 5581,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5620,
											"end": 5622,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 5691,
											"end": 5698,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5682,
											"end": 5688,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5671,
											"end": 5680,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5667,
											"end": 5689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 5646,
											"end": 5699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5748,
											"end": 5750,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6319,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 6202,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6311,
											"end": 6312,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6301,
											"end": 6313,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6442,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 6325,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6434,
											"end": 6435,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6432,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6424,
											"end": 6436,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6628,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6448,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6496,
											"end": 6573,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6493,
											"end": 6494,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6486,
											"end": 6574,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6593,
											"end": 6597,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6583,
											"end": 6598,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6617,
											"end": 6621,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6614,
											"end": 6615,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6607,
											"end": 6622,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6634,
											"end": 6915,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 6634,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 6739,
											"end": 6743,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 6717,
											"end": 6744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6744,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 6717,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6705,
											"end": 6745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6847,
											"end": 6853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6835,
											"end": 6845,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6832,
											"end": 6854,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6829,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6799,
											"end": 6809,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6796,
											"end": 6830,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6855,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 6790,
											"end": 6878,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6790,
											"end": 6878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 6790,
											"end": 6878,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6858,
											"end": 6876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6790,
											"end": 6878,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 6790,
											"end": 6878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6894,
											"end": 6896,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6887,
											"end": 6909,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6677,
											"end": 6915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6634,
											"end": 6915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6634,
											"end": 6915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6634,
											"end": 6915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6921,
											"end": 7050,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6921,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6955,
											"end": 6961,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6982,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 6982,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 6982,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6982,
											"end": 7002,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 6982,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6972,
											"end": 7002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6972,
											"end": 7002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7011,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 7039,
											"end": 7043,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7031,
											"end": 7037,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7011,
											"end": 7044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 7011,
											"end": 7044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7011,
											"end": 7044,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 7011,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6921,
											"end": 7050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6921,
											"end": 7050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6921,
											"end": 7050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6921,
											"end": 7050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 7364,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 7056,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7118,
											"end": 7122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7226,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7200,
											"end": 7206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7197,
											"end": 7227,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7194,
											"end": 7250,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7194,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 7194,
											"end": 7250,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 7230,
											"end": 7248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7194,
											"end": 7250,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 7194,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 7290,
											"end": 7296,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 7268,
											"end": 7297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7297,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 7268,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7297,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7346,
											"end": 7350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7334,
											"end": 7357,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7334,
											"end": 7357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 7364,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 7364,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 7364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7056,
											"end": 7364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7370,
											"end": 7516,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 7370,
											"end": 7516,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7467,
											"end": 7473,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7462,
											"end": 7465,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7457,
											"end": 7460,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7474,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 7508,
											"end": 7509,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7499,
											"end": 7505,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7494,
											"end": 7497,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7490,
											"end": 7506,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7510,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7370,
											"end": 7516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7370,
											"end": 7516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7370,
											"end": 7516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7370,
											"end": 7516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7605,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 7641,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 7683,
											"end": 7689,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 7641,
											"end": 7690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7690,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 7641,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7625,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 7625,
											"end": 7691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7625,
											"end": 7691,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 7625,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7616,
											"end": 7691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7616,
											"end": 7691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7714,
											"end": 7720,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7707,
											"end": 7712,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7700,
											"end": 7721,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7752,
											"end": 7756,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 7757,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7790,
											"end": 7793,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7781,
											"end": 7787,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7776,
											"end": 7779,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7772,
											"end": 7788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7769,
											"end": 7794,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 7878,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 7766,
											"end": 7878,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7797,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 7797,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 7797,
											"end": 7876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7797,
											"end": 7876,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 7797,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7766,
											"end": 7878,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 7766,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7887,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7929,
											"end": 7932,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7924,
											"end": 7927,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7887,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 7887,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7887,
											"end": 7941,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 7887,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7606,
											"end": 7947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7522,
											"end": 7947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7522,
											"end": 7947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7967,
											"end": 8307,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 7967,
											"end": 8307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8023,
											"end": 8028,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8072,
											"end": 8075,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8065,
											"end": 8069,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8057,
											"end": 8063,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8053,
											"end": 8070,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8049,
											"end": 8076,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8039,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 8039,
											"end": 8161,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8080,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 8080,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 8080,
											"end": 8159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8080,
											"end": 8159,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 8080,
											"end": 8159,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8039,
											"end": 8161,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 8039,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8197,
											"end": 8203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8184,
											"end": 8204,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8222,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 8297,
											"end": 8300,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8282,
											"end": 8286,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8274,
											"end": 8280,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8270,
											"end": 8287,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8222,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 8222,
											"end": 8301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8222,
											"end": 8301,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 8222,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8213,
											"end": 8301,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8213,
											"end": 8301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8029,
											"end": 8307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7967,
											"end": 8307,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7967,
											"end": 8307,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7967,
											"end": 8307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7967,
											"end": 8307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7967,
											"end": 8307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8967,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 8313,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8391,
											"end": 8397,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8405,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8448,
											"end": 8450,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8436,
											"end": 8445,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8427,
											"end": 8434,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8423,
											"end": 8446,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8419,
											"end": 8451,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8535,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 8416,
											"end": 8535,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8454,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 8454,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 8454,
											"end": 8533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8454,
											"end": 8533,
											"name": "tag",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 8454,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8416,
											"end": 8535,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 8416,
											"end": 8535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8574,
											"end": 8575,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8599,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 8644,
											"end": 8651,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8635,
											"end": 8641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8624,
											"end": 8633,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8620,
											"end": 8642,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8599,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 8599,
											"end": 8652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8599,
											"end": 8652,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 8599,
											"end": 8652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8589,
											"end": 8652,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8589,
											"end": 8652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8545,
											"end": 8662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8729,
											"end": 8731,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8718,
											"end": 8727,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8714,
											"end": 8732,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8701,
											"end": 8733,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8752,
											"end": 8758,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8749,
											"end": 8779,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8746,
											"end": 8863,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8746,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 8746,
											"end": 8863,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8782,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 8782,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 8782,
											"end": 8861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8782,
											"end": 8861,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 8782,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8746,
											"end": 8863,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 8746,
											"end": 8863,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8887,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 8942,
											"end": 8949,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8931,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8918,
											"end": 8940,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8887,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 8887,
											"end": 8950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8887,
											"end": 8950,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 8887,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8877,
											"end": 8950,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8877,
											"end": 8950,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8672,
											"end": 8960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8967,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8967,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8967,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8967,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8967,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8973,
											"end": 9089,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 8973,
											"end": 9089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9043,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 9058,
											"end": 9063,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9043,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 9043,
											"end": 9064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9043,
											"end": 9064,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 9043,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9036,
											"end": 9041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9065,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 9023,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 9023,
											"end": 9083,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9079,
											"end": 9080,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9076,
											"end": 9077,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9069,
											"end": 9081,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9023,
											"end": 9083,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 9023,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8973,
											"end": 9089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8973,
											"end": 9089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9095,
											"end": 9228,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 9095,
											"end": 9228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9138,
											"end": 9143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9176,
											"end": 9182,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9154,
											"end": 9183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9154,
											"end": 9183,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9192,
											"end": 9222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 9216,
											"end": 9221,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9192,
											"end": 9222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 9192,
											"end": 9222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9192,
											"end": 9222,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 9192,
											"end": 9222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9095,
											"end": 9228,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9095,
											"end": 9228,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9095,
											"end": 9228,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9095,
											"end": 9228,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9095,
											"end": 9228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9234,
											"end": 9702,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 9234,
											"end": 9702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9305,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9356,
											"end": 9358,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9344,
											"end": 9353,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9335,
											"end": 9342,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9331,
											"end": 9354,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9327,
											"end": 9359,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9324,
											"end": 9443,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9324,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 9324,
											"end": 9443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9362,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 9362,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 9362,
											"end": 9441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9362,
											"end": 9441,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 9362,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9324,
											"end": 9443,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 9324,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9482,
											"end": 9483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9507,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 9552,
											"end": 9559,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9543,
											"end": 9549,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9532,
											"end": 9541,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9550,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9507,
											"end": 9560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 9507,
											"end": 9560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9507,
											"end": 9560,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 9507,
											"end": 9560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9497,
											"end": 9560,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9497,
											"end": 9560,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9453,
											"end": 9570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9609,
											"end": 9611,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9635,
											"end": 9685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 9677,
											"end": 9684,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9668,
											"end": 9674,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9657,
											"end": 9666,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9653,
											"end": 9675,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 9635,
											"end": 9685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9635,
											"end": 9685,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 9635,
											"end": 9685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9685,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9580,
											"end": 9695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9234,
											"end": 9702,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9234,
											"end": 9702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9234,
											"end": 9702,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9234,
											"end": 9702,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9234,
											"end": 9702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9234,
											"end": 9702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9708,
											"end": 10015,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 9708,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9769,
											"end": 9773,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9877,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9851,
											"end": 9857,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9848,
											"end": 9878,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9845,
											"end": 9901,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9845,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 9845,
											"end": 9901,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 9881,
											"end": 9899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9845,
											"end": 9901,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 9845,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9919,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 9941,
											"end": 9947,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9919,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 9919,
											"end": 9948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9919,
											"end": 9948,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 9919,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9911,
											"end": 9948,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9911,
											"end": 9948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10003,
											"end": 10007,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9997,
											"end": 10001,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9993,
											"end": 10008,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9985,
											"end": 10008,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9985,
											"end": 10008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9708,
											"end": 10015,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9708,
											"end": 10015,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9708,
											"end": 10015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9708,
											"end": 10015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10444,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 10021,
											"end": 10444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10098,
											"end": 10103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10123,
											"end": 10188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 10139,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 10180,
											"end": 10186,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10139,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 10139,
											"end": 10187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10139,
											"end": 10187,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 10139,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10123,
											"end": 10188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 10123,
											"end": 10188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10123,
											"end": 10188,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 10123,
											"end": 10188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10114,
											"end": 10188,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10114,
											"end": 10188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10204,
											"end": 10209,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10197,
											"end": 10218,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10249,
											"end": 10253,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10242,
											"end": 10247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10238,
											"end": 10254,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10287,
											"end": 10290,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10278,
											"end": 10284,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10273,
											"end": 10276,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10269,
											"end": 10285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10266,
											"end": 10291,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10263,
											"end": 10375,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10263,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 10263,
											"end": 10375,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10294,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 10294,
											"end": 10373,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 10294,
											"end": 10373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10294,
											"end": 10373,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 10294,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10263,
											"end": 10375,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 10263,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10384,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10426,
											"end": 10429,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10421,
											"end": 10424,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10384,
											"end": 10438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 10384,
											"end": 10438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10384,
											"end": 10438,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 10384,
											"end": 10438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10104,
											"end": 10444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10444,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10444,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10801,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 10463,
											"end": 10801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10518,
											"end": 10523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10570,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 10564,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 10552,
											"end": 10558,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10548,
											"end": 10565,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10544,
											"end": 10571,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10534,
											"end": 10656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 10534,
											"end": 10656,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10575,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 10575,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 10575,
											"end": 10654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10575,
											"end": 10654,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 10575,
											"end": 10654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10534,
											"end": 10656,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 10534,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10692,
											"end": 10698,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10679,
											"end": 10699,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 10717,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 10791,
											"end": 10794,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10776,
											"end": 10780,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10768,
											"end": 10774,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10781,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10717,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 10717,
											"end": 10795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10717,
											"end": 10795,
											"name": "tag",
											"source": 12,
											"value": "607"
										},
										{
											"begin": 10717,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10795,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10708,
											"end": 10795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10524,
											"end": 10801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10801,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10801,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10463,
											"end": 10801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10807,
											"end": 11750,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 10807,
											"end": 11750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10902,
											"end": 10908,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10924,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10926,
											"end": 10932,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10975,
											"end": 10978,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10963,
											"end": 10972,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10954,
											"end": 10961,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10950,
											"end": 10973,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10946,
											"end": 10979,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10943,
											"end": 11063,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10943,
											"end": 11063,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 10943,
											"end": 11063,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10982,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 10982,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 10982,
											"end": 11061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10982,
											"end": 11061,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 10982,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10943,
											"end": 11063,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 10943,
											"end": 11063,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11102,
											"end": 11103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11127,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 11172,
											"end": 11179,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 11163,
											"end": 11169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11152,
											"end": 11161,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11148,
											"end": 11170,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11127,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 11127,
											"end": 11180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11127,
											"end": 11180,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 11127,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11117,
											"end": 11180,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 11117,
											"end": 11180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11073,
											"end": 11190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11229,
											"end": 11231,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11255,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 11300,
											"end": 11307,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 11291,
											"end": 11297,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11289,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11276,
											"end": 11298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11255,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 11255,
											"end": 11308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11255,
											"end": 11308,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 11255,
											"end": 11308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11308,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11200,
											"end": 11318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11357,
											"end": 11359,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11383,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 11428,
											"end": 11435,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 11419,
											"end": 11425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11408,
											"end": 11417,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11404,
											"end": 11426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11383,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 11383,
											"end": 11436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11383,
											"end": 11436,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 11383,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11373,
											"end": 11436,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11373,
											"end": 11436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11328,
											"end": 11446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11513,
											"end": 11515,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11502,
											"end": 11511,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11498,
											"end": 11516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11485,
											"end": 11517,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 11544,
											"end": 11562,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11536,
											"end": 11542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11533,
											"end": 11563,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11530,
											"end": 11647,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11530,
											"end": 11647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 11530,
											"end": 11647,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11566,
											"end": 11645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 11566,
											"end": 11645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 11566,
											"end": 11645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11566,
											"end": 11645,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 11566,
											"end": 11645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11530,
											"end": 11647,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 11530,
											"end": 11647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11671,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 11725,
											"end": 11732,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 11716,
											"end": 11722,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11705,
											"end": 11714,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 11701,
											"end": 11723,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11671,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 11671,
											"end": 11733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11671,
											"end": 11733,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 11671,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11661,
											"end": 11733,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11661,
											"end": 11733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11456,
											"end": 11743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10807,
											"end": 11750,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10807,
											"end": 11750,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 10807,
											"end": 11750,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10807,
											"end": 11750,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10807,
											"end": 11750,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10807,
											"end": 11750,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10807,
											"end": 11750,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10807,
											"end": 11750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11824,
											"end": 11830,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11832,
											"end": 11838,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11881,
											"end": 11883,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11869,
											"end": 11878,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11860,
											"end": 11867,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11856,
											"end": 11879,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11852,
											"end": 11884,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 11887,
											"end": 11966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "tag",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12007,
											"end": 12008,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 12077,
											"end": 12084,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12057,
											"end": 12066,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12053,
											"end": 12075,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 12032,
											"end": 12085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "tag",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12022,
											"end": 12085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12022,
											"end": 12085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11978,
											"end": 12095,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12134,
											"end": 12136,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 12205,
											"end": 12212,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12196,
											"end": 12202,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12185,
											"end": 12194,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12181,
											"end": 12203,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 12160,
											"end": 12213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12150,
											"end": 12213,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12150,
											"end": 12213,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12105,
											"end": 12223,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11756,
											"end": 12230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12236,
											"end": 12416,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 12236,
											"end": 12416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12284,
											"end": 12361,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12281,
											"end": 12282,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12274,
											"end": 12362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12381,
											"end": 12385,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 12378,
											"end": 12379,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12371,
											"end": 12386,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12405,
											"end": 12409,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12402,
											"end": 12403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12395,
											"end": 12410,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12466,
											"end": 12472,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12503,
											"end": 12504,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12497,
											"end": 12501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12493,
											"end": 12505,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12483,
											"end": 12505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12483,
											"end": 12505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12544,
											"end": 12548,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12540,
											"end": 12552,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12571,
											"end": 12589,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12627,
											"end": 12631,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 12619,
											"end": 12625,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12615,
											"end": 12632,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12605,
											"end": 12632,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12605,
											"end": 12632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "tag",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12689,
											"end": 12691,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12681,
											"end": 12687,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12678,
											"end": 12692,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12658,
											"end": 12676,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12655,
											"end": 12693,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 12708,
											"end": 12726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "tag",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "tag",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12473,
											"end": 12742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12422,
											"end": 12742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12748,
											"end": 12972,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 12748,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12888,
											"end": 12922,
											"name": "PUSH",
											"source": 12,
											"value": "4F6E6C792061646D696E732063616E206578656375746520746869732066756E"
										},
										{
											"begin": 12884,
											"end": 12885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12876,
											"end": 12882,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12872,
											"end": 12886,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12865,
											"end": 12923,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12957,
											"end": 12964,
											"name": "PUSH",
											"source": 12,
											"value": "6374696F6E000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12952,
											"end": 12954,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12944,
											"end": 12950,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12940,
											"end": 12955,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12933,
											"end": 12965,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12748,
											"end": 12972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12748,
											"end": 12972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12978,
											"end": 13344,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 12978,
											"end": 13344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13120,
											"end": 13123,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13141,
											"end": 13208,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 13205,
											"end": 13207,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 13200,
											"end": 13203,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13141,
											"end": 13208,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 13141,
											"end": 13208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13141,
											"end": 13208,
											"name": "tag",
											"source": 12,
											"value": "629"
										},
										{
											"begin": 13141,
											"end": 13208,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13208,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 13306,
											"end": 13309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 13217,
											"end": 13310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13217,
											"end": 13310,
											"name": "tag",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 13217,
											"end": 13310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13335,
											"end": 13337,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13330,
											"end": 13333,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13326,
											"end": 13338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13319,
											"end": 13338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13319,
											"end": 13338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12978,
											"end": 13344,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12978,
											"end": 13344,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12978,
											"end": 13344,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12978,
											"end": 13344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13350,
											"end": 13769,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 13350,
											"end": 13769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13516,
											"end": 13520,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13554,
											"end": 13556,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13543,
											"end": 13552,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13557,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13531,
											"end": 13557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13531,
											"end": 13557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13603,
											"end": 13612,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13597,
											"end": 13601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13593,
											"end": 13613,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13589,
											"end": 13590,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13578,
											"end": 13587,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13574,
											"end": 13591,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13567,
											"end": 13614,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13631,
											"end": 13762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 13757,
											"end": 13761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13631,
											"end": 13762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 13631,
											"end": 13762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13631,
											"end": 13762,
											"name": "tag",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 13631,
											"end": 13762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13623,
											"end": 13762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13623,
											"end": 13762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13350,
											"end": 13769,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13350,
											"end": 13769,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13350,
											"end": 13769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13350,
											"end": 13769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13775,
											"end": 14217,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 13775,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13924,
											"end": 13928,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13962,
											"end": 13964,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 13951,
											"end": 13960,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13947,
											"end": 13965,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13939,
											"end": 13965,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13939,
											"end": 13965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13975,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 14043,
											"end": 14044,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14032,
											"end": 14041,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14028,
											"end": 14045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14019,
											"end": 14025,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13975,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 13975,
											"end": 14046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13975,
											"end": 14046,
											"name": "tag",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 13975,
											"end": 14046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14056,
											"end": 14128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "635"
										},
										{
											"begin": 14124,
											"end": 14126,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14113,
											"end": 14122,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14109,
											"end": 14127,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14100,
											"end": 14106,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14056,
											"end": 14128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 14056,
											"end": 14128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14056,
											"end": 14128,
											"name": "tag",
											"source": 12,
											"value": "635"
										},
										{
											"begin": 14056,
											"end": 14128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14138,
											"end": 14210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 14206,
											"end": 14208,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14195,
											"end": 14204,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14191,
											"end": 14209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14182,
											"end": 14188,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14138,
											"end": 14210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 14138,
											"end": 14210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14138,
											"end": 14210,
											"name": "tag",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 14138,
											"end": 14210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13775,
											"end": 14217,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 13775,
											"end": 14217,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13775,
											"end": 14217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13775,
											"end": 14217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13775,
											"end": 14217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13775,
											"end": 14217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13775,
											"end": 14217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14394,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 14223,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14363,
											"end": 14386,
											"name": "PUSH",
											"source": 12,
											"value": "596F7520686176656E277420766F746564207965740000000000000000000000"
										},
										{
											"begin": 14359,
											"end": 14360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14357,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14347,
											"end": 14361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14340,
											"end": 14387,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14400,
											"end": 14766,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 14400,
											"end": 14766,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14542,
											"end": 14545,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14563,
											"end": 14630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 14627,
											"end": 14629,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 14622,
											"end": 14625,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 14563,
											"end": 14630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14563,
											"end": 14630,
											"name": "tag",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 14563,
											"end": 14630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14556,
											"end": 14630,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14556,
											"end": 14630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14639,
											"end": 14732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 14728,
											"end": 14731,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14639,
											"end": 14732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 14639,
											"end": 14732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14639,
											"end": 14732,
											"name": "tag",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 14639,
											"end": 14732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14757,
											"end": 14759,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14752,
											"end": 14755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14748,
											"end": 14760,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14741,
											"end": 14760,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14741,
											"end": 14760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14400,
											"end": 14766,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14400,
											"end": 14766,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14400,
											"end": 14766,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14400,
											"end": 14766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14772,
											"end": 15191,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 14772,
											"end": 15191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14938,
											"end": 14942,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14976,
											"end": 14978,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14965,
											"end": 14974,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14961,
											"end": 14979,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14953,
											"end": 14979,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14953,
											"end": 14979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15025,
											"end": 15034,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15019,
											"end": 15023,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15015,
											"end": 15035,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15011,
											"end": 15012,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15000,
											"end": 15009,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14996,
											"end": 15013,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14989,
											"end": 15036,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15053,
											"end": 15184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 15179,
											"end": 15183,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15053,
											"end": 15184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 15053,
											"end": 15184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15053,
											"end": 15184,
											"name": "tag",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 15053,
											"end": 15184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15045,
											"end": 15184,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15045,
											"end": 15184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14772,
											"end": 15191,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14772,
											"end": 15191,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14772,
											"end": 15191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14772,
											"end": 15191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15197,
											"end": 15371,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 15197,
											"end": 15371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15363,
											"name": "PUSH",
											"source": 12,
											"value": "43616E646964617465206E6F7420726567697374657265640000000000000000"
										},
										{
											"begin": 15333,
											"end": 15334,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15325,
											"end": 15331,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15335,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15314,
											"end": 15364,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15197,
											"end": 15371,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15197,
											"end": 15371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15377,
											"end": 15743,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 15377,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15519,
											"end": 15522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15540,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 15604,
											"end": 15606,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 15599,
											"end": 15602,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15540,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 15540,
											"end": 15607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15540,
											"end": 15607,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 15540,
											"end": 15607,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15533,
											"end": 15607,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15533,
											"end": 15607,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15616,
											"end": 15709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 15705,
											"end": 15708,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15616,
											"end": 15709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 15616,
											"end": 15709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15616,
											"end": 15709,
											"name": "tag",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 15616,
											"end": 15709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15736,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15729,
											"end": 15732,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15725,
											"end": 15737,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15718,
											"end": 15737,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15718,
											"end": 15737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15377,
											"end": 15743,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15377,
											"end": 15743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15377,
											"end": 15743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15377,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15749,
											"end": 16168,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 15749,
											"end": 16168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15915,
											"end": 15919,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15953,
											"end": 15955,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15942,
											"end": 15951,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15938,
											"end": 15956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15930,
											"end": 15956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15930,
											"end": 15956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16002,
											"end": 16011,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15996,
											"end": 16000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15992,
											"end": 16012,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15988,
											"end": 15989,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15977,
											"end": 15986,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15973,
											"end": 15990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15966,
											"end": 16013,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16030,
											"end": 16161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 16156,
											"end": 16160,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16030,
											"end": 16161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 16030,
											"end": 16161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16030,
											"end": 16161,
											"name": "tag",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 16030,
											"end": 16161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16022,
											"end": 16161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16022,
											"end": 16161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15749,
											"end": 16168,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15749,
											"end": 16168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15749,
											"end": 16168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15749,
											"end": 16168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16174,
											"end": 16349,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 16174,
											"end": 16349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16314,
											"end": 16341,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573732068617320616C726561647920766F74656400000000000000"
										},
										{
											"begin": 16310,
											"end": 16311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16302,
											"end": 16308,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16298,
											"end": 16312,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16291,
											"end": 16342,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16174,
											"end": 16349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16174,
											"end": 16349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16355,
											"end": 16721,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 16355,
											"end": 16721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16497,
											"end": 16500,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16518,
											"end": 16585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 16582,
											"end": 16584,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 16577,
											"end": 16580,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16518,
											"end": 16585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 16518,
											"end": 16585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16518,
											"end": 16585,
											"name": "tag",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 16518,
											"end": 16585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16511,
											"end": 16585,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16511,
											"end": 16585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 16683,
											"end": 16686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 16594,
											"end": 16687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16594,
											"end": 16687,
											"name": "tag",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 16594,
											"end": 16687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16712,
											"end": 16714,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16707,
											"end": 16710,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16703,
											"end": 16715,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16696,
											"end": 16715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16696,
											"end": 16715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16355,
											"end": 16721,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16355,
											"end": 16721,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16355,
											"end": 16721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16355,
											"end": 16721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16727,
											"end": 17146,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 16727,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16893,
											"end": 16897,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16931,
											"end": 16933,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16920,
											"end": 16929,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16916,
											"end": 16934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16908,
											"end": 16934,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16908,
											"end": 16934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16980,
											"end": 16989,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16974,
											"end": 16978,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16970,
											"end": 16990,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16966,
											"end": 16967,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16955,
											"end": 16964,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16951,
											"end": 16968,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16944,
											"end": 16991,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17008,
											"end": 17139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 17134,
											"end": 17138,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17008,
											"end": 17139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 17008,
											"end": 17139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17008,
											"end": 17139,
											"name": "tag",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 17008,
											"end": 17139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17000,
											"end": 17139,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17000,
											"end": 17139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16727,
											"end": 17146,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16727,
											"end": 17146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16727,
											"end": 17146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16727,
											"end": 17146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17152,
											"end": 17327,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 17152,
											"end": 17327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17319,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E7420766F74696E672076616C756500000000000000"
										},
										{
											"begin": 17288,
											"end": 17289,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17280,
											"end": 17286,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17276,
											"end": 17290,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17269,
											"end": 17320,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17152,
											"end": 17327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17152,
											"end": 17327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17333,
											"end": 17699,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 17333,
											"end": 17699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17475,
											"end": 17478,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17496,
											"end": 17563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 17560,
											"end": 17562,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 17555,
											"end": 17558,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17496,
											"end": 17563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 17496,
											"end": 17563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17496,
											"end": 17563,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 17496,
											"end": 17563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17489,
											"end": 17563,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17489,
											"end": 17563,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17572,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 17661,
											"end": 17664,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17572,
											"end": 17665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 17572,
											"end": 17665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17572,
											"end": 17665,
											"name": "tag",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 17572,
											"end": 17665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17690,
											"end": 17692,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17685,
											"end": 17688,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17681,
											"end": 17693,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17674,
											"end": 17693,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17674,
											"end": 17693,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17333,
											"end": 17699,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17333,
											"end": 17699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17333,
											"end": 17699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17333,
											"end": 17699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17705,
											"end": 18124,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 17705,
											"end": 18124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17871,
											"end": 17875,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17909,
											"end": 17911,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17898,
											"end": 17907,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17894,
											"end": 17912,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17886,
											"end": 17912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17886,
											"end": 17912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17958,
											"end": 17967,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17952,
											"end": 17956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17948,
											"end": 17968,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17944,
											"end": 17945,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17933,
											"end": 17942,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17929,
											"end": 17946,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17922,
											"end": 17969,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17986,
											"end": 18117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 18112,
											"end": 18116,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17986,
											"end": 18117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 17986,
											"end": 18117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17986,
											"end": 18117,
											"name": "tag",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 17986,
											"end": 18117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17978,
											"end": 18117,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17978,
											"end": 18117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17705,
											"end": 18124,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17705,
											"end": 18124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17705,
											"end": 18124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17705,
											"end": 18124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18130,
											"end": 18310,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 18130,
											"end": 18310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18178,
											"end": 18255,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18175,
											"end": 18176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18168,
											"end": 18256,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18275,
											"end": 18279,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 18272,
											"end": 18273,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 18265,
											"end": 18280,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18299,
											"end": 18303,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18296,
											"end": 18297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18289,
											"end": 18304,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18316,
											"end": 18507,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 18316,
											"end": 18507,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18356,
											"end": 18359,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18375,
											"end": 18395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 18393,
											"end": 18394,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18375,
											"end": 18395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 18375,
											"end": 18395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18375,
											"end": 18395,
											"name": "tag",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 18375,
											"end": 18395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18370,
											"end": 18395,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18370,
											"end": 18395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18409,
											"end": 18429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 18427,
											"end": 18428,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18409,
											"end": 18429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 18409,
											"end": 18429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18409,
											"end": 18429,
											"name": "tag",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 18409,
											"end": 18429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18404,
											"end": 18429,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18404,
											"end": 18429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18452,
											"end": 18453,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18449,
											"end": 18450,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18445,
											"end": 18454,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18438,
											"end": 18454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18438,
											"end": 18454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18473,
											"end": 18476,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18470,
											"end": 18471,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18467,
											"end": 18477,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18500,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 18464,
											"end": 18500,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18480,
											"end": 18498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 18480,
											"end": 18498,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 18480,
											"end": 18498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18480,
											"end": 18498,
											"name": "tag",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 18480,
											"end": 18498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18464,
											"end": 18500,
											"name": "tag",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 18464,
											"end": 18500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18316,
											"end": 18507,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18316,
											"end": 18507,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18316,
											"end": 18507,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18316,
											"end": 18507,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18316,
											"end": 18507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18513,
											"end": 18746,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 18513,
											"end": 18746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18552,
											"end": 18555,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 18593,
											"end": 18598,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 18575,
											"end": 18599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "tag",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 18575,
											"end": 18599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18566,
											"end": 18599,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18566,
											"end": 18599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18621,
											"end": 18687,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18614,
											"end": 18619,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18611,
											"end": 18688,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18608,
											"end": 18711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 18608,
											"end": 18711,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18691,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "670"
										},
										{
											"begin": 18691,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 18691,
											"end": 18709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18691,
											"end": 18709,
											"name": "tag",
											"source": 12,
											"value": "670"
										},
										{
											"begin": 18691,
											"end": 18709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18608,
											"end": 18711,
											"name": "tag",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 18608,
											"end": 18711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18738,
											"end": 18739,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 18731,
											"end": 18736,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18727,
											"end": 18740,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18720,
											"end": 18740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18720,
											"end": 18740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18513,
											"end": 18746,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18513,
											"end": 18746,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18513,
											"end": 18746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18513,
											"end": 18746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18752,
											"end": 18893,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 18752,
											"end": 18893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18801,
											"end": 18805,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18824,
											"end": 18827,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18816,
											"end": 18827,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18816,
											"end": 18827,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18847,
											"end": 18850,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18844,
											"end": 18845,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18837,
											"end": 18851,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18881,
											"end": 18885,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18878,
											"end": 18879,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18868,
											"end": 18886,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 18860,
											"end": 18886,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18860,
											"end": 18886,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18752,
											"end": 18893,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18752,
											"end": 18893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18752,
											"end": 18893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18752,
											"end": 18893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18899,
											"end": 18992,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 18899,
											"end": 18992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18936,
											"end": 18942,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18983,
											"end": 18985,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18978,
											"end": 18980,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 18971,
											"end": 18976,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18967,
											"end": 18981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18963,
											"end": 18986,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 18953,
											"end": 18986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18953,
											"end": 18986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18899,
											"end": 18992,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18899,
											"end": 18992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18899,
											"end": 18992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18899,
											"end": 18992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19105,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 18998,
											"end": 19105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19042,
											"end": 19050,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19092,
											"end": 19097,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19086,
											"end": 19090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19082,
											"end": 19098,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 19061,
											"end": 19098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19061,
											"end": 19098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19105,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19105,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18998,
											"end": 19105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19111,
											"end": 19504,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 19111,
											"end": 19504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19180,
											"end": 19186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19230,
											"end": 19231,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 19218,
											"end": 19228,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19214,
											"end": 19232,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 19253,
											"end": 19350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 19283,
											"end": 19349,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19272,
											"end": 19281,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19253,
											"end": 19350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 19253,
											"end": 19350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19253,
											"end": 19350,
											"name": "tag",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 19253,
											"end": 19350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19371,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 19401,
											"end": 19409,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19390,
											"end": 19399,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19371,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 19371,
											"end": 19410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19371,
											"end": 19410,
											"name": "tag",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 19371,
											"end": 19410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19359,
											"end": 19410,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 19359,
											"end": 19410,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19443,
											"end": 19447,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19439,
											"end": 19448,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 19432,
											"end": 19437,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19428,
											"end": 19449,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19419,
											"end": 19449,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 19419,
											"end": 19449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19492,
											"end": 19496,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19482,
											"end": 19490,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19478,
											"end": 19497,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19471,
											"end": 19476,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19468,
											"end": 19498,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 19458,
											"end": 19498,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19458,
											"end": 19498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19187,
											"end": 19504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19187,
											"end": 19504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19111,
											"end": 19504,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 19111,
											"end": 19504,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19111,
											"end": 19504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19111,
											"end": 19504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19111,
											"end": 19504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19111,
											"end": 19504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19510,
											"end": 19570,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 19510,
											"end": 19570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19538,
											"end": 19541,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19559,
											"end": 19564,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19552,
											"end": 19564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19552,
											"end": 19564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19510,
											"end": 19570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19510,
											"end": 19570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19510,
											"end": 19570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19510,
											"end": 19570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19576,
											"end": 19718,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 19576,
											"end": 19718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19626,
											"end": 19635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19659,
											"end": 19712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 19677,
											"end": 19711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 19686,
											"end": 19710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 19704,
											"end": 19709,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19686,
											"end": 19710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 19686,
											"end": 19710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19686,
											"end": 19710,
											"name": "tag",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 19686,
											"end": 19710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19677,
											"end": 19711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 19677,
											"end": 19711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19677,
											"end": 19711,
											"name": "tag",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 19677,
											"end": 19711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19659,
											"end": 19712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 19659,
											"end": 19712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19659,
											"end": 19712,
											"name": "tag",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 19659,
											"end": 19712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19646,
											"end": 19712,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19646,
											"end": 19712,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19576,
											"end": 19718,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19576,
											"end": 19718,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19576,
											"end": 19718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19576,
											"end": 19718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19724,
											"end": 19799,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 19724,
											"end": 19799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19767,
											"end": 19770,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19788,
											"end": 19793,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19781,
											"end": 19793,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19781,
											"end": 19793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19724,
											"end": 19799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19724,
											"end": 19799,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19724,
											"end": 19799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19724,
											"end": 19799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19805,
											"end": 20074,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 19805,
											"end": 20074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19915,
											"end": 19954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 19946,
											"end": 19953,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19915,
											"end": 19954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 19915,
											"end": 19954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19915,
											"end": 19954,
											"name": "tag",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 19915,
											"end": 19954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 20025,
											"end": 20066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 20049,
											"end": 20065,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20025,
											"end": 20066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 20025,
											"end": 20066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20025,
											"end": 20066,
											"name": "tag",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 20025,
											"end": 20066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20017,
											"end": 20023,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20010,
											"end": 20014,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20004,
											"end": 20015,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 19976,
											"end": 20067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19976,
											"end": 20067,
											"name": "tag",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 19976,
											"end": 20067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19970,
											"end": 19974,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19963,
											"end": 20068,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19881,
											"end": 20074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19805,
											"end": 20074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19805,
											"end": 20074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19805,
											"end": 20074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19805,
											"end": 20074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20080,
											"end": 20153,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 20080,
											"end": 20153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20125,
											"end": 20128,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20080,
											"end": 20153,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20080,
											"end": 20153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20159,
											"end": 20348,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 20159,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20236,
											"end": 20268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "689"
										},
										{
											"begin": 20236,
											"end": 20268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 20236,
											"end": 20268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20236,
											"end": 20268,
											"name": "tag",
											"source": 12,
											"value": "689"
										},
										{
											"begin": 20236,
											"end": 20268,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20277,
											"end": 20342,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "690"
										},
										{
											"begin": 20335,
											"end": 20341,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20327,
											"end": 20333,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20321,
											"end": 20325,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20277,
											"end": 20342,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 20277,
											"end": 20342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20277,
											"end": 20342,
											"name": "tag",
											"source": 12,
											"value": "690"
										},
										{
											"begin": 20277,
											"end": 20342,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20212,
											"end": 20348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20159,
											"end": 20348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20159,
											"end": 20348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20159,
											"end": 20348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20354,
											"end": 20540,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 20354,
											"end": 20540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20414,
											"end": 20534,
											"name": "tag",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 20414,
											"end": 20534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20431,
											"end": 20434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20424,
											"end": 20429,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20421,
											"end": 20435,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 20414,
											"end": 20534,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20414,
											"end": 20534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 20414,
											"end": 20534,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20485,
											"end": 20524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "695"
										},
										{
											"begin": 20522,
											"end": 20523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20515,
											"end": 20520,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20485,
											"end": 20524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 20485,
											"end": 20524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20485,
											"end": 20524,
											"name": "tag",
											"source": 12,
											"value": "695"
										},
										{
											"begin": 20485,
											"end": 20524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20458,
											"end": 20459,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 20451,
											"end": 20456,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20447,
											"end": 20460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20438,
											"end": 20460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20438,
											"end": 20460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20414,
											"end": 20534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 20414,
											"end": 20534,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20414,
											"end": 20534,
											"name": "tag",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 20414,
											"end": 20534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20354,
											"end": 20540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20354,
											"end": 20540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20354,
											"end": 20540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20546,
											"end": 21089,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 20546,
											"end": 21089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20647,
											"end": 20649,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 20642,
											"end": 20645,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20639,
											"end": 20650,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 20636,
											"end": 21082,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20636,
											"end": 21082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 20636,
											"end": 21082,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20681,
											"end": 20719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 20713,
											"end": 20718,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20681,
											"end": 20719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 20681,
											"end": 20719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20681,
											"end": 20719,
											"name": "tag",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 20681,
											"end": 20719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20765,
											"end": 20794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 20783,
											"end": 20793,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20765,
											"end": 20794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 20765,
											"end": 20794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20765,
											"end": 20794,
											"name": "tag",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 20765,
											"end": 20794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20755,
											"end": 20763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20751,
											"end": 20795,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20948,
											"end": 20950,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20936,
											"end": 20946,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20933,
											"end": 20951,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 20930,
											"end": 20979,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20930,
											"end": 20979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 20930,
											"end": 20979,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20969,
											"end": 20977,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20954,
											"end": 20977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20954,
											"end": 20977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20930,
											"end": 20979,
											"name": "tag",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 20930,
											"end": 20979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20992,
											"end": 21072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "701"
										},
										{
											"begin": 21048,
											"end": 21070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "702"
										},
										{
											"begin": 21066,
											"end": 21069,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21048,
											"end": 21070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 21048,
											"end": 21070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21048,
											"end": 21070,
											"name": "tag",
											"source": 12,
											"value": "702"
										},
										{
											"begin": 21048,
											"end": 21070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21038,
											"end": 21046,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21034,
											"end": 21071,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21021,
											"end": 21032,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20992,
											"end": 21072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 20992,
											"end": 21072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20992,
											"end": 21072,
											"name": "tag",
											"source": 12,
											"value": "701"
										},
										{
											"begin": 20992,
											"end": 21072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20651,
											"end": 21082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20651,
											"end": 21082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20636,
											"end": 21082,
											"name": "tag",
											"source": 12,
											"value": "697"
										},
										{
											"begin": 20636,
											"end": 21082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20546,
											"end": 21089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20546,
											"end": 21089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20546,
											"end": 21089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20546,
											"end": 21089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21095,
											"end": 21212,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 21095,
											"end": 21212,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21149,
											"end": 21157,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21199,
											"end": 21204,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21193,
											"end": 21197,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21189,
											"end": 21205,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 21168,
											"end": 21205,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21168,
											"end": 21205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21095,
											"end": 21212,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21095,
											"end": 21212,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21095,
											"end": 21212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21095,
											"end": 21212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21095,
											"end": 21212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21218,
											"end": 21387,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 21218,
											"end": 21387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21262,
											"end": 21268,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21295,
											"end": 21346,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "705"
										},
										{
											"begin": 21343,
											"end": 21344,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21339,
											"end": 21345,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 21331,
											"end": 21336,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21328,
											"end": 21329,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 21324,
											"end": 21337,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 21295,
											"end": 21346,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 21295,
											"end": 21346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21295,
											"end": 21346,
											"name": "tag",
											"source": 12,
											"value": "705"
										},
										{
											"begin": 21295,
											"end": 21346,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21291,
											"end": 21347,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 21376,
											"end": 21380,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21370,
											"end": 21374,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21366,
											"end": 21381,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 21356,
											"end": 21381,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21356,
											"end": 21381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21269,
											"end": 21387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21218,
											"end": 21387,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21218,
											"end": 21387,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21218,
											"end": 21387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21218,
											"end": 21387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21218,
											"end": 21387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21392,
											"end": 21687,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 21392,
											"end": 21687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21468,
											"end": 21472,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21614,
											"end": 21643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "707"
										},
										{
											"begin": 21639,
											"end": 21642,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21633,
											"end": 21637,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21614,
											"end": 21643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 21614,
											"end": 21643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21614,
											"end": 21643,
											"name": "tag",
											"source": 12,
											"value": "707"
										},
										{
											"begin": 21614,
											"end": 21643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21606,
											"end": 21643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21606,
											"end": 21643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21676,
											"end": 21679,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21673,
											"end": 21674,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 21669,
											"end": 21680,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 21663,
											"end": 21667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21660,
											"end": 21681,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 21652,
											"end": 21681,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21652,
											"end": 21681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21392,
											"end": 21687,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21392,
											"end": 21687,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21392,
											"end": 21687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21392,
											"end": 21687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21392,
											"end": 21687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21692,
											"end": 23087,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 21692,
											"end": 23087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21809,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 21842,
											"end": 21845,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21809,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 21809,
											"end": 21846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21809,
											"end": 21846,
											"name": "tag",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 21809,
											"end": 21846,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21911,
											"end": 21929,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21903,
											"end": 21909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21900,
											"end": 21930,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 21897,
											"end": 21953,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 21897,
											"end": 21953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "710"
										},
										{
											"begin": 21897,
											"end": 21953,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21933,
											"end": 21951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "711"
										},
										{
											"begin": 21933,
											"end": 21951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 21933,
											"end": 21951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21933,
											"end": 21951,
											"name": "tag",
											"source": 12,
											"value": "711"
										},
										{
											"begin": 21933,
											"end": 21951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21897,
											"end": 21953,
											"name": "tag",
											"source": 12,
											"value": "710"
										},
										{
											"begin": 21897,
											"end": 21953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21977,
											"end": 22015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "712"
										},
										{
											"begin": 22009,
											"end": 22013,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22003,
											"end": 22014,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 21977,
											"end": 22015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 21977,
											"end": 22015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21977,
											"end": 22015,
											"name": "tag",
											"source": 12,
											"value": "712"
										},
										{
											"begin": 21977,
											"end": 22015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22062,
											"end": 22129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "713"
										},
										{
											"begin": 22122,
											"end": 22128,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22114,
											"end": 22120,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22108,
											"end": 22112,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22062,
											"end": 22129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 22062,
											"end": 22129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22062,
											"end": 22129,
											"name": "tag",
											"source": 12,
											"value": "713"
										},
										{
											"begin": 22062,
											"end": 22129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22156,
											"end": 22157,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22180,
											"end": 22184,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22167,
											"end": 22184,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22167,
											"end": 22184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22212,
											"end": 22214,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 22204,
											"end": 22210,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22201,
											"end": 22215,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 22229,
											"end": 22230,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 22224,
											"end": 22842,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22224,
											"end": 22842,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 22224,
											"end": 22842,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "715"
										},
										{
											"begin": 22224,
											"end": 22842,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22886,
											"end": 22887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22903,
											"end": 22909,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22900,
											"end": 22977,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22900,
											"end": 22977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "716"
										},
										{
											"begin": 22900,
											"end": 22977,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22952,
											"end": 22961,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22947,
											"end": 22950,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 22943,
											"end": 22962,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22937,
											"end": 22963,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 22928,
											"end": 22963,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22928,
											"end": 22963,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22900,
											"end": 22977,
											"name": "tag",
											"source": 12,
											"value": "716"
										},
										{
											"begin": 22900,
											"end": 22977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23003,
											"end": 23070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "717"
										},
										{
											"begin": 23063,
											"end": 23069,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23056,
											"end": 23061,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23003,
											"end": 23070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 23003,
											"end": 23070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23003,
											"end": 23070,
											"name": "tag",
											"source": 12,
											"value": "717"
										},
										{
											"begin": 23003,
											"end": 23070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22997,
											"end": 23001,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22990,
											"end": 23071,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 22859,
											"end": 23081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22194,
											"end": 23081,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "714"
										},
										{
											"begin": 22194,
											"end": 23081,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22224,
											"end": 22842,
											"name": "tag",
											"source": 12,
											"value": "715"
										},
										{
											"begin": 22224,
											"end": 22842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22276,
											"end": 22280,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 22272,
											"end": 22281,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 22264,
											"end": 22270,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22260,
											"end": 22282,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 22310,
											"end": 22347,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "718"
										},
										{
											"begin": 22342,
											"end": 22346,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22310,
											"end": 22347,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 22310,
											"end": 22347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22310,
											"end": 22347,
											"name": "tag",
											"source": 12,
											"value": "718"
										},
										{
											"begin": 22310,
											"end": 22347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22369,
											"end": 22370,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22383,
											"end": 22591,
											"name": "tag",
											"source": 12,
											"value": "719"
										},
										{
											"begin": 22383,
											"end": 22591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22397,
											"end": 22404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22394,
											"end": 22395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22391,
											"end": 22405,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 22383,
											"end": 22591,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22383,
											"end": 22591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "721"
										},
										{
											"begin": 22383,
											"end": 22591,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22476,
											"end": 22485,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22471,
											"end": 22474,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 22467,
											"end": 22486,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22461,
											"end": 22487,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 22453,
											"end": 22459,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22446,
											"end": 22488,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 22527,
											"end": 22528,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 22519,
											"end": 22525,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22515,
											"end": 22529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22505,
											"end": 22529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22505,
											"end": 22529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22574,
											"end": 22576,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22563,
											"end": 22572,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22559,
											"end": 22577,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22546,
											"end": 22577,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 22546,
											"end": 22577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22420,
											"end": 22424,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22417,
											"end": 22418,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22413,
											"end": 22425,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22408,
											"end": 22425,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22408,
											"end": 22425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22383,
											"end": 22591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "719"
										},
										{
											"begin": 22383,
											"end": 22591,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22383,
											"end": 22591,
											"name": "tag",
											"source": 12,
											"value": "721"
										},
										{
											"begin": 22383,
											"end": 22591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22619,
											"end": 22625,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22610,
											"end": 22617,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22607,
											"end": 22626,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 22604,
											"end": 22783,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22604,
											"end": 22783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "722"
										},
										{
											"begin": 22604,
											"end": 22783,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22677,
											"end": 22686,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22672,
											"end": 22675,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 22668,
											"end": 22687,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22662,
											"end": 22688,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 22720,
											"end": 22768,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "723"
										},
										{
											"begin": 22762,
											"end": 22766,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 22754,
											"end": 22760,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 22750,
											"end": 22767,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 22739,
											"end": 22748,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22720,
											"end": 22768,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 22720,
											"end": 22768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22720,
											"end": 22768,
											"name": "tag",
											"source": 12,
											"value": "723"
										},
										{
											"begin": 22720,
											"end": 22768,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22712,
											"end": 22718,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22705,
											"end": 22769,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 22627,
											"end": 22783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22604,
											"end": 22783,
											"name": "tag",
											"source": 12,
											"value": "722"
										},
										{
											"begin": 22604,
											"end": 22783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22829,
											"end": 22830,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 22825,
											"end": 22826,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 22817,
											"end": 22823,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 22813,
											"end": 22827,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 22809,
											"end": 22831,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22803,
											"end": 22807,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 22796,
											"end": 22832,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 22231,
											"end": 22842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22231,
											"end": 22842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22231,
											"end": 22842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22194,
											"end": 23081,
											"name": "tag",
											"source": 12,
											"value": "714"
										},
										{
											"begin": 22194,
											"end": 23081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22194,
											"end": 23081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21784,
											"end": 23087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21784,
											"end": 23087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21784,
											"end": 23087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21692,
											"end": 23087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21692,
											"end": 23087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21692,
											"end": 23087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23093,
											"end": 23241,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 23093,
											"end": 23241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23195,
											"end": 23206,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23232,
											"end": 23235,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23217,
											"end": 23235,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23217,
											"end": 23235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23093,
											"end": 23241,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23093,
											"end": 23241,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23093,
											"end": 23241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23093,
											"end": 23241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23093,
											"end": 23241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23247,
											"end": 23637,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 23247,
											"end": 23637,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23353,
											"end": 23356,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23381,
											"end": 23420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 23414,
											"end": 23419,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23381,
											"end": 23420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 23381,
											"end": 23420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23381,
											"end": 23420,
											"name": "tag",
											"source": 12,
											"value": "726"
										},
										{
											"begin": 23381,
											"end": 23420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23436,
											"end": 23525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "727"
										},
										{
											"begin": 23518,
											"end": 23524,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23513,
											"end": 23516,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23436,
											"end": 23525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 23436,
											"end": 23525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23436,
											"end": 23525,
											"name": "tag",
											"source": 12,
											"value": "727"
										},
										{
											"begin": 23436,
											"end": 23525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23429,
											"end": 23525,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 23429,
											"end": 23525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23534,
											"end": 23599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "728"
										},
										{
											"begin": 23592,
											"end": 23598,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23587,
											"end": 23590,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23580,
											"end": 23584,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23573,
											"end": 23578,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 23569,
											"end": 23585,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23534,
											"end": 23599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 23534,
											"end": 23599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23534,
											"end": 23599,
											"name": "tag",
											"source": 12,
											"value": "728"
										},
										{
											"begin": 23534,
											"end": 23599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23624,
											"end": 23630,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 23619,
											"end": 23622,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23615,
											"end": 23631,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23608,
											"end": 23631,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23608,
											"end": 23631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23357,
											"end": 23637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23247,
											"end": 23637,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23247,
											"end": 23637,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23247,
											"end": 23637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23247,
											"end": 23637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23247,
											"end": 23637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23643,
											"end": 24078,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 23643,
											"end": 24078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23823,
											"end": 23826,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23845,
											"end": 23940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "730"
										},
										{
											"begin": 23936,
											"end": 23939,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23927,
											"end": 23933,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23845,
											"end": 23940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 23845,
											"end": 23940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23845,
											"end": 23940,
											"name": "tag",
											"source": 12,
											"value": "730"
										},
										{
											"begin": 23845,
											"end": 23940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23838,
											"end": 23940,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23838,
											"end": 23940,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23957,
											"end": 24052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "731"
										},
										{
											"begin": 24048,
											"end": 24051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24039,
											"end": 24045,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23957,
											"end": 24052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 23957,
											"end": 24052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23957,
											"end": 24052,
											"name": "tag",
											"source": 12,
											"value": "731"
										},
										{
											"begin": 23957,
											"end": 24052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23950,
											"end": 24052,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23950,
											"end": 24052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24069,
											"end": 24072,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24062,
											"end": 24072,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24062,
											"end": 24072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23643,
											"end": 24078,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 23643,
											"end": 24078,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23643,
											"end": 24078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23643,
											"end": 24078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23643,
											"end": 24078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23643,
											"end": 24078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24084,
											"end": 24182,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 24084,
											"end": 24182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24135,
											"end": 24141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24169,
											"end": 24174,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24163,
											"end": 24175,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 24153,
											"end": 24175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24153,
											"end": 24175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24084,
											"end": 24182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24084,
											"end": 24182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24084,
											"end": 24182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24084,
											"end": 24182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24356,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 24188,
											"end": 24356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24271,
											"end": 24282,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24305,
											"end": 24311,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24300,
											"end": 24303,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24293,
											"end": 24312,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24345,
											"end": 24349,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24340,
											"end": 24343,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24336,
											"end": 24350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24321,
											"end": 24350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24321,
											"end": 24350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24356,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24356,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24188,
											"end": 24356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24362,
											"end": 24735,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 24362,
											"end": 24735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24448,
											"end": 24451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24476,
											"end": 24514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "735"
										},
										{
											"begin": 24508,
											"end": 24513,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24476,
											"end": 24514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 24476,
											"end": 24514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24476,
											"end": 24514,
											"name": "tag",
											"source": 12,
											"value": "735"
										},
										{
											"begin": 24476,
											"end": 24514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24530,
											"end": 24600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "736"
										},
										{
											"begin": 24593,
											"end": 24599,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24588,
											"end": 24591,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24530,
											"end": 24600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 24530,
											"end": 24600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24530,
											"end": 24600,
											"name": "tag",
											"source": 12,
											"value": "736"
										},
										{
											"begin": 24530,
											"end": 24600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24523,
											"end": 24600,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 24523,
											"end": 24600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24609,
											"end": 24674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "737"
										},
										{
											"begin": 24667,
											"end": 24673,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24662,
											"end": 24665,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24655,
											"end": 24659,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24648,
											"end": 24653,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 24644,
											"end": 24660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24609,
											"end": 24674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 24609,
											"end": 24674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24609,
											"end": 24674,
											"name": "tag",
											"source": 12,
											"value": "737"
										},
										{
											"begin": 24609,
											"end": 24674,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24699,
											"end": 24728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "738"
										},
										{
											"begin": 24721,
											"end": 24727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24699,
											"end": 24728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 24699,
											"end": 24728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24699,
											"end": 24728,
											"name": "tag",
											"source": 12,
											"value": "738"
										},
										{
											"begin": 24699,
											"end": 24728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24694,
											"end": 24697,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24690,
											"end": 24729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24683,
											"end": 24729,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24683,
											"end": 24729,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24452,
											"end": 24735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24362,
											"end": 24735,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24362,
											"end": 24735,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24362,
											"end": 24735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24362,
											"end": 24735,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24362,
											"end": 24735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24741,
											"end": 25381,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 24741,
											"end": 25381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24936,
											"end": 24940,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24974,
											"end": 24977,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 24963,
											"end": 24972,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24959,
											"end": 24978,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24951,
											"end": 24978,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24951,
											"end": 24978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24988,
											"end": 25059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "740"
										},
										{
											"begin": 25056,
											"end": 25057,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25045,
											"end": 25054,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25041,
											"end": 25058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25032,
											"end": 25038,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 24988,
											"end": 25059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 24988,
											"end": 25059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24988,
											"end": 25059,
											"name": "tag",
											"source": 12,
											"value": "740"
										},
										{
											"begin": 24988,
											"end": 25059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25069,
											"end": 25141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "741"
										},
										{
											"begin": 25137,
											"end": 25139,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25126,
											"end": 25135,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25122,
											"end": 25140,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25113,
											"end": 25119,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 25069,
											"end": 25141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 25069,
											"end": 25141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25069,
											"end": 25141,
											"name": "tag",
											"source": 12,
											"value": "741"
										},
										{
											"begin": 25069,
											"end": 25141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25151,
											"end": 25223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "742"
										},
										{
											"begin": 25219,
											"end": 25221,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 25208,
											"end": 25217,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25204,
											"end": 25222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25195,
											"end": 25201,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 25151,
											"end": 25223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 25151,
											"end": 25223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25151,
											"end": 25223,
											"name": "tag",
											"source": 12,
											"value": "742"
										},
										{
											"begin": 25151,
											"end": 25223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25270,
											"end": 25279,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25264,
											"end": 25268,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25260,
											"end": 25280,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25255,
											"end": 25257,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 25244,
											"end": 25253,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25240,
											"end": 25258,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25233,
											"end": 25281,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25298,
											"end": 25374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "743"
										},
										{
											"begin": 25369,
											"end": 25373,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25360,
											"end": 25366,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25298,
											"end": 25374,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 25298,
											"end": 25374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25298,
											"end": 25374,
											"name": "tag",
											"source": 12,
											"value": "743"
										},
										{
											"begin": 25298,
											"end": 25374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25290,
											"end": 25374,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25290,
											"end": 25374,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24741,
											"end": 25381,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 24741,
											"end": 25381,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 24741,
											"end": 25381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24741,
											"end": 25381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24741,
											"end": 25381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24741,
											"end": 25381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24741,
											"end": 25381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24741,
											"end": 25381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25387,
											"end": 25528,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 25387,
											"end": 25528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25443,
											"end": 25448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25474,
											"end": 25480,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25468,
											"end": 25481,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 25459,
											"end": 25481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25459,
											"end": 25481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25490,
											"end": 25522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "745"
										},
										{
											"begin": 25516,
											"end": 25521,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25490,
											"end": 25522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 25490,
											"end": 25522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25490,
											"end": 25522,
											"name": "tag",
											"source": 12,
											"value": "745"
										},
										{
											"begin": 25490,
											"end": 25522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25387,
											"end": 25528,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25387,
											"end": 25528,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25387,
											"end": 25528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25387,
											"end": 25528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25387,
											"end": 25528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25534,
											"end": 25883,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 25534,
											"end": 25883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25603,
											"end": 25609,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25652,
											"end": 25654,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25640,
											"end": 25649,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25631,
											"end": 25638,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25627,
											"end": 25650,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25623,
											"end": 25655,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 25620,
											"end": 25739,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 25620,
											"end": 25739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "747"
										},
										{
											"begin": 25620,
											"end": 25739,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25658,
											"end": 25737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "748"
										},
										{
											"begin": 25658,
											"end": 25737,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 25658,
											"end": 25737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25658,
											"end": 25737,
											"name": "tag",
											"source": 12,
											"value": "748"
										},
										{
											"begin": 25658,
											"end": 25737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25620,
											"end": 25739,
											"name": "tag",
											"source": 12,
											"value": "747"
										},
										{
											"begin": 25620,
											"end": 25739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25778,
											"end": 25779,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25803,
											"end": 25866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "749"
										},
										{
											"begin": 25858,
											"end": 25865,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25849,
											"end": 25855,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25838,
											"end": 25847,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 25834,
											"end": 25856,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25803,
											"end": 25866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 25803,
											"end": 25866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25803,
											"end": 25866,
											"name": "tag",
											"source": 12,
											"value": "749"
										},
										{
											"begin": 25803,
											"end": 25866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25793,
											"end": 25866,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25793,
											"end": 25866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25749,
											"end": 25876,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25534,
											"end": 25883,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25534,
											"end": 25883,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25534,
											"end": 25883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25534,
											"end": 25883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25534,
											"end": 25883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25889,
											"end": 26069,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 25889,
											"end": 26069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25937,
											"end": 26014,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25934,
											"end": 25935,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25927,
											"end": 26015,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26034,
											"end": 26038,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 26031,
											"end": 26032,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 26024,
											"end": 26039,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26058,
											"end": 26062,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 26055,
											"end": 26056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26048,
											"end": 26063,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 26075,
											"end": 26407,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 26075,
											"end": 26407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26196,
											"end": 26200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26234,
											"end": 26236,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 26223,
											"end": 26232,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26219,
											"end": 26237,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26211,
											"end": 26237,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26211,
											"end": 26237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26247,
											"end": 26318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "752"
										},
										{
											"begin": 26315,
											"end": 26316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26304,
											"end": 26313,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26300,
											"end": 26317,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26291,
											"end": 26297,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26247,
											"end": 26318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 26247,
											"end": 26318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26247,
											"end": 26318,
											"name": "tag",
											"source": 12,
											"value": "752"
										},
										{
											"begin": 26247,
											"end": 26318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26328,
											"end": 26400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "753"
										},
										{
											"begin": 26396,
											"end": 26398,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26385,
											"end": 26394,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26381,
											"end": 26399,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26372,
											"end": 26378,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26328,
											"end": 26400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 26328,
											"end": 26400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26328,
											"end": 26400,
											"name": "tag",
											"source": 12,
											"value": "753"
										},
										{
											"begin": 26328,
											"end": 26400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26075,
											"end": 26407,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 26075,
											"end": 26407,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 26075,
											"end": 26407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26075,
											"end": 26407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26075,
											"end": 26407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26075,
											"end": 26407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAdmim(address,string)": "8edfc059",
							"addCandidate(address,string)": "9a594f06",
							"admins(address)": "429b62e5",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"candidates_names(address)": "23202fe3",
							"deleteAdmim(address)": "b3849e2a",
							"deleteandidate(address)": "12ee1b0b",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"nextTokenId()": "75794a3c",
							"num_votes(address)": "78d66c39",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"showMyVote()": "3219ac2a",
							"showVotesCandidate(address)": "8a7c3a32",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"vote(address)": "6dd7d8ea",
							"votes(address)": "d8bff5a5",
							"votingEther()": "63f67b54"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admim_adress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"addAdmim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate_adress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"addCandidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"candidates_names\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admim_adress\",\"type\":\"address\"}],\"name\":\"deleteAdmim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate_adress\",\"type\":\"address\"}],\"name\":\"deleteandidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"num_votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showMyVote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate_adress\",\"type\":\"address\"}],\"name\":\"showVotesCandidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate_adress\",\"type\":\"address\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"VotingUSP\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0xe6360c071d39373a8e950c91ad255912316922e5592900fe38ae934ead4a8337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fe56cadd4c2fcaa9658f7c061a4bb829c4259322d4fdc13272ca7779ae5c0ac\",\"dweb:/ipfs/QmNiFWQNMgYm1Z3kvuGnZCQU5AQ4q2EjHW9zfGyP7ZqXPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "contracts/MyToken.sol:VotingUSP",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/MyToken.sol:VotingUSP",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "contracts/MyToken.sol:VotingUSP",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "contracts/MyToken.sol:VotingUSP",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "contracts/MyToken.sol:VotingUSP",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "contracts/MyToken.sol:VotingUSP",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2787,
								"contract": "contracts/MyToken.sol:VotingUSP",
								"label": "nextTokenId",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2790,
								"contract": "contracts/MyToken.sol:VotingUSP",
								"label": "votingEther",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 2794,
								"contract": "contracts/MyToken.sol:VotingUSP",
								"label": "admins",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_string_storage)"
							},
							{
								"astId": 2798,
								"contract": "contracts/MyToken.sol:VotingUSP",
								"label": "candidates_names",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_string_storage)"
							},
							{
								"astId": 2802,
								"contract": "contracts/MyToken.sol:VotingUSP",
								"label": "votes",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 2806,
								"contract": "contracts/MyToken.sol:VotingUSP",
								"label": "num_votes",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1330
						],
						"ERC165": [
							1609
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							1621
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"Strings": [
							1585
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1263,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1281,
							"src": "172:54:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1280,
										"src": "180:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1309,
							"src": "227:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "235:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1331,
							"src": "293:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1330,
										"src": "301:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1586,
							"src": "342:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1585,
										"src": "350:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1610,
							"src": "391:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 149,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1621,
										"src": "399:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 150,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1609,
										"src": "408:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 137,
							"src": "461:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "469:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"804:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1330,
										"src": "804:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"813:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1609,
										"src": "813:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC721",
										"nameLocations": [
											"821:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "821:7:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1308,
										"src": "830:15:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "847:13:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:1"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1145,
							"linearizedBaseContracts": [
								1145,
								89,
								1308,
								1262,
								1609,
								1621,
								1330
							],
							"name": "ERC721",
							"nameLocation": "794:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 167,
									"libraryName": {
										"id": 165,
										"name": "Strings",
										"nameLocations": [
											"873:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1585,
										"src": "873:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:1",
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "917:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "964:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "993:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 174,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:1",
										"keyType": {
											"id": 172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1051:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 178,
										"keyName": "owner",
										"keyNameLocation": "1067:5:1",
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1109:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 182,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:1",
										"keyType": {
											"id": 180,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 189,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1175:86:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 188,
										"keyName": "owner",
										"keyNameLocation": "1191:5:1",
										"keyType": {
											"id": 184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 187,
											"keyName": "operator",
											"keyNameLocation": "1216:8:1",
											"keyType": {
												"id": 185,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1437:57:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1447:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 198,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1455:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1470:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 202,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1480:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1393:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1414:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:1"
									},
									"scope": 1145,
									"src": "1381:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1608,
										1620
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1669:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1698:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 219,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1262,
																			"src": "1718:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 218,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1262",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1754:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 225,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1308,
																			"src": "1774:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 224,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1308",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 232,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1842:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 230,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1145_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1608,
															"src": "1818:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 216,
												"id": 235,
												"nodeType": "Return",
												"src": "1679:175:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 211,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1609,
												"src": "1637:6:1"
											},
											{
												"id": 212,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1621,
												"src": "1645:7:1"
											}
										],
										"src": "1628:25:1"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1588:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 208,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1663:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:1"
									},
									"scope": 1145,
									"src": "1561:300:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1992:136:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "IfStatement",
												"src": "2002:87:1",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "2027:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 252,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 251,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2048:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 257,
															"nodeType": "RevertStatement",
															"src": "2041:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 260,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2105:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 262,
													"indexExpression": {
														"id": 261,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2115:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 263,
												"nodeType": "Return",
												"src": "2098:23:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1939:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1983:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:1"
									},
									"scope": 1145,
									"src": "1920:208:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1195
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2257:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "2288:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 273,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2274:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 272,
												"id": 276,
												"nodeType": "Return",
												"src": "2267:29:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2202:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2248:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:1"
									},
									"scope": 1145,
									"src": "2185:118:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2425:29:1",
										"statements": [
											{
												"expression": {
													"id": 284,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2442:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 283,
												"id": 285,
												"nodeType": "Return",
												"src": "2435:12:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2410:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:1"
									},
									"scope": 1145,
									"src": "2365:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1299
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2580:31:1",
										"statements": [
											{
												"expression": {
													"id": 293,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 292,
												"id": 294,
												"nodeType": "Return",
												"src": "2590:14:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2565:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:1"
									},
									"scope": 1145,
									"src": "2518:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "2756:176:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2780:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2766:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:1"
											},
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "2799:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 308,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2823:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 315,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "2856:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 313,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:1",
													"trueExpression": {
														"arguments": [
															{
																"id": 323,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "2892:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 324,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "2901:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:1",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1398,
																	"src": "2901:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 320,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:1",
																	"typeDescriptions": {}
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:1",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 303,
												"id": 330,
												"nodeType": "Return",
												"src": "2843:82:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2695:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2741:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:1"
									},
									"scope": 1145,
									"src": "2677:255:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3240:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 337,
												"id": 339,
												"nodeType": "Return",
												"src": "3250:9:1"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3225:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:1"
									},
									"scope": 1145,
									"src": "3174:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3384:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "3403:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3407:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 352,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3416:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 349,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 948,
														"src": "3394:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3340:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3352:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:1"
									},
									"scope": 1145,
									"src": "3323:113:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1251
									],
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "3573:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3583:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3636:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "3623:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 364,
												"id": 372,
												"nodeType": "Return",
												"src": "3616:28:1"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3564:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:1"
									},
									"scope": 1145,
									"src": "3497:154:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3793:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3822:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3836:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "3846:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 382,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "3803:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3745:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3763:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:1"
									},
									"scope": 1145,
									"src": "3718:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "4022:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 400,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4039:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4058:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "4065:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "4032:42:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3954:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3969:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4016:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:1"
									},
									"scope": 1145,
									"src": "3928:153:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "4223:498:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "4237:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "4233:87:1",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "4255:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 424,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 423,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4276:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 429,
															"nodeType": "RevertStatement",
															"src": "4269:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "4538:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 432,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4570:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4574:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 437,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "4583:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 434,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4562:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "4610:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 442,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4627:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "4606:109:1",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "4633:82:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 445,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "4675:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 446,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "4681:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 447,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "4690:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 444,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4654:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 449,
															"nodeType": "RevertStatement",
															"src": "4647:57:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4165:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4179:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4191:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:1"
									},
									"scope": 1145,
									"src": "4143:578:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1217
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "4863:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4890:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "4896:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 463,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															497
														],
														"referencedDeclaration": 497,
														"src": "4873:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4813:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4827:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4839:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:1"
									},
									"scope": 1145,
									"src": "4787:132:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1207
									],
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "5088:105:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5117:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5121:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5098:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5162:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5168:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5172:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5181:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 489,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "5139:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5011:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5037:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5054:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:1"
									},
									"scope": 1145,
									"src": "4985:208:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "5782:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 505,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5799:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 507,
													"indexExpression": {
														"id": 506,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "5807:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 504,
												"id": 508,
												"nodeType": "Return",
												"src": "5792:23:1"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5725:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5773:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:1"
									},
									"scope": 1145,
									"src": "5707:115:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6017:48:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6034:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "6050:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 517,
												"id": 521,
												"nodeType": "Return",
												"src": "6027:31:1"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:1",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5960:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:1"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6008:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:1"
									},
									"scope": 1145,
									"src": "5938:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "6485:163:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 535,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "6514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "6552:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 542,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "6561:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 545,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "6589:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 546,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "6596:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 544,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "6572:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 550,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "6621:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 549,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "6608:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 552,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "6633:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 555,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 534,
												"id": 557,
												"nodeType": "Return",
												"src": "6495:146:1"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:1",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6399:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6414:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6431:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6479:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:1"
									},
									"scope": 1145,
									"src": "6376:272:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "7179:271:1",
										"statements": [
											{
												"condition": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:1",
													"subExpression": {
														"arguments": [
															{
																"id": 570,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "7208:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 571,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "7215:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 572,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "7224:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 569,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7194:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "7189:255:1",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "7234:210:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 575,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "7252:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 576,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 591,
																"nodeType": "Block",
																"src": "7350:84:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 587,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "7402:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 588,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7411:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 586,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "7375:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 590,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:1"
																	}
																]
															},
															"id": 592,
															"nodeType": "IfStatement",
															"src": "7248:186:1",
															"trueBody": {
																"id": 585,
																"nodeType": "Block",
																"src": "7273:71:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 582,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7321:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 581,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "7298:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 584,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:1",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7108:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7123:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7140:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:1"
									},
									"scope": 1145,
									"src": "7082:368:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "8167:78:1",
										"statements": [
											{
												"id": 610,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:1",
												"statements": [
													{
														"expression": {
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 604,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "8201:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 606,
																"indexExpression": {
																	"id": 605,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "8211:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 607,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "8223:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 609,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:1",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8135:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 600,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:1"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:1"
									},
									"scope": 1145,
									"src": "8092:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "8933:700:1",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "8943:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [
														{
															"id": 627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "8958:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 630,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "9035:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 631,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "IfStatement",
												"src": "9031:86:1",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "9055:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "9086:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 638,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "9092:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9098:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "9069:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 641,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9161:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 645,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 671,
												"nodeType": "IfStatement",
												"src": "9157:256:1",
												"trueBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "9181:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 651,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 655,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9298:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 656,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 650,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		948,
																		1014
																	],
																	"referencedDeclaration": 1014,
																	"src": "9277:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:1"
														},
														{
															"id": 669,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:1",
															"statements": [
																{
																	"expression": {
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 663,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9368:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 665,
																			"indexExpression": {
																				"id": 664,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "9378:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 668,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:1"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 672,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9427:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "9423:107:1",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "9445:85:1",
													"statements": [
														{
															"id": 684,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:1",
															"statements": [
																{
																	"expression": {
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 678,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9487:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 680,
																			"indexExpression": {
																				"id": 679,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "9497:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 683,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:1"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 687,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "9540:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9559:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 694,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "9586:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "9592:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9596:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "9577:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "9572:32:1"
											},
											{
												"expression": {
													"id": 699,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 625,
													"src": "9622:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 623,
												"id": 700,
												"nodeType": "Return",
												"src": "9615:11:1"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:1",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8855:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8867:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8884:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:1"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8924:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:1"
									},
									"scope": 1145,
									"src": "8838:795:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "10008:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "10022:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 711,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "10018:87:1",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "10040:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 717,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 716,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "10061:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 722,
															"nodeType": "RevertStatement",
															"src": "10054:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "10114:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 725,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 728,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "10146:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10150:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 730,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "10138:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "10184:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 737,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "10180:96:1",
												"trueBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "10213:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 743,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 742,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "10234:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 748,
															"nodeType": "RevertStatement",
															"src": "10227:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9970:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:1"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:1"
									},
									"scope": 1145,
									"src": "9955:327:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "10690:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10710:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "10714:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 760,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															793
														],
														"referencedDeclaration": 793,
														"src": "10700:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:1"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:1",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10652:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10664:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:1"
									},
									"scope": 1145,
									"src": "10633:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "11038:98:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11054:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11058:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "11048:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 783,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11111:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11115:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 789,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11124:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 782,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "11076:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:1"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10973:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10985:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11002:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:1"
									},
									"scope": 1145,
									"src": "10954:182:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "11503:186:1",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "11513:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 801,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "11537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "11591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "11587:96:1",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "11620:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "11664:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 819,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "11641:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "11634:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11477:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:1"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:1"
									},
									"scope": 1145,
									"src": "11462:227:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "12084:389:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 836,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "12098:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 837,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "12094:87:1",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "12116:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 843,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 842,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "12137:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "RevertStatement",
															"src": "12130:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "12190:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 851,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "12222:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "12226:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 853,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "12214:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "12260:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "12362:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "12379:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 883,
													"nodeType": "IfStatement",
													"src": "12358:109:1",
													"trueBody": {
														"id": 882,
														"nodeType": "Block",
														"src": "12385:82:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 877,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "12427:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 878,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "12433:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 879,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "12442:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 876,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12406:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 881,
																"nodeType": "RevertStatement",
																"src": "12399:57:1"
															}
														]
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "12256:211:1",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "12289:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 869,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "12333:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 868,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "12310:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 871,
															"nodeType": "RevertStatement",
															"src": "12303:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12046:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12058:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:1"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:1"
									},
									"scope": 1145,
									"src": "12013:460:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "13481:53:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "13505:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "13511:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "13515:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 896,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															904,
															930
														],
														"referencedDeclaration": 930,
														"src": "13491:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:1"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13429:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13443:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:1"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:1"
									},
									"scope": 1145,
									"src": "13406:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "13873:102:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13899:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "13883:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13944:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13950:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13954:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 926,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "13963:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 922,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "13921:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:1"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:1",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13794:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13808:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13820:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13837:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:1"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:1"
									},
									"scope": 1145,
									"src": "13771:204:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "14488:50:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "14507:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "14511:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "14520:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 1014,
														"src": "14498:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:1"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14436:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14448:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14465:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:1"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:1"
									},
									"scope": 1145,
									"src": "14418:120:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "14814:568:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 960,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "14880:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 961,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "14893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "14876:460:1",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "14913:423:1",
													"statements": [
														{
															"assignments": [
																969
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 969,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1005,
																	"src": "14927:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 973,
															"initialValue": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "14957:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 970,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "14943:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 974,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15093:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 980,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 969,
																			"src": "15115:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 981,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15124:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 985,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "15150:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 986,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "15157:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 984,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "15133:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 995,
															"nodeType": "IfStatement",
															"src": "15089:142:1",
															"trueBody": {
																"id": 994,
																"nodeType": "Block",
																"src": "15164:67:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 991,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "15211:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 990,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "15189:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 993,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:1"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 996,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "15249:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1004,
															"nodeType": "IfStatement",
															"src": "15245:81:1",
															"trueBody": {
																"id": 1003,
																"nodeType": "Block",
																"src": "15260:66:1",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 998,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "15292:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 999,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "15299:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1000,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "15303:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 997,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "15283:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1002,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1007,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "15346:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1009,
														"indexExpression": {
															"id": 1008,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "15362:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15373:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:1"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:1",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14738:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14767:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14781:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:1"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:1"
									},
									"scope": 1145,
									"src": "14720:662:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "15684:219:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "15698:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "15694:91:1",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "15722:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1031,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "15765:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "15743:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1033,
															"nodeType": "RevertStatement",
															"src": "15736:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1036,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "15794:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1039,
															"indexExpression": {
																"id": 1037,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "15813:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15820:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "15832:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1045,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "15870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15877:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "15887:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1044,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "15855:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "EmitStatement",
												"src": "15850:46:1"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15619:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15634:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15652:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:1"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:1"
									},
									"scope": 1145,
									"src": "15591:312:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "16210:169:1",
										"statements": [
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "16220:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1059,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"id": 1062,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "16245:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "16236:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "16267:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1066,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "16263:88:1",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "16288:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1072,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "16332:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1071,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "16309:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1074,
															"nodeType": "RevertStatement",
															"src": "16302:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1077,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "16367:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1078,
												"nodeType": "Return",
												"src": "16360:12:1"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:1",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16161:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:1"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16201:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:1"
									},
									"scope": 1145,
									"src": "16138:241:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "17020:680:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1092,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "17034:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "17030:664:1",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "17054:640:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1121,
																		"nodeType": "Block",
																		"src": "17168:162:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1110,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "17190:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1111,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1280,
																								"src": "17200:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:1",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1279,
																							"src": "17200:32:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1113,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1120,
																				"nodeType": "IfStatement",
																				"src": "17186:130:1",
																				"trueBody": {
																					"id": 1119,
																					"nodeType": "Block",
																					"src": "17243:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1116,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17294:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1115,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17272:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1118,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1122,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1109,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1108,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1122,
																				"src": "17153:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1107,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:1"
																	},
																	"src": "17144:186:1"
																},
																{
																	"block": {
																		"id": 1138,
																		"nodeType": "Block",
																		"src": "17359:325:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1126,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1124,
																							"src": "17381:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1128,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1136,
																					"nodeType": "Block",
																					"src": "17480:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:1",
																								"nodeType": "YulBlock",
																								"src": "17566:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:1",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:1"
																													},
																													"nativeSrc": "17599:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:1"
																													},
																													"nativeSrc": "17616:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:1"
																											},
																											"nativeSrc": "17592:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:1"
																										},
																										"nativeSrc": "17592:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1135,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:1"
																						}
																					]
																				},
																				"id": 1137,
																				"nodeType": "IfStatement",
																				"src": "17377:293:1",
																				"trueBody": {
																					"id": 1134,
																					"nodeType": "Block",
																					"src": "17401:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1131,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17452:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1130,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17430:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1132,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1133,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1139,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1125,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1124,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1139,
																				"src": "17338:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:1"
																	},
																	"src": "17331:353:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1101,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1320,
																			"src": "17109:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1103,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "17123:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "17129:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1105,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "17138:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1098,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "17088:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1097,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "17072:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1280",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:1",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1279,
																	"src": "17072:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1140,
															"nodeType": "TryStatement",
															"src": "17068:616:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16950:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16964:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16976:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16993:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:1"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:1"
									},
									"scope": 1145,
									"src": "16918:782:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1146,
							"src": "776:16926:1",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "107:17596:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1621
						],
						"IERC721": [
							1262
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1147,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 1622,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1148,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1621,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1151,
										"name": "IERC165",
										"nameLocations": [
											"287:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1621,
										"src": "287:7:2"
									},
									"id": 1152,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1262,
							"linearizedBaseContracts": [
								1262,
								1621
							],
							"name": "IERC721",
							"nameLocation": "276:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1161,
									"name": "Transfer",
									"nameLocation": "400:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "409:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "431:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "451:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:2"
									},
									"src": "394:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1170,
									"name": "Approval",
									"nameLocation": "587:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "596:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "619:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "645:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:2"
									},
									"src": "581:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1179,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "819:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "842:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "868:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:2"
									},
									"src": "798:85:2"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "989:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:2"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1027:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:2"
									},
									"scope": 1262,
									"src": "970:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1203:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:2"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1243:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:2"
									},
									"scope": 1262,
									"src": "1186:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1860:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1874:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1903:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:2"
									},
									"scope": 1262,
									"src": "1834:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2701:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:2"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:2"
									},
									"scope": 1262,
									"src": "2649:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3492:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3506:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:2"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:2"
									},
									"scope": 1262,
									"src": "3470:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4024:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4036:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:2"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:2"
									},
									"scope": 1262,
									"src": "4007:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4415:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4433:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:2"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:2"
									},
									"scope": 1262,
									"src": "4388:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4628:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:2"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4668:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:2"
									},
									"scope": 1262,
									"src": "4607:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4861:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4876:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4917:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:2"
									},
									"scope": 1262,
									"src": "4835:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1263,
							"src": "266:4659:2",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "108:4818:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1280
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1265,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1280,
							"linearizedBaseContracts": [
								1280
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "867:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "893:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "940:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:3"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "984:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:3"
									},
									"scope": 1280,
									"src": "832:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1281,
							"src": "295:699:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1262
						],
						"IERC721Metadata": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1309,
							"sourceUnit": 1263,
							"src": "153:39:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1283,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "161:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1286,
										"name": "IERC721",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "357:7:4"
									},
									"id": 1287,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1285,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1308,
							"linearizedBaseContracts": [
								1308,
								1262,
								1621
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:4"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "473:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:4"
									},
									"scope": 1308,
									"src": "434:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:4"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "600:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:4"
									},
									"scope": 1308,
									"src": "559:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:4"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "774:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:4"
									},
									"scope": 1308,
									"src": "716:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "328:463:4",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "127:665:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1330
						]
					},
					"id": 1331,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1330,
							"linearizedBaseContracts": [
								1330
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1316,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1318,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 1330,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1325,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1327,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 1330,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1331,
							"src": "624:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2675
						],
						"SignedMath": [
							2780
						],
						"Strings": [
							1585
						]
					},
					"id": 1586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1332,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1586,
							"sourceUnit": 2676,
							"src": "127:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1333,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2675,
										"src": "135:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1336,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1586,
							"sourceUnit": 2781,
							"src": "165:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1335,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2780,
										"src": "173:10:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1337,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1585,
							"linearizedBaseContracts": [
								1585
							],
							"name": "Strings",
							"nameLocation": "259:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1340,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1585,
									"src": "273:56:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1338,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1339,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1343,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1585,
									"src": "335:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1341,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:6",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1350,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "505:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "520:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:6"
									},
									"src": "470:66:6"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "708:627:6",
										"statements": [
											{
												"id": 1396,
												"nodeType": "UncheckedBlock",
												"src": "718:611:6",
												"statements": [
													{
														"assignments": [
															1359
														],
														"declarations": [
															{
																"constant": false,
																"id": 1359,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1396,
																"src": "742:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1358,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1366,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1362,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1353,
																		"src": "770:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1360,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2675,
																		"src": "759:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2675_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2495,
																	"src": "759:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:6"
													},
													{
														"assignments": [
															1368
														],
														"declarations": [
															{
																"constant": false,
																"id": 1368,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1396,
																"src": "794:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1367,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1373,
														"initialValue": {
															"arguments": [
																{
																	"id": 1371,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "828:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1369,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:6"
													},
													{
														"assignments": [
															1375
														],
														"declarations": [
															{
																"constant": false,
																"id": 1375,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1396,
																"src": "849:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1376,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:6"
													},
													{
														"AST": {
															"nativeSrc": "930:67:6",
															"nodeType": "YulBlock",
															"src": "930:67:6",
															"statements": [
																{
																	"nativeSrc": "948:35:6",
																	"nodeType": "YulAssignment",
																	"src": "948:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:6",
																						"nodeType": "YulLiteral",
																						"src": "971:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:6"
																				},
																				"nativeSrc": "967:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:6"
																		},
																		"nativeSrc": "955:28:6",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1368,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1359,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1375,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:6",
																"valueSize": 1
															}
														],
														"id": 1377,
														"nodeType": "InlineAssembly",
														"src": "921:76:6"
													},
													{
														"body": {
															"id": 1392,
															"nodeType": "Block",
															"src": "1023:269:6",
															"statements": [
																{
																	"expression": {
																		"id": 1380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:6",
																		"subExpression": {
																			"id": 1379,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1375,
																			"src": "1041:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1381,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:6"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:6",
																		"nodeType": "YulBlock",
																		"src": "1124:86:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:6",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:6"
																									},
																									"nativeSrc": "1164:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:6"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:6"
																							},
																							"nativeSrc": "1159:32:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:6",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:6"
																					},
																					"nativeSrc": "1146:46:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:6"
																				},
																				"nativeSrc": "1146:46:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1340,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1375,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1353,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 1382,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:6"
																},
																{
																	"expression": {
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1383,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1353,
																			"src": "1227:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1386,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1387,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1353,
																			"src": "1260:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1391,
																	"nodeType": "IfStatement",
																	"src": "1256:21:6",
																	"trueBody": {
																		"id": 1390,
																		"nodeType": "Break",
																		"src": "1272:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1393,
														"nodeType": "WhileStatement",
														"src": "1010:282:6"
													},
													{
														"expression": {
															"id": 1394,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "1312:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1357,
														"id": 1395,
														"nodeType": "Return",
														"src": "1305:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "655:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:6"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "693:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:6"
									},
									"scope": 1585,
									"src": "637:698:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "1511:92:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "1542:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:6",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1418,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1401,
																			"src": "1588:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1416,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2780,
																			"src": "1573:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2780_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:6",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2779,
																		"src": "1573:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1415,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "1564:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1406,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:6",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1405,
												"id": 1422,
												"nodeType": "Return",
												"src": "1521:75:6"
											}
										]
									},
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1459:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1400,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:6"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1496:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1403,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:6"
									},
									"scope": 1585,
									"src": "1435:168:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "1782:100:6",
										"statements": [
											{
												"id": 1442,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1433,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "1835:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1436,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1427,
																				"src": "1854:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1434,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2675,
																				"src": "1842:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2675_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2617,
																			"src": "1842:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1432,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1444,
																	1527,
																	1547
																],
																"referencedDeclaration": 1527,
																"src": "1823:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1431,
														"id": 1441,
														"nodeType": "Return",
														"src": "1816:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "1729:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:6"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "1767:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:6"
									},
									"scope": 1585,
									"src": "1708:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "2095:435:6",
										"statements": [
											{
												"assignments": [
													1455
												],
												"declarations": [
													{
														"constant": false,
														"id": 1455,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1526,
														"src": "2105:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1454,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1457,
												"initialValue": {
													"id": 1456,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1447,
													"src": "2126:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:6"
											},
											{
												"assignments": [
													1459
												],
												"declarations": [
													{
														"constant": false,
														"id": 1459,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1526,
														"src": "2141:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1458,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1468,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1463,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "2177:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1460,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:6"
											},
											{
												"expression": {
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1469,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "2198:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1471,
														"indexExpression": {
															"hexValue": "30",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:6"
											},
											{
												"expression": {
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1475,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "2223:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1477,
														"indexExpression": {
															"hexValue": "31",
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:6"
											},
											{
												"body": {
													"id": 1509,
													"nodeType": "Block",
													"src": "2293:95:6",
													"statements": [
														{
															"expression": {
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1495,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1459,
																		"src": "2307:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1497,
																	"indexExpression": {
																		"id": 1496,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1482,
																		"src": "2314:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1498,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "2319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1502,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1499,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1455,
																			"src": "2330:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1504,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:6"
														},
														{
															"expression": {
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1505,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "2361:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1508,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1489,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "2281:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1510,
												"initializationExpression": {
													"assignments": [
														1482
													],
													"declarations": [
														{
															"constant": false,
															"id": 1482,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1510,
															"src": "2253:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1481,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1488,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1484,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1449,
																"src": "2269:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:6",
														"subExpression": {
															"id": 1492,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "2290:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1494,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1511,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "2401:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1520,
												"nodeType": "IfStatement",
												"src": "2397:96:6",
												"trueBody": {
													"id": 1519,
													"nodeType": "Block",
													"src": "2418:75:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1515,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "2468:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1516,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "2475:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1514,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "2439:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1518,
															"nodeType": "RevertStatement",
															"src": "2432:50:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1523,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "2516:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1521,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1453,
												"id": 1525,
												"nodeType": "Return",
												"src": "2502:21:6"
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "2026:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "2041:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:6"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "2080:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:6"
									},
									"scope": 1585,
									"src": "2005:525:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "2762:75:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1540,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1530,
																			"src": "2807:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1538,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1536,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1543,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "2815:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1535,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1444,
															1527,
															1547
														],
														"referencedDeclaration": 1527,
														"src": "2779:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1534,
												"id": 1545,
												"nodeType": "Return",
												"src": "2772:58:6"
											}
										]
									},
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "2710:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:6"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "2747:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1532,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:6"
									},
									"scope": 1585,
									"src": "2689:148:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "2992:104:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1559,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "3015:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1557,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1564,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "3034:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1562,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1571,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1550,
																			"src": "3063:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1569,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1568,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1577,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1552,
																			"src": "3086:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1575,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1574,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1556,
												"id": 1582,
												"nodeType": "Return",
												"src": "3002:87:6"
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2929:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2946:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:6"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2986:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:6"
									},
									"scope": 1585,
									"src": "2914:182:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1586,
							"src": "251:2847:6",
							"usedErrors": [
								1350
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1609
						],
						"IERC165": [
							1621
						]
					},
					"id": 1610,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1589,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1610,
							"sourceUnit": 1622,
							"src": "140:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1588,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1621,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1591,
										"name": "IERC165",
										"nameLocations": [
											"687:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1621,
										"src": "687:7:7"
									},
									"id": 1592,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1590,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1609,
							"linearizedBaseContracts": [
								1609,
								1621
							],
							"name": "ERC165",
							"nameLocation": "677:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1620
									],
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "844:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1600,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "861:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1602,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1621_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1621_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1601,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1621",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1599,
												"id": 1606,
												"nodeType": "Return",
												"src": "854:47:7"
											}
										]
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "789:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1594,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:7"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "838:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:7"
									},
									"scope": 1609,
									"src": "762:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1610,
							"src": "659:251:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1621
						]
					},
					"id": 1622,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1611,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1612,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1621,
							"linearizedBaseContracts": [
								1621
							],
							"name": "IERC165",
							"nameLocation": "431:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "817:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1614,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:8"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "860:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:8"
									},
									"scope": 1621,
									"src": "790:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1622,
							"src": "421:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2675
						]
					},
					"id": 2676,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1623,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1624,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2675,
							"linearizedBaseContracts": [
								2675
							],
							"name": "Math",
							"nameLocation": "211:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:9",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1627,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:9"
									},
									"src": "277:29:9"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1632,
									"members": [
										{
											"id": 1628,
											"name": "Floor",
											"nameLocation": "336:5:9",
											"nodeType": "EnumValue",
											"src": "336:5:9"
										},
										{
											"id": 1629,
											"name": "Ceil",
											"nameLocation": "379:4:9",
											"nodeType": "EnumValue",
											"src": "379:4:9"
										},
										{
											"id": 1630,
											"name": "Trunc",
											"nameLocation": "421:5:9",
											"nodeType": "EnumValue",
											"src": "421:5:9"
										},
										{
											"id": 1631,
											"name": "Expand",
											"nameLocation": "451:6:9",
											"nodeType": "EnumValue",
											"src": "451:6:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:9",
									"nodeType": "EnumDefinition",
									"src": "312:169:9"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "661:140:9",
										"statements": [
											{
												"id": 1662,
												"nodeType": "UncheckedBlock",
												"src": "671:124:9",
												"statements": [
													{
														"assignments": [
															1645
														],
														"declarations": [
															{
																"constant": false,
																"id": 1645,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1662,
																"src": "695:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1644,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1649,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1646,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1635,
																"src": "707:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1647,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "711:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1650,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "730:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1651,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1635,
																"src": "734:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1657,
														"nodeType": "IfStatement",
														"src": "726:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1655,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1643,
															"id": 1656,
															"nodeType": "Return",
															"src": "737:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1659,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1645,
																	"src": "782:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1660,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1643,
														"id": 1661,
														"nodeType": "Return",
														"src": "768:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:9",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "612:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:9"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "646:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "652:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:9"
									},
									"scope": 2675,
									"src": "585:216:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "984:113:9",
										"statements": [
											{
												"id": 1690,
												"nodeType": "UncheckedBlock",
												"src": "994:97:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1676,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "1022:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1677,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "1026:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1683,
														"nodeType": "IfStatement",
														"src": "1018:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1681,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1675,
															"id": 1682,
															"nodeType": "Return",
															"src": "1029:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1685,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "1074:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1686,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "1078:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1688,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1675,
														"id": 1689,
														"nodeType": "Return",
														"src": "1060:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:9",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "924:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "935:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:9"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "969:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "975:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:9"
									},
									"scope": 2675,
									"src": "908:189:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "1283:417:9",
										"statements": [
											{
												"id": 1732,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1704,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "1551:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1711,
														"nodeType": "IfStatement",
														"src": "1547:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1709,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1703,
															"id": 1710,
															"nodeType": "Return",
															"src": "1559:16:9"
														}
													},
													{
														"assignments": [
															1713
														],
														"declarations": [
															{
																"constant": false,
																"id": 1713,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1732,
																"src": "1589:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1712,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1717,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1714,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "1601:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1715,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "1605:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1718,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "1624:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1719,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "1628:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1721,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "1633:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1727,
														"nodeType": "IfStatement",
														"src": "1620:33:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1703,
															"id": 1726,
															"nodeType": "Return",
															"src": "1636:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1729,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "1681:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1730,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1703,
														"id": 1731,
														"nodeType": "Return",
														"src": "1667:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:9",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "1223:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "1234:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:9"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "1268:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "1274:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:9"
									},
									"scope": 2675,
									"src": "1207:493:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "1887:114:9",
										"statements": [
											{
												"id": 1760,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1746,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1739,
																"src": "1925:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1753,
														"nodeType": "IfStatement",
														"src": "1921:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1751,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1745,
															"id": 1752,
															"nodeType": "Return",
															"src": "1933:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1755,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "1978:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1756,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "1982:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1758,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1745,
														"id": 1759,
														"nodeType": "Return",
														"src": "1964:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:9",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1827:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1838:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:9"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1872:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1878:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:9"
									},
									"scope": 2675,
									"src": "1811:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1789,
										"nodeType": "Block",
										"src": "2198:114:9",
										"statements": [
											{
												"id": 1788,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1774,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "2236:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1781,
														"nodeType": "IfStatement",
														"src": "2232:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1779,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1773,
															"id": 1780,
															"nodeType": "Return",
															"src": "2244:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1783,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1765,
																		"src": "2289:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1784,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "2293:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1786,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1773,
														"id": 1787,
														"nodeType": "Return",
														"src": "2275:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "2138:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "2149:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:9"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "2183:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1769,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "2189:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:9"
									},
									"scope": 2675,
									"src": "2122:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "2449:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1800,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "2466:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1801,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "2470:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1804,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "2478:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:9",
													"trueExpression": {
														"id": 1803,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "2474:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1799,
												"id": 1806,
												"nodeType": "Return",
												"src": "2459:20:9"
											}
										]
									},
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "2395:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "2406:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:9"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "2440:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:9"
									},
									"scope": 2675,
									"src": "2382:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1825,
										"nodeType": "Block",
										"src": "2624:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1818,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "2641:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1819,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "2645:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1822,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "2653:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:9",
													"trueExpression": {
														"id": 1821,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "2649:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1817,
												"id": 1824,
												"nodeType": "Return",
												"src": "2634:20:9"
											}
										]
									},
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "2570:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "2581:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:9"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "2615:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:9"
									},
									"scope": 2675,
									"src": "2557:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1848,
										"nodeType": "Block",
										"src": "2845:82:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1836,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "2900:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1837,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "2904:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1840,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "2910:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1841,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1831,
																		"src": "2914:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1843,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1835,
												"id": 1847,
												"nodeType": "Return",
												"src": "2892:28:9"
											}
										]
									},
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "2791:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "2802:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:9"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "2836:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:9"
									},
									"scope": 2675,
									"src": "2774:153:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "3219:260:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1859,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "3233:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1867,
												"nodeType": "IfStatement",
												"src": "3229:127:9",
												"trueBody": {
													"id": 1866,
													"nodeType": "Block",
													"src": "3241:115:9",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1862,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1852,
																	"src": "3340:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1863,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1854,
																	"src": "3344:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1858,
															"id": 1865,
															"nodeType": "Return",
															"src": "3333:12:9"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1868,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "3444:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1872,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1852,
																			"src": "3458:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1875,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1876,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "3467:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1858,
												"id": 1881,
												"nodeType": "Return",
												"src": "3437:35:9"
											}
										]
									},
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "3165:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "3176:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:9"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "3210:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:9"
									},
									"scope": 2675,
									"src": "3148:331:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "3901:4018:9",
										"statements": [
											{
												"id": 2007,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:9",
												"statements": [
													{
														"assignments": [
															1896
														],
														"declarations": [
															{
																"constant": false,
																"id": 1896,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 2007,
																"src": "4232:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1895,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1900,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1897,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "4248:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1898,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1888,
																"src": "4252:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:9"
													},
													{
														"assignments": [
															1902
														],
														"declarations": [
															{
																"constant": false,
																"id": 1902,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 2007,
																"src": "4312:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1901,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1903,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:9"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:9",
															"nodeType": "YulBlock",
															"src": "4392:122:9",
															"statements": [
																{
																	"nativeSrc": "4410:30:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:9"
																				},
																				"nativeSrc": "4433:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:9"
																		},
																		"nativeSrc": "4420:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:9",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:9",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:9"
																				},
																				"nativeSrc": "4470:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:9"
																				},
																				"nativeSrc": "4486:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:9"
																		},
																		"nativeSrc": "4466:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1902,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1886,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1888,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:9",
																"valueSize": 1
															}
														],
														"id": 1904,
														"nodeType": "InlineAssembly",
														"src": "4383:131:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1905,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "4595:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1913,
														"nodeType": "IfStatement",
														"src": "4591:368:9",
														"trueBody": {
															"id": 1912,
															"nodeType": "Block",
															"src": "4607:352:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1908,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1896,
																			"src": "4925:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1909,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1890,
																			"src": "4933:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1894,
																	"id": 1911,
																	"nodeType": "Return",
																	"src": "4918:26:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1914,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1890,
																"src": "5065:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1915,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "5080:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1921,
														"nodeType": "IfStatement",
														"src": "5061:88:9",
														"trueBody": {
															"id": 1920,
															"nodeType": "Block",
															"src": "5087:62:9",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1917,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "5112:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1919,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:9"
																}
															]
														}
													},
													{
														"assignments": [
															1923
														],
														"declarations": [
															{
																"constant": false,
																"id": 1923,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 2007,
																"src": "5404:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1922,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1924,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:9"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:9",
															"nodeType": "YulBlock",
															"src": "5444:291:9",
															"statements": [
																{
																	"nativeSrc": "5513:38:9",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:9"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:9"
																		},
																		"nativeSrc": "5526:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:9",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:9"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:9",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:9"
																				},
																				"nativeSrc": "5653:20:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:9"
																		},
																		"nativeSrc": "5642:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:9",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:9"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:9"
																		},
																		"nativeSrc": "5700:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1890,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1902,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1902,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1923,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1923,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1923,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1886,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1888,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:9",
																"valueSize": 1
															}
														],
														"id": 1925,
														"nodeType": "InlineAssembly",
														"src": "5435:300:9"
													},
													{
														"assignments": [
															1927
														],
														"declarations": [
															{
																"constant": false,
																"id": 1927,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 2007,
																"src": "5939:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1926,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1934,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1928,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1890,
																"src": "5954:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1930,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1890,
																			"src": "5973:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1932,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:9"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:9",
															"nodeType": "YulBlock",
															"src": "6008:362:9",
															"statements": [
																{
																	"nativeSrc": "6073:37:9",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:9"
																		},
																		"nativeSrc": "6088:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:9"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:9",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:9"
																		},
																		"nativeSrc": "6186:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:9",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:9",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:9"
																						},
																						"nativeSrc": "6333:12:9",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:9"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:9"
																				},
																				"nativeSrc": "6329:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:9"
																		},
																		"nativeSrc": "6325:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1890,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1890,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1927,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1927,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1927,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1927,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1927,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:9",
																"valueSize": 1
															}
														],
														"id": 1935,
														"nodeType": "InlineAssembly",
														"src": "5999:371:9"
													},
													{
														"expression": {
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1936,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "6436:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1937,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "6445:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1938,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1927,
																	"src": "6453:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1941,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:9"
													},
													{
														"assignments": [
															1943
														],
														"declarations": [
															{
																"constant": false,
																"id": 1943,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 2007,
																"src": "6775:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1942,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1950,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1945,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1890,
																			"src": "6798:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1947,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:9"
													},
													{
														"expression": {
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1951,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "7031:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1953,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "7046:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1954,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1943,
																		"src": "7060:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1958,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:9"
													},
													{
														"expression": {
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1959,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "7100:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1961,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "7115:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1962,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1943,
																		"src": "7129:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1966,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:9"
													},
													{
														"expression": {
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1967,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "7170:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1969,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "7185:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1970,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1943,
																		"src": "7199:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1974,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:9"
													},
													{
														"expression": {
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1975,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "7240:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1977,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "7255:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1978,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1943,
																		"src": "7269:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1982,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:9"
													},
													{
														"expression": {
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1983,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "7310:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1985,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "7325:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1986,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1943,
																		"src": "7339:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1990,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:9"
													},
													{
														"expression": {
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1991,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "7381:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1993,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "7396:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1994,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1943,
																		"src": "7410:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1998,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:9"
													},
													{
														"expression": {
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1999,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1893,
																"src": "7851:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2000,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "7860:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2001,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "7868:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2004,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:9"
													},
													{
														"expression": {
															"id": 2005,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "7896:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1894,
														"id": 2006,
														"nodeType": "Return",
														"src": "7889:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "3819:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "3830:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "3841:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:9"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "3885:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:9"
									},
									"scope": 2675,
									"src": "3803:4116:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "8161:192:9",
										"statements": [
											{
												"assignments": [
													2025
												],
												"declarations": [
													{
														"constant": false,
														"id": 2025,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2051,
														"src": "8171:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2024,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2031,
												"initialValue": {
													"arguments": [
														{
															"id": 2027,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "8195:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2028,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "8198:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2029,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "8201:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2026,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2009,
															2052
														],
														"referencedDeclaration": 2009,
														"src": "8188:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2033,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "8244:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1632",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1632",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2032,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2674,
															"src": "8227:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1632_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2036,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "8264:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2037,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "8267:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2038,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "8270:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2035,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2048,
												"nodeType": "IfStatement",
												"src": "8223:101:9",
												"trueBody": {
													"id": 2047,
													"nodeType": "Block",
													"src": "8288:36:9",
													"statements": [
														{
															"expression": {
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2043,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2025,
																	"src": "8302:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2046,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2049,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2025,
													"src": "8340:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2023,
												"id": 2050,
												"nodeType": "Return",
												"src": "8333:13:9"
											}
										]
									},
									"documentation": {
										"id": 2010,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "8067:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "8078:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "8089:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "8110:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1632",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2017,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1632,
														"src": "8110:8:9"
													},
													"referencedDeclaration": 1632,
													"src": "8110:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1632",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:9"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "8152:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:9"
									},
									"scope": 2675,
									"src": "8051:302:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2163,
										"nodeType": "Block",
										"src": "8644:1585:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2060,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2055,
														"src": "8658:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2066,
												"nodeType": "IfStatement",
												"src": "8654:45:9",
												"trueBody": {
													"id": 2065,
													"nodeType": "Block",
													"src": "8666:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2059,
															"id": 2064,
															"nodeType": "Return",
															"src": "8680:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													2068
												],
												"declarations": [
													{
														"constant": false,
														"id": 2068,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2163,
														"src": "9378:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2077,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2071,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2055,
																			"src": "9406:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2070,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2331,
																			2366
																		],
																		"referencedDeclaration": 2331,
																		"src": "9401:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2075,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:9"
											},
											{
												"id": 2162,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:9",
												"statements": [
													{
														"expression": {
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2078,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "9839:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2079,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "9849:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2080,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "9858:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2081,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "9862:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2084,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2088,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:9"
													},
													{
														"expression": {
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2089,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "9888:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2090,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "9898:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2093,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2091,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "9907:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2092,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "9911:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2095,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2099,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:9"
													},
													{
														"expression": {
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2100,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "9937:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2101,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "9947:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2104,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2102,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "9956:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2103,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "9960:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2106,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2110,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:9"
													},
													{
														"expression": {
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2111,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "9986:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2112,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "9996:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2113,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "10005:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2114,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "10009:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2117,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2121,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:9"
													},
													{
														"expression": {
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2122,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "10035:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2123,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "10045:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2124,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "10054:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2125,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "10058:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2128,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2132,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:9"
													},
													{
														"expression": {
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2133,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "10084:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2134,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "10094:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2135,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "10103:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2136,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "10107:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2139,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2143,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:9"
													},
													{
														"expression": {
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2144,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "10133:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2145,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "10143:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2146,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "10152:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2147,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "10156:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2150,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2154,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2156,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2068,
																	"src": "10193:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2157,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2055,
																		"src": "10201:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2158,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2068,
																		"src": "10205:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2155,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1826,
																"src": "10189:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2059,
														"id": 2161,
														"nodeType": "Return",
														"src": "10182:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "8601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:9"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "8635:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:9"
									},
									"scope": 2675,
									"src": "8587:1642:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2198,
										"nodeType": "Block",
										"src": "10405:164:9",
										"statements": [
											{
												"id": 2197,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:9",
												"statements": [
													{
														"assignments": [
															2176
														],
														"declarations": [
															{
																"constant": false,
																"id": 2176,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2197,
																"src": "10439:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2175,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2180,
														"initialValue": {
															"arguments": [
																{
																	"id": 2178,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "10461:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2177,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2164,
																	2199
																],
																"referencedDeclaration": 2164,
																"src": "10456:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2181,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "10484:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2183,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2170,
																						"src": "10511:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1632",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1632",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2182,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2674,
																					"src": "10494:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1632_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2187,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2185,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2176,
																						"src": "10524:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2186,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2176,
																						"src": "10533:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2188,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2167,
																					"src": "10542:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2194,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2174,
														"id": 2196,
														"nodeType": "Return",
														"src": "10477:75:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2165,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "10343:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "10354:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1632",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2169,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2168,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1632,
														"src": "10354:8:9"
													},
													"referencedDeclaration": 1632,
													"src": "10354:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1632",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:9"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "10396:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:9"
									},
									"scope": 2675,
									"src": "10329:240:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "10760:922:9",
										"statements": [
											{
												"assignments": [
													2208
												],
												"declarations": [
													{
														"constant": false,
														"id": 2208,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2330,
														"src": "10770:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2207,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2210,
												"initialValue": {
													"hexValue": "30",
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:9"
											},
											{
												"id": 2327,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2211,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "10826:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2225,
														"nodeType": "IfStatement",
														"src": "10822:99:9",
														"trueBody": {
															"id": 2224,
															"nodeType": "Block",
															"src": "10844:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2216,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2202,
																			"src": "10862:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2219,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:9"
																},
																{
																	"expression": {
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2220,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "10893:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2223,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2226,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "10938:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2240,
														"nodeType": "IfStatement",
														"src": "10934:96:9",
														"trueBody": {
															"id": 2239,
															"nodeType": "Block",
															"src": "10955:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2231,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2202,
																			"src": "10973:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2234,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:9"
																},
																{
																	"expression": {
																		"id": 2237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2235,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "11003:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2238,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2241,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "11047:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2255,
														"nodeType": "IfStatement",
														"src": "11043:96:9",
														"trueBody": {
															"id": 2254,
															"nodeType": "Block",
															"src": "11064:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2246,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2202,
																			"src": "11082:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2249,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:9"
																},
																{
																	"expression": {
																		"id": 2252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2250,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "11112:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2253,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2256,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "11156:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2270,
														"nodeType": "IfStatement",
														"src": "11152:96:9",
														"trueBody": {
															"id": 2269,
															"nodeType": "Block",
															"src": "11173:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2261,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2202,
																			"src": "11191:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2264,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:9"
																},
																{
																	"expression": {
																		"id": 2267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2265,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "11221:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2268,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2271,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "11265:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2285,
														"nodeType": "IfStatement",
														"src": "11261:93:9",
														"trueBody": {
															"id": 2284,
															"nodeType": "Block",
															"src": "11281:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2276,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2202,
																			"src": "11299:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2279,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:9"
																},
																{
																	"expression": {
																		"id": 2282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2280,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "11328:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2283,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2286,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "11371:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2300,
														"nodeType": "IfStatement",
														"src": "11367:93:9",
														"trueBody": {
															"id": 2299,
															"nodeType": "Block",
															"src": "11387:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2291,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2202,
																			"src": "11405:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2294,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:9"
																},
																{
																	"expression": {
																		"id": 2297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2295,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "11434:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2298,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2301,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "11477:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2315,
														"nodeType": "IfStatement",
														"src": "11473:93:9",
														"trueBody": {
															"id": 2314,
															"nodeType": "Block",
															"src": "11493:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2306,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2202,
																			"src": "11511:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2309,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:9"
																},
																{
																	"expression": {
																		"id": 2312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2310,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "11540:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2313,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2316,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "11583:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2326,
														"nodeType": "IfStatement",
														"src": "11579:64:9",
														"trueBody": {
															"id": 2325,
															"nodeType": "Block",
															"src": "11599:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2321,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "11617:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2324,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2328,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2208,
													"src": "11669:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2206,
												"id": 2329,
												"nodeType": "Return",
												"src": "11662:13:9"
											}
										]
									},
									"documentation": {
										"id": 2200,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:9",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "10713:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:9"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "10751:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:9"
									},
									"scope": 2675,
									"src": "10699:983:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2365,
										"nodeType": "Block",
										"src": "11915:168:9",
										"statements": [
											{
												"id": 2364,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:9",
												"statements": [
													{
														"assignments": [
															2343
														],
														"declarations": [
															{
																"constant": false,
																"id": 2343,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2364,
																"src": "11949:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2342,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2347,
														"initialValue": {
															"arguments": [
																{
																	"id": 2345,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "11971:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2344,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2331,
																	2366
																],
																"referencedDeclaration": 2331,
																"src": "11966:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2348,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2343,
																"src": "11998:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2350,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2337,
																						"src": "12025:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1632",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1632",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2349,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2674,
																					"src": "12008:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1632_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2354,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2352,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2353,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2343,
																						"src": "12043:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2355,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2334,
																					"src": "12052:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2361,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2341,
														"id": 2363,
														"nodeType": "Return",
														"src": "11991:75:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2332,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "11849:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "11864:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1632",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2336,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2335,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1632,
														"src": "11864:8:9"
													},
													"referencedDeclaration": 1632,
													"src": "11864:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1632",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:9"
									},
									"returnParameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "11906:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:9"
									},
									"scope": 2675,
									"src": "11835:248:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2494,
										"nodeType": "Block",
										"src": "12276:854:9",
										"statements": [
											{
												"assignments": [
													2375
												],
												"declarations": [
													{
														"constant": false,
														"id": 2375,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2494,
														"src": "12286:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2377,
												"initialValue": {
													"hexValue": "30",
													"id": 2376,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:9"
											},
											{
												"id": 2491,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2378,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2369,
																"src": "12342:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2394,
														"nodeType": "IfStatement",
														"src": "12338:103:9",
														"trueBody": {
															"id": 2393,
															"nodeType": "Block",
															"src": "12361:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2383,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2369,
																			"src": "12379:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2385,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2388,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:9"
																},
																{
																	"expression": {
																		"id": 2391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2389,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "12414:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2392,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2395,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2369,
																"src": "12458:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2411,
														"nodeType": "IfStatement",
														"src": "12454:103:9",
														"trueBody": {
															"id": 2410,
															"nodeType": "Block",
															"src": "12477:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2400,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2369,
																			"src": "12495:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2405,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:9"
																},
																{
																	"expression": {
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2406,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "12530:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2409,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2369,
																"src": "12574:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2428,
														"nodeType": "IfStatement",
														"src": "12570:103:9",
														"trueBody": {
															"id": 2427,
															"nodeType": "Block",
															"src": "12593:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2417,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2369,
																			"src": "12611:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2422,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:9"
																},
																{
																	"expression": {
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2423,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "12646:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2426,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2429,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2369,
																"src": "12690:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2445,
														"nodeType": "IfStatement",
														"src": "12686:100:9",
														"trueBody": {
															"id": 2444,
															"nodeType": "Block",
															"src": "12708:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2434,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2369,
																			"src": "12726:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2439,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:9"
																},
																{
																	"expression": {
																		"id": 2442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2440,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "12760:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2443,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2446,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2369,
																"src": "12803:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2462,
														"nodeType": "IfStatement",
														"src": "12799:100:9",
														"trueBody": {
															"id": 2461,
															"nodeType": "Block",
															"src": "12821:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2451,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2369,
																			"src": "12839:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2456,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:9"
																},
																{
																	"expression": {
																		"id": 2459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2457,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "12873:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2460,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2463,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2369,
																"src": "12916:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2479,
														"nodeType": "IfStatement",
														"src": "12912:100:9",
														"trueBody": {
															"id": 2478,
															"nodeType": "Block",
															"src": "12934:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2468,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2369,
																			"src": "12952:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2473,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:9"
																},
																{
																	"expression": {
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2474,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "12986:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2477,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2480,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2369,
																"src": "13029:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2490,
														"nodeType": "IfStatement",
														"src": "13025:66:9",
														"trueBody": {
															"id": 2489,
															"nodeType": "Block",
															"src": "13047:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2485,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "13065:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2492,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2375,
													"src": "13117:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2373,
												"id": 2493,
												"nodeType": "Return",
												"src": "13110:13:9"
											}
										]
									},
									"documentation": {
										"id": 2367,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:9",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "12229:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:9"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "12267:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:9"
									},
									"scope": 2675,
									"src": "12214:916:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2529,
										"nodeType": "Block",
										"src": "13365:170:9",
										"statements": [
											{
												"id": 2528,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:9",
												"statements": [
													{
														"assignments": [
															2507
														],
														"declarations": [
															{
																"constant": false,
																"id": 2507,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2528,
																"src": "13399:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2506,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2511,
														"initialValue": {
															"arguments": [
																{
																	"id": 2509,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2498,
																	"src": "13422:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2508,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2495,
																	2530
																],
																"referencedDeclaration": 2495,
																"src": "13416:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2512,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "13449:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2514,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2501,
																						"src": "13476:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1632",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1632",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2513,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2674,
																					"src": "13459:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1632_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2518,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2516,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2517,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2507,
																						"src": "13495:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2519,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "13504:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2505,
														"id": 2527,
														"nodeType": "Return",
														"src": "13442:76:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2496,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "13299:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "13314:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1632",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2500,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2499,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1632,
														"src": "13314:8:9"
													},
													"referencedDeclaration": 1632,
													"src": "13314:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1632",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:9"
									},
									"returnParameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2530,
												"src": "13356:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:9"
									},
									"scope": 2675,
									"src": "13284:251:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2616,
										"nodeType": "Block",
										"src": "13855:600:9",
										"statements": [
											{
												"assignments": [
													2539
												],
												"declarations": [
													{
														"constant": false,
														"id": 2539,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2616,
														"src": "13865:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2538,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2541,
												"initialValue": {
													"hexValue": "30",
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:9"
											},
											{
												"id": 2613,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2542,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2533,
																	"src": "13921:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2556,
														"nodeType": "IfStatement",
														"src": "13917:98:9",
														"trueBody": {
															"id": 2555,
															"nodeType": "Block",
															"src": "13939:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2547,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "13957:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2550,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:9"
																},
																{
																	"expression": {
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2551,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2539,
																			"src": "13988:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2554,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2533,
																	"src": "14032:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2571,
														"nodeType": "IfStatement",
														"src": "14028:95:9",
														"trueBody": {
															"id": 2570,
															"nodeType": "Block",
															"src": "14049:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2562,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "14067:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2565,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:9"
																},
																{
																	"expression": {
																		"id": 2568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2566,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2539,
																			"src": "14097:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2569,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2572,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2533,
																	"src": "14140:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2586,
														"nodeType": "IfStatement",
														"src": "14136:95:9",
														"trueBody": {
															"id": 2585,
															"nodeType": "Block",
															"src": "14157:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2577,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "14175:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2580,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:9"
																},
																{
																	"expression": {
																		"id": 2583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2581,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2539,
																			"src": "14205:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2584,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2587,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2533,
																	"src": "14248:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2601,
														"nodeType": "IfStatement",
														"src": "14244:95:9",
														"trueBody": {
															"id": 2600,
															"nodeType": "Block",
															"src": "14265:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2592,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "14283:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2595,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:9"
																},
																{
																	"expression": {
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2596,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2539,
																			"src": "14313:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2599,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2602,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2533,
																	"src": "14356:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2612,
														"nodeType": "IfStatement",
														"src": "14352:64:9",
														"trueBody": {
															"id": 2611,
															"nodeType": "Block",
															"src": "14372:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2607,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2539,
																			"src": "14390:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2610,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2614,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2539,
													"src": "14442:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2537,
												"id": 2615,
												"nodeType": "Return",
												"src": "14435:13:9"
											}
										]
									},
									"documentation": {
										"id": 2531,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:9",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "13808:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:9"
									},
									"returnParameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "13846:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:9"
									},
									"scope": 2675,
									"src": "13792:663:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2654,
										"nodeType": "Block",
										"src": "14692:177:9",
										"statements": [
											{
												"id": 2653,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:9",
												"statements": [
													{
														"assignments": [
															2629
														],
														"declarations": [
															{
																"constant": false,
																"id": 2629,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2653,
																"src": "14726:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2628,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2633,
														"initialValue": {
															"arguments": [
																{
																	"id": 2631,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2620,
																	"src": "14750:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2630,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2617,
																	2655
																],
																"referencedDeclaration": 2617,
																"src": "14743:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2634,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2629,
																"src": "14777:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2636,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2623,
																						"src": "14804:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1632",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1632",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2635,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2674,
																					"src": "14787:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1632_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2643,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2638,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2641,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2639,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2629,
																									"src": "14823:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2640,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2642,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2644,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2620,
																					"src": "14838:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2650,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2627,
														"id": 2652,
														"nodeType": "Return",
														"src": "14770:82:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2618,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "14626:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "14641:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1632",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2622,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2621,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1632,
														"src": "14641:8:9"
													},
													"referencedDeclaration": 1632,
													"src": "14641:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1632",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:9"
									},
									"returnParameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "14683:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:9"
									},
									"scope": 2675,
									"src": "14610:259:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2673,
										"nodeType": "Block",
										"src": "15067:48:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2666,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2659,
																	"src": "15090:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1632",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1632",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2664,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2663,
												"id": 2672,
												"nodeType": "Return",
												"src": "15077:31:9"
											}
										]
									},
									"documentation": {
										"id": 2656,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:9",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "15019:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1632",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2658,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2657,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1632,
														"src": "15019:8:9"
													},
													"referencedDeclaration": 1632,
													"src": "15019:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1632",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:9"
									},
									"returnParameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "15061:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:9"
									},
									"scope": 2675,
									"src": "14993:122:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2676,
							"src": "203:14914:9",
							"usedErrors": [
								1627
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2780
						]
					},
					"id": 2781,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2677,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2678,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:10",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2780,
							"linearizedBaseContracts": [
								2780
							],
							"name": "SignedMath",
							"nameLocation": "224:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2695,
										"nodeType": "Block",
										"src": "376:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2688,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2681,
															"src": "393:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2689,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2683,
															"src": "397:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2692,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2683,
														"src": "405:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:10",
													"trueExpression": {
														"id": 2691,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2681,
														"src": "401:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2687,
												"id": 2694,
												"nodeType": "Return",
												"src": "386:20:10"
											}
										]
									},
									"documentation": {
										"id": 2679,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:10",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "325:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2680,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "335:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2682,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:10"
									},
									"returnParameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "368:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2685,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:10"
									},
									"scope": 2780,
									"src": "312:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2713,
										"nodeType": "Block",
										"src": "555:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2706,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "572:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2707,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2701,
															"src": "576:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2710,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2701,
														"src": "584:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:10",
													"trueExpression": {
														"id": 2709,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2699,
														"src": "580:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2705,
												"id": 2712,
												"nodeType": "Return",
												"src": "565:20:10"
											}
										]
									},
									"documentation": {
										"id": 2697,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:10",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "504:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2698,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "514:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2700,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:10"
									},
									"returnParameters": {
										"id": 2705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "547:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2703,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:10"
									},
									"scope": 2780,
									"src": "491:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2757,
										"nodeType": "Block",
										"src": "797:162:10",
										"statements": [
											{
												"assignments": [
													2725
												],
												"declarations": [
													{
														"constant": false,
														"id": 2725,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 2757,
														"src": "859:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2724,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2738,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2726,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2717,
																	"src": "871:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2727,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2719,
																	"src": "875:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2729,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2730,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2717,
																				"src": "882:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2731,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2719,
																				"src": "886:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2733,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2736,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2739,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2725,
														"src": "911:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2744,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2725,
																						"src": "931:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2743,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2742,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2740,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2749,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2717,
																				"src": "945:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2750,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2719,
																				"src": "949:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2752,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2754,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2723,
												"id": 2756,
												"nodeType": "Return",
												"src": "904:48:10"
											}
										]
									},
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:10",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "746:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2716,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "756:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2718,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:10"
									},
									"returnParameters": {
										"id": 2723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "789:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2721,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:10"
									},
									"scope": 2780,
									"src": "729:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2778,
										"nodeType": "Block",
										"src": "1103:158:10",
										"statements": [
											{
												"id": 2777,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2768,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2761,
																			"src": "1228:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:10",
																		"subExpression": {
																			"id": 2772,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2761,
																			"src": "1242:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:10",
																	"trueExpression": {
																		"id": 2771,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2761,
																		"src": "1237:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2766,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2765,
														"id": 2776,
														"nodeType": "Return",
														"src": "1213:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2759,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:10",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2779,
												"src": "1061:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2760,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:10"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2779,
												"src": "1094:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:10"
									},
									"scope": 2780,
									"src": "1048:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2781,
							"src": "216:1047:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:10"
				},
				"id": 10
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Context": [
							1330
						],
						"ERC165": [
							1609
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							1621
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"Strings": [
							1585
						],
						"VotingUSP": [
							3032
						]
					},
					"id": 3033,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2782,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3033,
							"sourceUnit": 1146,
							"src": "58:57:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2784,
										"name": "ERC721",
										"nameLocations": [
											"139:6:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "139:6:11"
									},
									"id": 2785,
									"nodeType": "InheritanceSpecifier",
									"src": "139:6:11"
								}
							],
							"canonicalName": "VotingUSP",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3032,
							"linearizedBaseContracts": [
								3032,
								1145,
								89,
								1308,
								1262,
								1609,
								1621,
								1330
							],
							"name": "VotingUSP",
							"nameLocation": "126:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "75794a3c",
									"id": 2787,
									"mutability": "mutable",
									"name": "nextTokenId",
									"nameLocation": "167:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 3032,
									"src": "152:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2786,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "152:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "63f67b54",
									"id": 2790,
									"mutability": "mutable",
									"name": "votingEther",
									"nameLocation": "199:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 3032,
									"src": "184:55:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2788,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "184:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e303030303030303030303030303030303030",
										"id": 2789,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "213:26:11",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0.000000000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "429b62e5",
									"id": 2794,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "279:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 3032,
									"src": "245:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
										"typeString": "mapping(address => string)"
									},
									"typeName": {
										"id": 2793,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2791,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "253:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "245:26:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
											"typeString": "mapping(address => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2792,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "264:6:11",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "23202fe3",
									"id": 2798,
									"mutability": "mutable",
									"name": "candidates_names",
									"nameLocation": "342:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 3032,
									"src": "308:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
										"typeString": "mapping(address => string)"
									},
									"typeName": {
										"id": 2797,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2795,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "316:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "308:26:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
											"typeString": "mapping(address => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2796,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "327:6:11",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d8bff5a5",
									"id": 2802,
									"mutability": "mutable",
									"name": "votes",
									"nameLocation": "420:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 3032,
									"src": "385:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 2801,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2799,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "393:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "385:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2800,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "404:7:11",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78d66c39",
									"id": 2806,
									"mutability": "mutable",
									"name": "num_votes",
									"nameLocation": "489:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 3032,
									"src": "454:44:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2805,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2803,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "462:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "454:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2804,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "473:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2820,
										"nodeType": "Block",
										"src": "580:101:11",
										"statements": [
											{
												"expression": {
													"id": 2818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2813,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2794,
															"src": "590:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																"typeString": "mapping(address => string storage ref)"
															}
														},
														"id": 2816,
														"indexExpression": {
															"expression": {
																"id": 2814,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "597:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "601:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "597:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "590:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "41646d696e",
														"id": 2817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "611:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_a729ef4e25027bc652fc8b5c4d1d902947361fa7c8e7b4905e877823f27331b3",
															"typeString": "literal_string \"Admin\""
														},
														"value": "Admin"
													},
													"src": "590:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2819,
												"nodeType": "ExpressionStatement",
												"src": "590:28:11"
											}
										]
									},
									"id": 2821,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "566f74696e67555350",
													"id": 2809,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "560:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1dcd2ef49b1fb25ce3c32bdd2144149c66d2e70c82737e90b81508b0289d4628",
														"typeString": "literal_string \"VotingUSP\""
													},
													"value": "VotingUSP"
												},
												{
													"hexValue": "4d544b",
													"id": 2810,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "573:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 2811,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2808,
												"name": "ERC721",
												"nameLocations": [
													"553:6:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1145,
												"src": "553:6:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "553:26:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:2:11"
									},
									"returnParameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "580:0:11"
									},
									"scope": 3032,
									"src": "539:142:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2838,
										"nodeType": "Block",
										"src": "709:114:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2826,
																				"name": "admins",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2794,
																				"src": "733:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																					"typeString": "mapping(address => string storage ref)"
																				}
																			},
																			"id": 2829,
																			"indexExpression": {
																				"expression": {
																					"id": 2827,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "740:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "744:6:11",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "740:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "733:18:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		],
																		"id": 2825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "727:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2824,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "727:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "727:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 2831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "753:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "727:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "762:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "727:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e732063616e206578656375746520746869732066756e6374696f6e",
															"id": 2834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "765:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0",
																"typeString": "literal_string \"Only admins can execute this function\""
															},
															"value": "Only admins can execute this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_abcf67177d7619eefeefa9e8710135cd3ea972e4d106d8da3209f63f2143a5b0",
																"typeString": "literal_string \"Only admins can execute this function\""
															}
														],
														"id": 2823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "719:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "719:86:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2836,
												"nodeType": "ExpressionStatement",
												"src": "719:86:11"
											},
											{
												"id": 2837,
												"nodeType": "PlaceholderStatement",
												"src": "815:1:11"
											}
										]
									},
									"id": 2839,
									"name": "adminsOnly",
									"nameLocation": "696:10:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:11"
									},
									"src": "687:136:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2854,
										"nodeType": "Block",
										"src": "947:44:11",
										"statements": [
											{
												"expression": {
													"id": 2852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2848,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2794,
															"src": "957:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																"typeString": "mapping(address => string storage ref)"
															}
														},
														"id": 2850,
														"indexExpression": {
															"id": 2849,
															"name": "admim_adress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2841,
															"src": "964:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "957:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2851,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2843,
														"src": "980:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "957:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2853,
												"nodeType": "ExpressionStatement",
												"src": "957:27:11"
											}
										]
									},
									"functionSelector": "8edfc059",
									"id": 2855,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2846,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2845,
												"name": "adminsOnly",
												"nameLocations": [
													"936:10:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2839,
												"src": "936:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "936:10:11"
										}
									],
									"name": "addAdmim",
									"nameLocation": "876:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "admim_adress",
												"nameLocation": "893:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "885:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "921:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "907:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2842,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "907:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:42:11"
									},
									"returnParameters": {
										"id": 2847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:0:11"
									},
									"scope": 3032,
									"src": "867:124:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2867,
										"nodeType": "Block",
										"src": "1091:44:11",
										"statements": [
											{
												"expression": {
													"id": 2865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1101:27:11",
													"subExpression": {
														"baseExpression": {
															"id": 2862,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2794,
															"src": "1108:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																"typeString": "mapping(address => string storage ref)"
															}
														},
														"id": 2864,
														"indexExpression": {
															"id": 2863,
															"name": "admim_adress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "1115:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1108:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2866,
												"nodeType": "ExpressionStatement",
												"src": "1101:27:11"
											}
										]
									},
									"functionSelector": "b3849e2a",
									"id": 2868,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2860,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2859,
												"name": "adminsOnly",
												"nameLocations": [
													"1080:10:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2839,
												"src": "1080:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1080:10:11"
										}
									],
									"name": "deleteAdmim",
									"nameLocation": "1037:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "admim_adress",
												"nameLocation": "1057:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2868,
												"src": "1049:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:22:11"
									},
									"returnParameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1091:0:11"
									},
									"scope": 3032,
									"src": "1028:107:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2889,
										"nodeType": "Block",
										"src": "1263:99:11",
										"statements": [
											{
												"expression": {
													"id": 2881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2877,
															"name": "candidates_names",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2798,
															"src": "1273:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																"typeString": "mapping(address => string storage ref)"
															}
														},
														"id": 2879,
														"indexExpression": {
															"id": 2878,
															"name": "candidate_adress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2870,
															"src": "1290:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1273:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2880,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2872,
														"src": "1310:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1273:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2882,
												"nodeType": "ExpressionStatement",
												"src": "1273:41:11"
											},
											{
												"expression": {
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2883,
															"name": "num_votes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2806,
															"src": "1324:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2885,
														"indexExpression": {
															"id": 2884,
															"name": "candidate_adress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2870,
															"src": "1334:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1324:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1354:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1324:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2888,
												"nodeType": "ExpressionStatement",
												"src": "1324:31:11"
											}
										]
									},
									"functionSelector": "9a594f06",
									"id": 2890,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2875,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2874,
												"name": "adminsOnly",
												"nameLocations": [
													"1252:10:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2839,
												"src": "1252:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1252:10:11"
										}
									],
									"name": "addCandidate",
									"nameLocation": "1184:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "candidate_adress",
												"nameLocation": "1205:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "1197:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2872,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1237:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "1223:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1223:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:46:11"
									},
									"returnParameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1263:0:11"
									},
									"scope": 3032,
									"src": "1175:187:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2907,
										"nodeType": "Block",
										"src": "1465:102:11",
										"statements": [
											{
												"expression": {
													"id": 2900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1475:41:11",
													"subExpression": {
														"baseExpression": {
															"id": 2897,
															"name": "candidates_names",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2798,
															"src": "1482:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																"typeString": "mapping(address => string storage ref)"
															}
														},
														"id": 2899,
														"indexExpression": {
															"id": 2898,
															"name": "candidate_adress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2892,
															"src": "1499:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1482:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2901,
												"nodeType": "ExpressionStatement",
												"src": "1475:41:11"
											},
											{
												"expression": {
													"id": 2905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1526:34:11",
													"subExpression": {
														"baseExpression": {
															"id": 2902,
															"name": "num_votes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2806,
															"src": "1533:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2904,
														"indexExpression": {
															"id": 2903,
															"name": "candidate_adress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2892,
															"src": "1543:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1533:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2906,
												"nodeType": "ExpressionStatement",
												"src": "1526:34:11"
											}
										]
									},
									"functionSelector": "12ee1b0b",
									"id": 2908,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2895,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2894,
												"name": "adminsOnly",
												"nameLocations": [
													"1454:10:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2839,
												"src": "1454:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1454:10:11"
										}
									],
									"name": "deleteandidate",
									"nameLocation": "1404:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "candidate_adress",
												"nameLocation": "1427:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "1419:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1418:26:11"
									},
									"returnParameters": {
										"id": 2896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1465:0:11"
									},
									"scope": 3032,
									"src": "1395:172:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2919,
										"nodeType": "Block",
										"src": "1719:51:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2915,
														"name": "num_votes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2806,
														"src": "1736:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2917,
													"indexExpression": {
														"id": 2916,
														"name": "candidate_adress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2910,
														"src": "1746:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1736:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2914,
												"id": 2918,
												"nodeType": "Return",
												"src": "1729:34:11"
											}
										]
									},
									"functionSelector": "8a7c3a32",
									"id": 2920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showVotesCandidate",
									"nameLocation": "1643:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "candidate_adress",
												"nameLocation": "1670:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "1662:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:26:11"
									},
									"returnParameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "1710:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:9:11"
									},
									"scope": 3032,
									"src": "1634:136:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2954,
										"nodeType": "Block",
										"src": "1886:315:11",
										"statements": [
											{
												"assignments": [
													2926
												],
												"declarations": [
													{
														"constant": false,
														"id": 2926,
														"mutability": "mutable",
														"name": "voter",
														"nameLocation": "1904:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2954,
														"src": "1896:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2925,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1896:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2929,
												"initialValue": {
													"expression": {
														"id": 2927,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1912:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1916:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1912:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1896:26:11"
											},
											{
												"assignments": [
													2931
												],
												"declarations": [
													{
														"constant": false,
														"id": 2931,
														"mutability": "mutable",
														"name": "candidateAddress",
														"nameLocation": "1940:16:11",
														"nodeType": "VariableDeclaration",
														"scope": 2954,
														"src": "1932:24:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2930,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1932:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2935,
												"initialValue": {
													"baseExpression": {
														"id": 2932,
														"name": "votes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2802,
														"src": "1959:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 2934,
													"indexExpression": {
														"id": 2933,
														"name": "voter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2926,
														"src": "1965:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1959:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1932:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2937,
																"name": "candidateAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2931,
																"src": "2033:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2061:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2053:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2938,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2053:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2053:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2033:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520686176656e277420766f74656420796574",
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2065:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac",
																"typeString": "literal_string \"You haven't voted yet\""
															},
															"value": "You haven't voted yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33a5d23b3b1fd64604b90d0980cf8d6433a3e3373927a8c80e63e5bfac15e4ac",
																"typeString": "literal_string \"You haven't voted yet\""
															}
														],
														"id": 2936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2025:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2025:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2945,
												"nodeType": "ExpressionStatement",
												"src": "2025:64:11"
											},
											{
												"assignments": [
													2947
												],
												"declarations": [
													{
														"constant": false,
														"id": 2947,
														"mutability": "mutable",
														"name": "candidateName",
														"nameLocation": "2114:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 2954,
														"src": "2100:27:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2946,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2100:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2951,
												"initialValue": {
													"baseExpression": {
														"id": 2948,
														"name": "candidates_names",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "2130:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
															"typeString": "mapping(address => string storage ref)"
														}
													},
													"id": 2950,
													"indexExpression": {
														"id": 2949,
														"name": "candidateAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2931,
														"src": "2147:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2130:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2100:64:11"
											},
											{
												"expression": {
													"id": 2952,
													"name": "candidateName",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2947,
													"src": "2181:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2924,
												"id": 2953,
												"nodeType": "Return",
												"src": "2174:20:11"
											}
										]
									},
									"functionSelector": "3219ac2a",
									"id": 2955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showMyVote",
									"nameLocation": "1835:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1845:2:11"
									},
									"returnParameters": {
										"id": 2924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "1871:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2922,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1871:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:15:11"
									},
									"scope": 3032,
									"src": "1826:375:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3030,
										"nodeType": "Block",
										"src": "2287:656:11",
										"statements": [
											{
												"assignments": [
													2961
												],
												"declarations": [
													{
														"constant": false,
														"id": 2961,
														"mutability": "mutable",
														"name": "voter",
														"nameLocation": "2305:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3030,
														"src": "2297:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2960,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2297:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2964,
												"initialValue": {
													"expression": {
														"id": 2962,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2313:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2317:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2313:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2297:26:11"
											},
											{
												"assignments": [
													2966
												],
												"declarations": [
													{
														"constant": false,
														"id": 2966,
														"mutability": "mutable",
														"name": "votingValue",
														"nameLocation": "2341:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 3030,
														"src": "2333:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2965,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2333:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2969,
												"initialValue": {
													"expression": {
														"id": 2967,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2355:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2359:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "2355:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2333:31:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2973,
																				"name": "candidates_names",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2798,
																				"src": "2389:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
																					"typeString": "mapping(address => string storage ref)"
																				}
																			},
																			"id": 2975,
																			"indexExpression": {
																				"id": 2974,
																				"name": "candidate_adress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2957,
																				"src": "2406:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2389:34:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		],
																		"id": 2972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2383:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2971,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2383:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2383:41:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 2977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2425:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2383:48:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2434:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2383:52:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e646964617465206e6f742072656769737465726564",
															"id": 2980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2437:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e",
																"typeString": "literal_string \"Candidate not registered\""
															},
															"value": "Candidate not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6073c026eed7bddba0429c6b7828b5875bdff1acb68e3cea8a3b9d3ed7d3869e",
																"typeString": "literal_string \"Candidate not registered\""
															}
														],
														"id": 2970,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2375:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:89:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2982,
												"nodeType": "ExpressionStatement",
												"src": "2375:89:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2984,
																	"name": "votes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2802,
																	"src": "2482:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 2986,
																"indexExpression": {
																	"id": 2985,
																	"name": "voter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2961,
																	"src": "2488:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2482:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2506:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2498:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2987,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2498:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 2990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2498:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2482:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573732068617320616c726561647920766f746564",
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2510:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401",
																"typeString": "literal_string \"Address has already voted\""
															},
															"value": "Address has already voted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa4d994a166b73b88ab6d2367340648ef9d7df62ae572032f54cf4e47dc90401",
																"typeString": "literal_string \"Address has already voted\""
															}
														],
														"id": 2983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2474:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2474:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2994,
												"nodeType": "ExpressionStatement",
												"src": "2474:64:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2996,
																"name": "votingValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2966,
																"src": "2556:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2997,
																"name": "votingEther",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2790,
																"src": "2571:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2556:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420766f74696e672076616c7565",
															"id": 2999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2584:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3",
																"typeString": "literal_string \"Insufficient voting value\""
															},
															"value": "Insufficient voting value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f2fc59a8fa01ce5ae2b01832ed93339781376cf1cfce081f1227a4c707fb0b3",
																"typeString": "literal_string \"Insufficient voting value\""
															}
														],
														"id": 2995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2548:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2548:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3001,
												"nodeType": "ExpressionStatement",
												"src": "2548:64:11"
											},
											{
												"expression": {
													"id": 3010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3002,
															"name": "num_votes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2806,
															"src": "2650:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3004,
														"indexExpression": {
															"id": 3003,
															"name": "voter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2961,
															"src": "2660:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2650:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 3005,
																"name": "num_votes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2806,
																"src": "2669:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 3007,
															"indexExpression": {
																"id": 3006,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2961,
																"src": "2679:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2669:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2688:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2669:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2650:39:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3011,
												"nodeType": "ExpressionStatement",
												"src": "2650:39:11"
											},
											{
												"expression": {
													"id": 3016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3012,
															"name": "votes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2802,
															"src": "2699:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 3014,
														"indexExpression": {
															"id": 3013,
															"name": "voter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2961,
															"src": "2705:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2699:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3015,
														"name": "candidate_adress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2957,
														"src": "2714:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2699:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3017,
												"nodeType": "ExpressionStatement",
												"src": "2699:31:11"
											},
											{
												"assignments": [
													3019
												],
												"declarations": [
													{
														"constant": false,
														"id": 3019,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "2794:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 3030,
														"src": "2786:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3018,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2786:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3021,
												"initialValue": {
													"id": 3020,
													"name": "nextTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2787,
													"src": "2804:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2786:29:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3023,
															"name": "voter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2961,
															"src": "2835:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3024,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3019,
															"src": "2842:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3022,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															793
														],
														"referencedDeclaration": 767,
														"src": "2825:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2825:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3026,
												"nodeType": "ExpressionStatement",
												"src": "2825:25:11"
											},
											{
												"expression": {
													"id": 3028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2923:13:11",
													"subExpression": {
														"id": 3027,
														"name": "nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2787,
														"src": "2923:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3029,
												"nodeType": "ExpressionStatement",
												"src": "2923:13:11"
											}
										]
									},
									"functionSelector": "6dd7d8ea",
									"id": 3031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "2239:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "candidate_adress",
												"nameLocation": "2252:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "2244:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2244:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2243:26:11"
									},
									"returnParameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2287:0:11"
									},
									"scope": 3032,
									"src": "2230:713:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3033,
							"src": "117:2828:11",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "32:2914:11"
				},
				"id": 11
			}
		}
	}
}